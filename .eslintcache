[{"D:\\front-end\\src\\index.js":"1","D:\\front-end\\src\\App.js":"2","D:\\front-end\\src\\Store\\index.js":"3","D:\\front-end\\src\\Store\\user-slice.js":"4","D:\\front-end\\src\\Store\\theme-slice.js":"5","D:\\front-end\\src\\tools\\Redirector.js":"6","D:\\front-end\\src\\tools\\MultipartTest.js":"7","D:\\front-end\\src\\Store\\list-people-slice.js":"8","D:\\front-end\\src\\UI\\LoadingSpinner.js":"9","D:\\front-end\\src\\Store\\collab-posts-slice.js":"10","D:\\front-end\\src\\Store\\loading-slice.js":"11","D:\\front-end\\src\\Store\\detailed-post-slice.js":"12","D:\\front-end\\src\\Store\\posts-slice.js":"13","D:\\front-end\\src\\pages\\LandingPage\\LandingPage.js":"14","D:\\front-end\\src\\pages\\VerifyEmail\\VerifyEmail.js":"15","D:\\front-end\\src\\pages\\signUP\\Signup.js":"16","D:\\front-end\\src\\pages\\LoginPage\\Login.js":"17","D:\\front-end\\src\\pages\\Profile\\Profile.js":"18","D:\\front-end\\src\\pages\\ForgotPassword\\ForgotPassword.js":"19","D:\\front-end\\src\\pages\\ChangePassword\\ChangePassword.js":"20","D:\\front-end\\src\\pages\\signUP\\afterSignUp\\Bio.js":"21","D:\\front-end\\src\\pages\\signUP\\afterSignUp\\AddSkills.js":"22","D:\\front-end\\src\\pages\\signUP\\afterSignUp\\UserName.js":"23","D:\\front-end\\src\\pages\\Feed\\Feed.js":"24","D:\\front-end\\src\\pages\\signUP\\afterSignUp\\UploadProfile.js":"25","D:\\front-end\\src\\pages\\Profile\\V2\\ProfileV2.js":"26","D:\\front-end\\src\\pages\\collab\\CollabMain.js":"27","D:\\front-end\\src\\pages\\Feed\\navbar\\Navbar.js":"28","D:\\front-end\\src\\pages\\Chat\\Messages.js":"29","D:\\front-end\\src\\UI\\Input.js":"30","D:\\front-end\\src\\UI\\P.js":"31","D:\\front-end\\src\\UI\\Toggle.js":"32","D:\\front-end\\src\\UI\\LinkButton.js":"33","D:\\front-end\\src\\UI\\Card.js":"34","D:\\front-end\\src\\UI\\Loading.js":"35","D:\\front-end\\src\\UI\\FormError.js":"36","D:\\front-end\\src\\pages\\signUP\\SignUpHandlers.js":"37","D:\\front-end\\src\\pages\\LoginPage\\LoginHandler.js":"38","D:\\front-end\\src\\pages\\collab\\ListCollabs.js":"39","D:\\front-end\\src\\UI\\Radio.js":"40","D:\\front-end\\src\\pages\\Profile\\V2\\Projects.js":"41","D:\\front-end\\src\\pages\\Profile\\V2\\ListPatches.js":"42","D:\\front-end\\src\\pages\\Profile\\V2\\SkillsV2.js":"43","D:\\front-end\\src\\UI\\Button.js":"44","D:\\front-end\\src\\pages\\Feed\\navbar\\navElements.js":"45","D:\\front-end\\src\\UI\\ImageViewer.js":"46","D:\\front-end\\src\\pages\\Player\\VideoJS.js":"47","D:\\front-end\\src\\pages\\Profile\\sub\\EditProfile.js":"48","D:\\front-end\\src\\pages\\post\\DetailedPost.js":"49","D:\\front-end\\src\\UI\\cropper\\EditImage.js":"50","D:\\front-end\\src\\pages\\post\\AddComment.js":"51","D:\\front-end\\src\\pages\\post\\ListPosts.js":"52","D:\\front-end\\src\\URL\\signUpURL.js":"53","D:\\front-end\\src\\pages\\Chat\\Chatnav.js":"54","D:\\front-end\\src\\pages\\ChangePassword\\ChangePasswordHandler.js":"55","D:\\front-end\\src\\pages\\ForgotPassword\\ForgotPasswordHandler.js":"56","D:\\front-end\\src\\pages\\Profile\\V2\\ProjectsGitHub.js":"57","D:\\front-end\\src\\pages\\Profile\\useSideScroll.js":"58","D:\\front-end\\src\\pages\\post\\PostV2.js":"59","D:\\front-end\\src\\pages\\Profile\\V2\\AddProjects.js":"60","D:\\front-end\\src\\pages\\Profile\\V2\\ProfilePatchV2.js":"61","D:\\front-end\\src\\pages\\Profile\\V2\\ProjectPatch.js":"62","D:\\front-end\\src\\pages\\collab\\SendCollabRequest.js":"63","D:\\front-end\\src\\UI\\cropper\\ImageCropDialog.js":"64","D:\\front-end\\src\\UI\\cropper\\CropIt.js":"65","D:\\front-end\\src\\pages\\post\\CommentList.js":"66","D:\\front-end\\src\\UI\\gifPicker\\Gif.js":"67","D:\\front-end\\src\\pages\\post\\Comment.js":"68","D:\\front-end\\src\\pages\\Profile\\V2\\BuiltWith.js":"69","D:\\front-end\\src\\UI\\cropper\\cropImage.js":"70","D:\\front-end\\src\\pages\\post\\RepliesList.js":"71","D:\\front-end\\src\\pages\\Chat\\SidebarChat.js":"72","D:\\front-end\\src\\pages\\Chat\\Chats.js":"73","D:\\front-end\\src\\pages\\Chat\\ChatBox.js":"74","D:\\front-end\\src\\pages\\Chat\\Message.js":"75","D:\\front-end\\src\\pages\\Chat\\Message_sender.js":"76","D:\\front-end\\src\\pages\\Chat\\Chat_input.js":"77","D:\\front-end\\src\\pages\\Chat\\SidebarRight.js":"78"},{"size":726,"mtime":1643547705030,"results":"79","hashOfConfig":"80"},{"size":4332,"mtime":1644059016435,"results":"81","hashOfConfig":"80"},{"size":712,"mtime":1643547704978,"results":"82","hashOfConfig":"80"},{"size":454,"mtime":1643547704980,"results":"83","hashOfConfig":"80"},{"size":408,"mtime":1643547704980,"results":"84","hashOfConfig":"80"},{"size":2475,"mtime":1643547705366,"results":"85","hashOfConfig":"80"},{"size":3637,"mtime":1643547705365,"results":"86","hashOfConfig":"80"},{"size":473,"mtime":1643547704979,"results":"87","hashOfConfig":"80"},{"size":2213,"mtime":1643547704987,"results":"88","hashOfConfig":"80"},{"size":3968,"mtime":1643547704977,"results":"89","hashOfConfig":"80"},{"size":637,"mtime":1643547704979,"results":"90","hashOfConfig":"80"},{"size":5082,"mtime":1643547704978,"results":"91","hashOfConfig":"80"},{"size":3958,"mtime":1643547704979,"results":"92","hashOfConfig":"80"},{"size":1645,"mtime":1643547705035,"results":"93","hashOfConfig":"80"},{"size":2251,"mtime":1643547705299,"results":"94","hashOfConfig":"80"},{"size":5276,"mtime":1643547705353,"results":"95","hashOfConfig":"80"},{"size":2364,"mtime":1643547705036,"results":"96","hashOfConfig":"80"},{"size":0,"mtime":1643547705039,"results":"97","hashOfConfig":"80"},{"size":1506,"mtime":1643547705034,"results":"98","hashOfConfig":"80"},{"size":2383,"mtime":1643547705031,"results":"99","hashOfConfig":"80"},{"size":3672,"mtime":1643547705357,"results":"100","hashOfConfig":"80"},{"size":8141,"mtime":1643547705354,"results":"101","hashOfConfig":"80"},{"size":4529,"mtime":1643547705360,"results":"102","hashOfConfig":"80"},{"size":3006,"mtime":1643547705032,"results":"103","hashOfConfig":"80"},{"size":4509,"mtime":1643547705358,"results":"104","hashOfConfig":"80"},{"size":10706,"mtime":1643547705043,"results":"105","hashOfConfig":"80"},{"size":2365,"mtime":1643547705300,"results":"106","hashOfConfig":"80"},{"size":1780,"mtime":1643547705033,"results":"107","hashOfConfig":"80"},{"size":199,"mtime":1643903229450,"results":"108","hashOfConfig":"80"},{"size":3314,"mtime":1643547704986,"results":"109","hashOfConfig":"80"},{"size":1989,"mtime":1643547704988,"results":"110","hashOfConfig":"80"},{"size":625,"mtime":1643547704990,"results":"111","hashOfConfig":"80"},{"size":307,"mtime":1643547704986,"results":"112","hashOfConfig":"80"},{"size":703,"mtime":1643547704982,"results":"113","hashOfConfig":"80"},{"size":254,"mtime":1643547704987,"results":"114","hashOfConfig":"80"},{"size":341,"mtime":1643547704983,"results":"115","hashOfConfig":"80"},{"size":7372,"mtime":1643547705350,"results":"116","hashOfConfig":"80"},{"size":1451,"mtime":1643547705037,"results":"117","hashOfConfig":"80"},{"size":4569,"mtime":1643547705311,"results":"118","hashOfConfig":"80"},{"size":904,"mtime":1643547704989,"results":"119","hashOfConfig":"80"},{"size":7063,"mtime":1643547705044,"results":"120","hashOfConfig":"80"},{"size":4062,"mtime":1643547705041,"results":"121","hashOfConfig":"80"},{"size":2130,"mtime":1643547705045,"results":"122","hashOfConfig":"80"},{"size":834,"mtime":1643547704981,"results":"123","hashOfConfig":"80"},{"size":811,"mtime":1643547705033,"results":"124","hashOfConfig":"80"},{"size":1349,"mtime":1643547704985,"results":"125","hashOfConfig":"80"},{"size":1390,"mtime":1643547705038,"results":"126","hashOfConfig":"80"},{"size":10397,"mtime":1643547705089,"results":"127","hashOfConfig":"80"},{"size":7531,"mtime":1643547705320,"results":"128","hashOfConfig":"80"},{"size":3524,"mtime":1643547704991,"results":"129","hashOfConfig":"80"},{"size":22710,"mtime":1643547705317,"results":"130","hashOfConfig":"80"},{"size":5735,"mtime":1643547705321,"results":"131","hashOfConfig":"80"},{"size":3971,"mtime":1643903227454,"results":"132","hashOfConfig":"80"},{"size":3045,"mtime":1644060408394,"results":"133","hashOfConfig":"80"},{"size":1054,"mtime":1643547705031,"results":"134","hashOfConfig":"80"},{"size":618,"mtime":1643547705035,"results":"135","hashOfConfig":"80"},{"size":3681,"mtime":1643547705044,"results":"136","hashOfConfig":"80"},{"size":552,"mtime":1643547705297,"results":"137","hashOfConfig":"80"},{"size":20169,"mtime":1643547705323,"results":"138","hashOfConfig":"80"},{"size":13950,"mtime":1643547705040,"results":"139","hashOfConfig":"80"},{"size":3156,"mtime":1643547705042,"results":"140","hashOfConfig":"80"},{"size":6351,"mtime":1643547705043,"results":"141","hashOfConfig":"80"},{"size":7043,"mtime":1643547705313,"results":"142","hashOfConfig":"80"},{"size":3607,"mtime":1643547704992,"results":"143","hashOfConfig":"80"},{"size":2390,"mtime":1643547704991,"results":"144","hashOfConfig":"80"},{"size":4443,"mtime":1643547705319,"results":"145","hashOfConfig":"80"},{"size":3568,"mtime":1643547704993,"results":"146","hashOfConfig":"80"},{"size":12877,"mtime":1643547705318,"results":"147","hashOfConfig":"80"},{"size":1287,"mtime":1643547705041,"results":"148","hashOfConfig":"80"},{"size":2411,"mtime":1643547704992,"results":"149","hashOfConfig":"80"},{"size":4959,"mtime":1643547705324,"results":"150","hashOfConfig":"80"},{"size":487,"mtime":1644041537413,"results":"151","hashOfConfig":"80"},{"size":379,"mtime":1644242226918,"results":"152","hashOfConfig":"80"},{"size":1815,"mtime":1644245604493,"results":"153","hashOfConfig":"80"},{"size":728,"mtime":1644242999009,"results":"154","hashOfConfig":"80"},{"size":929,"mtime":1644242968054,"results":"155","hashOfConfig":"80"},{"size":673,"mtime":1644241419016,"results":"156","hashOfConfig":"80"},{"size":1535,"mtime":1644246303232,"results":"157","hashOfConfig":"80"},{"filePath":"158","messages":"159","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},"1j0cxyj",{"filePath":"161","messages":"162","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"160"},{"filePath":"164","messages":"165","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"166","messages":"167","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"168","messages":"169","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"170","messages":"171","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"160"},{"filePath":"173","messages":"174","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"175","usedDeprecatedRules":"160"},{"filePath":"176","messages":"177","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"178","messages":"179","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"180","usedDeprecatedRules":"160"},{"filePath":"181","messages":"182","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"160"},{"filePath":"184","messages":"185","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"186","messages":"187","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"160"},{"filePath":"189","messages":"190","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"191","usedDeprecatedRules":"160"},{"filePath":"192","messages":"193","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"160"},{"filePath":"195","messages":"196","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"160"},{"filePath":"198","messages":"199","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"200","usedDeprecatedRules":"160"},{"filePath":"201","messages":"202","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"203","usedDeprecatedRules":"160"},{"filePath":"204","messages":"205","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"206","messages":"207","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"208","usedDeprecatedRules":"160"},{"filePath":"209","messages":"210","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"211","messages":"212","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"213","messages":"214","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"215","usedDeprecatedRules":"160"},{"filePath":"216","messages":"217","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"218","usedDeprecatedRules":"160"},{"filePath":"219","messages":"220","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"160"},{"filePath":"222","messages":"223","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"224","messages":"225","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"226","usedDeprecatedRules":"160"},{"filePath":"227","messages":"228","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"229","usedDeprecatedRules":"160"},{"filePath":"230","messages":"231","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"232","usedDeprecatedRules":"160"},{"filePath":"233","messages":"234","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"235","messages":"236","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"237","usedDeprecatedRules":"160"},{"filePath":"238","messages":"239","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"240","messages":"241","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"242","messages":"243","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"244","messages":"245","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"246","usedDeprecatedRules":"160"},{"filePath":"247","messages":"248","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"249","usedDeprecatedRules":"160"},{"filePath":"250","messages":"251","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"252","messages":"253","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"254","messages":"255","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"256","messages":"257","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"258","usedDeprecatedRules":"160"},{"filePath":"259","messages":"260","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"261","messages":"262","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"263","usedDeprecatedRules":"160"},{"filePath":"264","messages":"265","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"266","usedDeprecatedRules":"160"},{"filePath":"267","messages":"268","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"269","usedDeprecatedRules":"160"},{"filePath":"270","messages":"271","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"272","usedDeprecatedRules":"160"},{"filePath":"273","messages":"274","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"275","usedDeprecatedRules":"160"},{"filePath":"276","messages":"277","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"278","messages":"279","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"280","usedDeprecatedRules":"160"},{"filePath":"281","messages":"282","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"283","usedDeprecatedRules":"160"},{"filePath":"284","messages":"285","errorCount":0,"fatalErrorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"286","usedDeprecatedRules":"160"},{"filePath":"287","messages":"288","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"289","messages":"290","errorCount":0,"fatalErrorCount":0,"warningCount":15,"fixableErrorCount":0,"fixableWarningCount":0,"source":"291","usedDeprecatedRules":"160"},{"filePath":"292","messages":"293","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"294","usedDeprecatedRules":"160"},{"filePath":"295","messages":"296","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"297","usedDeprecatedRules":"160"},{"filePath":"298","messages":"299","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"300","messages":"301","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"302","messages":"303","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"304","messages":"305","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"306","usedDeprecatedRules":"160"},{"filePath":"307","messages":"308","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"309","usedDeprecatedRules":"160"},{"filePath":"310","messages":"311","errorCount":0,"fatalErrorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":"312","usedDeprecatedRules":"160"},{"filePath":"313","messages":"314","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"315","usedDeprecatedRules":"160"},{"filePath":"316","messages":"317","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"318","usedDeprecatedRules":"160"},{"filePath":"319","messages":"320","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"321","messages":"322","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"323","usedDeprecatedRules":"160"},{"filePath":"324","messages":"325","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"326","messages":"327","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"328","usedDeprecatedRules":"160"},{"filePath":"329","messages":"330","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"331","usedDeprecatedRules":"160"},{"filePath":"332","messages":"333","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"334","messages":"335","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"336","usedDeprecatedRules":"160"},{"filePath":"337","messages":"338","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"339","usedDeprecatedRules":"160"},{"filePath":"340","messages":"341","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"342","usedDeprecatedRules":"160"},{"filePath":"343","messages":"344","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"345","usedDeprecatedRules":"160"},{"filePath":"346","messages":"347","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"160"},{"filePath":"348","messages":"349","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"350","messages":"351","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"352"},{"filePath":"353","messages":"354","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"355","messages":"356","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"357","messages":"358","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"359","messages":"360","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\front-end\\src\\index.js",[],["361","362"],"D:\\front-end\\src\\App.js",["363","364","365"],"import SignUp from \"./pages/signUP/Signup\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\nimport LandingPage from \"./pages/LandingPage/LandingPage\";\r\nimport Login from \"./pages/LoginPage/Login\";\r\nimport VerifyEmail from \"./pages/VerifyEmail/VerifyEmail\";\r\nimport { useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { userActions } from \"./Store/user-slice\";\r\nimport { themeActions } from \"./Store/theme-slice\";\r\nimport ForgotPassword from \"./pages/ForgotPassword/ForgotPassword\";\r\nimport ChangePassword from \"./pages/ChangePassword/ChangePassword\";\r\nimport Feed from \"./pages/Feed/Feed\";\r\nimport Profile from \"./pages/Profile/Profile\";\r\nimport Bio from \"./pages/signUP/afterSignUp/Bio\";\r\nimport AddSkills from \"./pages/signUP/afterSignUp/AddSkills\";\r\nimport UserName from \"./pages/signUP/afterSignUp/UserName\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport UploadProfile from \"./pages/signUP/afterSignUp/UploadProfile\";\r\nimport LoadingSpinner from \"./UI/LoadingSpinner\";\r\n\r\nimport ProfielV2 from \"./pages/Profile/V2/ProfileV2\";\r\nimport NavBar from \"./pages/Feed/navbar/Navbar\";\r\nimport { useHistory } from \"react-router\";\r\nimport Redirecort from \"./tools/Redirector\";\r\nimport CollabMain from \"./pages/collab/CollabMain\";\r\n\r\nimport MultipartTest from \"./tools/MultipartTest\";\r\nimport Messages from \"./pages/Chat/Messages\";\r\nimport Chats from \"./pages/Chat/Chats\";\r\nconst loadingSavedData = (dispatch) => {\r\n  try {\r\n    const token = localStorage.getItem(\"token\");\r\n    const user = JSON.parse(localStorage.getItem(\"user_Obj\"));\r\n    const darkMode = localStorage.getItem(\"darkMode\");\r\n\r\n    if (user !== null || token !== null) {\r\n      dispatch(userActions.signUp({ user, token }));\r\n    }\r\n    if (darkMode !== null) {\r\n      dispatch(\r\n        themeActions.setTheme({\r\n          darkMode: darkMode === \"false\" ? false : true,\r\n        })\r\n      );\r\n    }\r\n\r\n    // console.log(token, user);\r\n  } catch (err) {\r\n    console.log(err);\r\n  }\r\n};\r\n\r\nfunction App() {\r\n  // for updating the redux state\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    // loading from local storage\r\n    loadingSavedData(dispatch);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  // dark theme\r\n  // const isDarkMode = useSelector((state) => state.theme.darkMode);\r\n  const isLoading = useSelector((state) => state.loading.isLoading);\r\n  const token = useSelector((state) => state.user.token);\r\n\r\n  console.log(\"main app\");\r\n  return (\r\n    <Switch>\r\n      {isLoading ? <LoadingSpinner /> : \"\"}\r\n      <Route path=\"/\" exact>\r\n        <LandingPage />\r\n      </Route>\r\n      <Route exact path=\"/signup\">\r\n        <SignUp />\r\n      </Route>\r\n\r\n      <Route path=\"/login\">\r\n        <Login />\r\n      </Route>\r\n      <Route path=\"/verifyEmail/:EmailToken\">\r\n        <VerifyEmail />\r\n      </Route>\r\n      <Route path=\"/forgotPassword\">\r\n        <ForgotPassword />\r\n      </Route>\r\n      <Route path=\"/changePassword/:RestToken\">\r\n        <ChangePassword />\r\n      </Route>\r\n      <Route path=\"/feed\">\r\n        <Feed />\r\n      </Route>\r\n      <Route path=\"/collab\">\r\n        <CollabMain />\r\n      </Route>\r\n      <Route path=\"/profile/:userID\">\r\n        {/* <Profile token={token} /> */}\r\n\r\n        <ProfielV2 token={token} />\r\n      </Route>\r\n      <Route exact path=\"/signup/uploadProfile\">\r\n        <UploadProfile />\r\n      </Route>\r\n      <Route path=\"/signup/addskills\">\r\n        <AddSkills usedAs=\"addSkills\" />\r\n      </Route>\r\n      <Route path=\"/signup/addusername\">\r\n        <UserName />\r\n      </Route>\r\n      <Route exact path=\"/signup/addbio\">\r\n        <Bio />\r\n      </Route>\r\n      <Route exact path=\"/playground\">\r\n        <MultipartTest token={token} />\r\n      </Route>\r\n      <Route exact path={\"/redirect/git/addproject\"}>\r\n        <Redirecort token={token} />\r\n      </Route>\r\n\r\n      <Route path=\"/messages\">\r\n        <Messages />\r\n      </Route>\r\n      <Route exact path=\"/Chats\">\r\n        <Chats />\r\n      </Route>\r\n\r\n      <Route path=\"*\">\r\n        <h1>foul path </h1>\r\n      </Route>\r\n    </Switch>\r\n  );\r\n}\r\n\r\nexport const loadFromStorage = loadingSavedData;\r\nexport default App;\r\n\r\n// signup --> verify email\r\n//            |\r\n//            |\r\n//            - - - upload profile  -- bio  -- skills --- username\r\n","D:\\front-end\\src\\Store\\index.js",[],"D:\\front-end\\src\\Store\\user-slice.js",[],"D:\\front-end\\src\\Store\\theme-slice.js",[],"D:\\front-end\\src\\tools\\Redirector.js",["366","367","368","369","370"],"import { useLocation, useHistory } from \"react-router-dom\";\r\nimport { useEffect, useState, useRef } from \"react\";\r\nimport axios from \"axios\";\r\nimport { githubCodeURL } from \"../URL/signUpURL\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport classes from \"./redirector.module.css\";\r\nconst sendCode = async (url, token, code, history, state, setLoading, notify) => {\r\n  try {\r\n    setLoading(true);\r\n    const result = await axios.get(url + code, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n\r\n    setLoading(false);\r\n    if (result.data.userID) {\r\n      history.replace(state + \"/addFromGithub\");\r\n    }\r\n    // console.log(result);\r\n  } catch (err) {\r\n    console.error(\"redirecting to import projects from github\", err.response.data);\r\n    if (err.response.data) {\r\n      if (err.response.data.code === \"g1\") {\r\n        notify(\"This github account is already linked with other profile\", { type: toast.TYPE.ERROR, autoClose: 2000 });\r\n\r\n        history.replace(state);\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nconst Redirector = (props) => {\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n  const [loading, setLoading] = useState(false);\r\n  const toastId = useRef(null);\r\n  const [err, setErr] = useState();\r\n\r\n  const code = new URLSearchParams(location.search).get(\"code\");\r\n  const state = new URLSearchParams(location.search).get(\"state\");\r\n\r\n  const notify = (message, details = null) =>\r\n    (toastId.current = toast(message, {\r\n      autoClose: false,\r\n      ...details,\r\n      bodyClassName: classes.bodyToast,\r\n      className: classes.containerToast,\r\n    }));\r\n\r\n  useEffect(() => {\r\n    if (code && state && props.token) {\r\n      // history.push(state + \"/\" + code);\r\n      sendCode(githubCodeURL, props.token, code, history, state, setLoading, notify);\r\n    }\r\n  }, [props.token]);\r\n\r\n  const update = (message, autoClose = 1000, details = null) =>\r\n    toast.update(toastId.current, {\r\n      render: message,\r\n      type: toast.TYPE.SUCCESS,\r\n      autoClose: autoClose,\r\n      pauseOnFocusLoss: false,\r\n      pauseOnHover: false,\r\n      ...details,\r\n    });\r\n\r\n  if (loading) {\r\n    return (\r\n      <div style={{ display: \"flex\", justifyContent: \"center\" }}>\r\n        <GuardSpinner color={\"#2ba272\"} loading={loading} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return <div>{/* Redirecting, {code}, {state} */}</div>;\r\n};\r\n\r\nexport default Redirector;\r\n","D:\\front-end\\src\\tools\\MultipartTest.js",["371"],"import axios from \"axios\";\r\nimport { useState } from \"react\";\r\nimport { startUploadURL, getUploadURL, finishUploadURL } from \"../URL/signUpURL\";\r\n\r\nconst MultipartTest = (props) => {\r\n  const [f, setF] = useState({\r\n    selectedFile: null,\r\n    uploadId: \"\",\r\n    fileName: \"\",\r\n  });\r\n\r\n  const fileSelectedHandler = (e) => {\r\n    try {\r\n      let selectedFile = e.target.files[0];\r\n      let fileName = selectedFile.name;\r\n      setF({\r\n        selectedFile: selectedFile,\r\n        fileName: fileName,\r\n      });\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const startUpload = async (url, token) => {\r\n    try {\r\n      const resp = await axios.get(startUploadURL, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      });\r\n\r\n      setF((p) => {\r\n        return { ...p, uploadId: resp.data.uploadId };\r\n      });\r\n\r\n      console.log(\"here 1\");\r\n\r\n      // got url now start uploading\r\n      const CHUNK_SIZE = 10000000;\r\n      const fileSize = f.selectedFile.size;\r\n\r\n      const NUM_CHUNKS = Math.floor(fileSize / CHUNK_SIZE);\r\n\r\n      let promisesArray = [];\r\n      let start, end, blob;\r\n\r\n      console.log(\"here 2\");\r\n\r\n      for (let index = 1; index < NUM_CHUNKS + 1; index++) {\r\n        console.log(\"here index \", index);\r\n        start = (index - 1) * CHUNK_SIZE;\r\n        end = index * CHUNK_SIZE;\r\n        blob = index < NUM_CHUNKS ? f.selectedFile.slice(start, end) : f.selectedFile.slice(start);\r\n\r\n        // (1) Generate presigned URL for each part\r\n        let getUploadUrlResp = await axios.get(getUploadURL + index + \"/\" + resp.data.uploadId, {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        });\r\n\r\n        let { presignedUrl } = getUploadUrlResp.data;\r\n        console.log(\"   Presigned URL \" + index + \": \" + presignedUrl + \" filetype \" + f.selectedFile.type);\r\n\r\n        // (2) Puts each file part into the storage server\r\n        let uploadResp = axios.put(presignedUrl, blob, { headers: { \"Content-Type\": \"video/mp4\" } });\r\n        // console.log('   Upload no ' + index + '; Etag: ' + uploadResp.headers.etag)\r\n        promisesArray.push(uploadResp);\r\n      }\r\n\r\n      console.log(\"here 4\");\r\n\r\n      let resolvedArray = await Promise.all(promisesArray);\r\n      console.log(resolvedArray, \" resolvedAr\");\r\n\r\n      let uploadPartsArray = [];\r\n      resolvedArray.forEach((resolvedPromise, index) => {\r\n        uploadPartsArray.push({\r\n          ETag: resolvedPromise.headers.etag,\r\n          PartNumber: index + 1,\r\n        });\r\n      });\r\n\r\n      const body = {\r\n        params: {\r\n          parts: [...uploadPartsArray],\r\n          uploadId: f.uploadId,\r\n        },\r\n      };\r\n\r\n      console.log(\"here 5\");\r\n      let completeUploadResp = await axios.post(\r\n        finishUploadURL,\r\n        {\r\n          params: {\r\n            fileName: f.fileName,\r\n            parts: uploadPartsArray,\r\n            uploadId: f.uploadId,\r\n          },\r\n        },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(completeUploadResp.data, \" Stuff\");\r\n    } catch (err) {\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  const uploadFile = () => {\r\n    try {\r\n      startUpload(startUpload, props.token, f, setF);\r\n    } catch (err) {}\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <p>Upload Dataset:</p>\r\n        <input type=\"file\" id=\"file\" onChange={fileSelectedHandler} />\r\n        <button type=\"submit\" onClick={uploadFile}>\r\n          Upload\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MultipartTest;\r\n","D:\\front-end\\src\\Store\\list-people-slice.js",[],"D:\\front-end\\src\\UI\\LoadingSpinner.js",["372"],"import classes from \"./LoadingSpinner.module.css\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loadingActions } from \"../Store/loading-slice\";\r\nimport { useRef } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst LoadingSpinner = (props) => {\r\n  let Loading = useSelector((state) => state.loading);\r\n  const isDarkMode = useSelector((state) => state.theme.darkMode);\r\n\r\n  if (props.loading) {\r\n    Loading = {\r\n      color: \"green\" || props.color,\r\n      message: props.loading,\r\n      forwardTo: \"/\" || props.forwardTo,\r\n    };\r\n  }\r\n\r\n  let style = {\r\n    backgroundColor: \"#fefefe\",\r\n    color: \"#656565\",\r\n  };\r\n\r\n  if (isDarkMode) {\r\n    style = { backgroundColor: \"#3f3f3f\", color: \"#fefefe\" };\r\n  }\r\n\r\n  if (Loading.color === \"red\") {\r\n    style = { ...style, color: \"red\" };\r\n  }\r\n\r\n  const dispatch = useDispatch();\r\n  const tryAgainHandler = () => {\r\n    dispatch(\r\n      loadingActions.setLoading({\r\n        isLoading: false,\r\n        message: \"Invalid email or password, try again\",\r\n        color: \"red\",\r\n      })\r\n    );\r\n  };\r\n\r\n  const pageLevelTryAgain = () => {};\r\n\r\n  return (\r\n    <div className={classes.backdrop} style={style}>\r\n      <div id={`${classes.container}`}>\r\n        <GuardSpinner color={\"#2ba272\"} loading={true} />\r\n        <div className={classes.mess}>\r\n          <p className={`${classes.loadingMessage} normal`}>\r\n            {Loading.message}\r\n          </p>\r\n          {Loading.color === \"red\" ? (\r\n            <Link\r\n              onClick={props.loading ? pageLevelTryAgain : tryAgainHandler}\r\n              className={classes.linkStyle}\r\n              to={Loading.forwardTo ? Loading.forwardTo : \"\"}\r\n            >\r\n              try again?\r\n            </Link>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n\r\n// {/* <div className={classes.backdrop}>\r\n//   <div className={classes.spinner}>\r\n//     <GuardSpinner color={\"#2ba272\"} loading={true} />\r\n// <div className={classes.mess}>\r\n//   <p className={classes.loadingMessage}>{Loading.message}</p>\r\n// </div>\r\n//   </div>\r\n// </div>; */}\r\n","D:\\front-end\\src\\Store\\collab-posts-slice.js",["373","374","375","376"],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst collabSlice = createSlice({\r\n  name: \"collabSlice\",\r\n  initialState: {\r\n    posts: [],\r\n    page: 1,\r\n  },\r\n  reducers: {\r\n    addPostToTop(state, action) {\r\n      const newPost = action.payload.post;\r\n      state.posts = [newPost, ...state.posts];\r\n    },\r\n\r\n    addToList(state, action) {\r\n      const newList = action.payload.posts;\r\n\r\n      // console.log(\"heres the new list \", newList);\r\n\r\n      state.posts = [...state.posts, ...newList];\r\n    },\r\n    reset(state, action) {\r\n      state.page = 1;\r\n      state.posts = [];\r\n    },\r\n    setPageNo(state, action) {\r\n      state.page = action.payload.pageNo;\r\n    },\r\n    setShowMore(state, action) {\r\n      const length = action.payload.showMore;\r\n      const id = action.payload.id;\r\n\r\n      state.posts[id] = { ...state.posts[id], showMore: length };\r\n\r\n      // console.log(length, id);\r\n    },\r\n    setUpvote(state, action) {\r\n      let id = action.payload.id;\r\n\r\n      // if type then search id\r\n      if (action.payload.type) {\r\n        for (let x = 1; x <= state.posts.length; x++) {\r\n          if (state.posts.at(-x)._id == id) {\r\n            id = state.posts.length - x;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      const vote = action.payload.vote;\r\n\r\n      // console.log(\"id\", id, \"vote\", vote);\r\n\r\n      // state.posts[id] = {\r\n      //   ...state.posts[id],\r\n      //   like: state.posts[id].like + vote,\r\n      //   haveIUpvoted: vote === 1 ? true : false,\r\n      //   haveIDownvoted: false,\r\n      // };\r\n\r\n      state.posts[id] = {\r\n        ...state.posts[id],\r\n        likes:\r\n          state.posts[id].likes.length > 0 ? [{ count: state.posts[id].likes[0].count + vote }] : [{ count: vote }],\r\n        haveIUpvoted: vote === 1 ? true : false,\r\n        haveIDownvoted: false,\r\n      };\r\n    },\r\n    setDownvote(state, action) {\r\n      let id = action.payload.id;\r\n\r\n      // if type then search id\r\n      if (action.payload.type) {\r\n        for (let x = 1; x <= state.posts.length; x++) {\r\n          if (state.posts.at(-x)._id == id) {\r\n            id = state.posts.length - x;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      const vote = action.payload.vote;\r\n\r\n      state.posts[id] = {\r\n        ...state.posts[id],\r\n\r\n        dislikes:\r\n          state.posts[id].dislikes.length > 0\r\n            ? [{ count: state.posts[id].dislikes[0].count + vote }]\r\n            : [{ count: vote }],\r\n        haveIDownvoted: vote === 1 ? true : false,\r\n        haveIUpvoted: false,\r\n      };\r\n    },\r\n    incrementComment(state, action) {\r\n      const id = action.payload.id;\r\n      for (let x = 1; x <= state.posts.length; x++) {\r\n        if (state.posts.at(-x)._id == id) {\r\n          state.posts.at(-x).comments = state.posts.at(-x).comments + 1;\r\n          break;\r\n        }\r\n      }\r\n    },\r\n\r\n    deletePost(state, action) {\r\n      const id = action.payload.id;\r\n      state.posts.splice(id, 1);\r\n\r\n      // state.comments.splice(commentIndex, 1);\r\n    },\r\n\r\n    detailedDelete(state, action) {\r\n      const id = action.payload.id;\r\n      for (let x = 1; x <= state.posts.length; x++) {\r\n        if (state.posts.at(-x)._id == id) {\r\n          state.posts.splice(state.posts.length - x, 1);\r\n          break;\r\n        }\r\n      }\r\n    },\r\n\r\n    addCollabRequest(state, action) {\r\n      console.log(\"payload\", action.payload);\r\n\r\n      const index = action.payload.index;\r\n\r\n      state.posts[index] = { ...state.posts[index], collabReaction: [action.payload.collabRequest] };\r\n    },\r\n\r\n    removeCollabRequest(state, action) {\r\n      const index = action.payload.index;\r\n      // state.posts.posts[index].collabReaction = [];\r\n\r\n      // state.posts[index].collabReaction = [];\r\n\r\n      state.posts[index] = { ...state.posts[index], collabReaction: [] };\r\n\r\n      // state.posts.posts[index].collabReaction = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const collabActions = collabSlice.actions;\r\nexport default collabSlice;\r\n","D:\\front-end\\src\\Store\\loading-slice.js",[],"D:\\front-end\\src\\Store\\detailed-post-slice.js",["377"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { act } from \"react-dom/test-utils\";\r\n\r\nconst detailedPostSlice = createSlice({\r\n  name: \"detailedPostSlice\",\r\n  initialState: {\r\n    post: { showMore: 1024 },\r\n    comments: [],\r\n  },\r\n  reducers: {\r\n    reset(state, action) {\r\n      if (state.post.u_id) {\r\n        state.post = { showMore: 1024 };\r\n      }\r\n    },\r\n    resetAll(state, action) {\r\n      if (state.post.u_id) {\r\n        state.post = { showMore: 1024 };\r\n      }\r\n      state.comments = [];\r\n    },\r\n    setPost(state, action) {\r\n      state.post = { ...state.post, ...action.payload.post };\r\n    },\r\n    appendComments(state, action) {\r\n      // console.log(\"action.payload.comments\", action.payload.comments);\r\n      const array = [...state.comments, ...action.payload.comments];\r\n      const result = [];\r\n      const map = new Map();\r\n      for (const item of array) {\r\n        if (!map.has(item._id)) {\r\n          map.set(item._id, true); // set any value to Map\r\n          result.push(item);\r\n        }\r\n      }\r\n      state.comments = [...result];\r\n    },\r\n    addItOnTop(state, action) {\r\n      // state.post.comments = state.post.comments + 1;\r\n      state.comments = [...action.payload.comments, ...state.comments];\r\n    },\r\n    resetComments(state, action) {\r\n      state.comments = [];\r\n    },\r\n    addRepliesToTop(state, action) {\r\n      const id = action.payload.id;\r\n\r\n      if (!state.comments[id].replies) {\r\n        state.comments[id] = { ...state.comments[id], replies: [] };\r\n      }\r\n\r\n      const replies = [...action.payload.replies, ...state.comments[id].replies];\r\n      state.comments[id].replies = [...replies];\r\n      state.comments[id].repliesCnt = state.comments[id].repliesCnt + 1;\r\n    },\r\n    appendReplies(state, action) {\r\n      const id = action.payload.id;\r\n\r\n      if (!state.comments[id].replies) {\r\n        state.comments[id] = { ...state.comments[id], replies: [] };\r\n      }\r\n\r\n      const array = [...state.comments[id].replies, ...action.payload.replies];\r\n      const result = [];\r\n      const map = new Map();\r\n      for (const item of array) {\r\n        if (!map.has(item._id)) {\r\n          map.set(item._id, true); // set any value to Map\r\n          result.push(item);\r\n        }\r\n      }\r\n\r\n      state.comments[id].replies = [...result];\r\n    },\r\n\r\n    resetReplies(state, action) {\r\n      const id = action.payload.id;\r\n      state.comments[id].replies = [];\r\n    },\r\n\r\n    upvoteReply(state, action) {\r\n      const commentIndex = action.payload.commentIndex;\r\n      const replyIndex = action.payload.replyIndex;\r\n      state.comments[commentIndex].replies[replyIndex] = {\r\n        ...state.comments[commentIndex].replies[replyIndex],\r\n        // likes: state.comments[commentIndex].replies[replyIndex].likes + action.payload.vote,\r\n        likes:\r\n          state.comments[commentIndex].replies[replyIndex].likes.length > 0\r\n            ? [{ count: state.comments[commentIndex].replies[replyIndex].likes[0].count + action.payload.vote }]\r\n            : [{ count: action.payload.vote }],\r\n      };\r\n    },\r\n\r\n    downvoteReply(state, action) {\r\n      const commentIndex = action.payload.commentIndex;\r\n      const replyIndex = action.payload.replyIndex;\r\n      state.comments[commentIndex].replies[replyIndex] = {\r\n        ...state.comments[commentIndex].replies[replyIndex],\r\n        // dislikes: state.comments[commentIndex].replies[replyIndex].dislikes + action.payload.vote,\r\n        dislikes:\r\n          state.comments[commentIndex].replies[replyIndex].dislikes.length > 0\r\n            ? [{ count: state.comments[commentIndex].replies[replyIndex].dislikes[0].count + action.payload.vote }]\r\n            : [{ count: action.payload.vote }],\r\n      };\r\n    },\r\n\r\n    deleteReply(state, action) {\r\n      const commentIndex = action.payload.commentIndex;\r\n      const replyIndex = action.payload.replyIndex;\r\n      state.comments[commentIndex].repliesCnt = state.comments[commentIndex].repliesCnt - 1;\r\n      state.comments[commentIndex].replies.splice(replyIndex, 1);\r\n    },\r\n\r\n    deleteComment(state, action) {\r\n      const commentIndex = action.payload.commentIndex;\r\n\r\n      state.post.comments = state.post.comments - 1;\r\n      state.comments.splice(commentIndex, 1);\r\n    },\r\n\r\n    commentUpvote(state, action) {\r\n      const id = action.payload.id;\r\n      state.comments[id].likes[0].count = state.comments[id].likes[0].count + action.payload.vote;\r\n    },\r\n    commentDownvote(state, action) {\r\n      const id = action.payload.id;\r\n      state.comments[id].dislikes[0].count = state.comments[id].dislikes[0].count + action.payload.vote;\r\n    },\r\n\r\n    addCollabRequest(state, action) {\r\n      // const index = action.payload.index;\r\n\r\n      state.post = { ...state.post, collabReaction: [action.payload.collabRequest] };\r\n    },\r\n\r\n    removeCollabRequest(state, action) {\r\n      // const index = action.payload.index;\r\n\r\n      state.post = { ...state.post, collabReaction: [] };\r\n    },\r\n  },\r\n});\r\n\r\nexport const detailedPostActions = detailedPostSlice.actions;\r\nexport default detailedPostSlice;\r\n","D:\\front-end\\src\\Store\\posts-slice.js",["378","379","380","381"],"import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nconst postSlice = createSlice({\r\n  name: \"postSlice\",\r\n  initialState: {\r\n    posts: [],\r\n    page: 1,\r\n  },\r\n  reducers: {\r\n    addPostToTop(state, action) {\r\n      const newPost = action.payload.post;\r\n      state.posts = [newPost, ...state.posts];\r\n    },\r\n\r\n    addToList(state, action) {\r\n      const newList = action.payload.posts;\r\n\r\n      // console.log(\"heres the new list \", newList);\r\n\r\n      state.posts = [...state.posts, ...newList];\r\n    },\r\n    reset(state, action) {\r\n      state.page = 1;\r\n      state.posts = [];\r\n    },\r\n    setPageNo(state, action) {\r\n      state.page = action.payload.pageNo;\r\n    },\r\n    setShowMore(state, action) {\r\n      const length = action.payload.showMore;\r\n      const id = action.payload.id;\r\n\r\n      state.posts[id] = { ...state.posts[id], showMore: length };\r\n\r\n      // console.log(length, id);\r\n    },\r\n    setUpvote(state, action) {\r\n      let id = action.payload.id;\r\n\r\n      // if type then search id\r\n      if (action.payload.type) {\r\n        for (let x = 1; x <= state.posts.length; x++) {\r\n          if (state.posts.at(-x)._id == id) {\r\n            id = state.posts.length - x;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n      const vote = action.payload.vote;\r\n\r\n      // console.log(\"id\", id, \"vote\", vote);\r\n\r\n      // state.posts[id] = {\r\n      //   ...state.posts[id],\r\n      //   like: state.posts[id].like + vote,\r\n      //   haveIUpvoted: vote === 1 ? true : false,\r\n      //   haveIDownvoted: false,\r\n      // };\r\n\r\n      state.posts[id] = {\r\n        ...state.posts[id],\r\n        likes:\r\n          state.posts[id].likes.length > 0 ? [{ count: state.posts[id].likes[0].count + vote }] : [{ count: vote }],\r\n        haveIUpvoted: vote === 1 ? true : false,\r\n        haveIDownvoted: false,\r\n      };\r\n    },\r\n    setDownvote(state, action) {\r\n      let id = action.payload.id;\r\n\r\n      // if type then search id\r\n      if (action.payload.type) {\r\n        for (let x = 1; x <= state.posts.length; x++) {\r\n          if (state.posts.at(-x)._id == id) {\r\n            id = state.posts.length - x;\r\n            break;\r\n          }\r\n        }\r\n      }\r\n\r\n      const vote = action.payload.vote;\r\n\r\n      state.posts[id] = {\r\n        ...state.posts[id],\r\n\r\n        dislikes:\r\n          state.posts[id].dislikes.length > 0\r\n            ? [{ count: state.posts[id].dislikes[0].count + vote }]\r\n            : [{ count: vote }],\r\n        haveIDownvoted: vote === 1 ? true : false,\r\n        haveIUpvoted: false,\r\n      };\r\n    },\r\n    incrementComment(state, action) {\r\n      const id = action.payload.id;\r\n      for (let x = 1; x <= state.posts.length; x++) {\r\n        if (state.posts.at(-x)._id == id) {\r\n          state.posts.at(-x).comments = state.posts.at(-x).comments + 1;\r\n          break;\r\n        }\r\n      }\r\n    },\r\n\r\n    deletePost(state, action) {\r\n      const id = action.payload.id;\r\n      state.posts.splice(id, 1);\r\n\r\n      // state.comments.splice(commentIndex, 1);\r\n    },\r\n\r\n    detailedDelete(state, action) {\r\n      const id = action.payload.id;\r\n      for (let x = 1; x <= state.posts.length; x++) {\r\n        if (state.posts.at(-x)._id == id) {\r\n          state.posts.splice(state.posts.length - x, 1);\r\n          break;\r\n        }\r\n      }\r\n    },\r\n\r\n    addCollabRequest(state, action) {\r\n      console.log(\"payload\", action.payload);\r\n\r\n      const index = action.payload.index;\r\n\r\n      state.posts[index] = { ...state.posts[index], collabReaction: [action.payload.collabRequest] };\r\n    },\r\n\r\n    removeCollabRequest(state, action) {\r\n      const index = action.payload.index;\r\n      // state.posts.posts[index].collabReaction = [];\r\n\r\n      // state.posts[index].collabReaction = [];\r\n\r\n      state.posts[index] = { ...state.posts[index], collabReaction: [] };\r\n\r\n      // state.posts.posts[index].collabReaction = [];\r\n    },\r\n  },\r\n});\r\n\r\nexport const postActions = postSlice.actions;\r\nexport default postSlice;\r\n","D:\\front-end\\src\\pages\\LandingPage\\LandingPage.js",["382"],"// import { Link } from \"react-router-dom\";\r\n// import Button from \"../../UI/Button\";\r\nimport LinkButton from \"../../UI/LinkButton\";\r\nimport classes from \"./LandingPage.module.css\";\r\nimport Toggle from \"../../UI/Toggle\";\r\nimport VideoJS from \"../Player/VideoJS\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\n// for testing purpose\r\nimport P from \"../../UI/P\";\r\nconst LandingPage = (props) => {\r\n  const loggedUser = useSelector((state) => state.user.userObj);\r\n  return (\r\n    <>\r\n      <header className={classes.header}>\r\n        <nav className={classes.nav}>\r\n          <ul>\r\n            <li>\r\n              <LinkButton text=\"Sign Up\" to=\"/signup\" />\r\n            </li>\r\n\r\n            <li>\r\n              <LinkButton text=\"Login\" to=\"/login\" />\r\n            </li>\r\n            <li>\r\n              <LinkButton text=\"Forgot password\" to=\"/forgotPassword\" />\r\n            </li>\r\n            <li>\r\n              <LinkButton text=\"Feed\" to=\"/feed\" />\r\n            </li>\r\n            <li>\r\n              <LinkButton text=\"my profile\" to={\"/profile/\" + loggedUser.userID} />\r\n            </li>\r\n            <li>\r\n              <Toggle />\r\n            </li>\r\n          </ul>\r\n        </nav>\r\n      </header>\r\n      <p>Landing page</p>\r\n      <div className={classes.videoContainer}>\r\n        <VideoJS />\r\n      </div>\r\n\r\n      <P text=\"hello #python world https://www.npmjs.com/package/#valid-url haha #react_native #redis #android_development #java #mongodb hello #python world https://www.npmjs.com/package/#valid-url haha #react_native #redis #android_development #java #mongodb\" />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LandingPage;\r\n","D:\\front-end\\src\\pages\\VerifyEmail\\VerifyEmail.js",["383","384","385"],"import Card from \"../../UI/Card\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\nimport { useState, useEffect, useCallback, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport { verifyEmailURL } from \"../../URL/signUpURL\";\r\nimport { loadingActions } from \"../../Store/loading-slice\";\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nconst VerifyEmail = (props) => {\r\n  // token as param\r\n  const params = useParams();\r\n  const EmailToken = params.EmailToken;\r\n  console.log(EmailToken);\r\n  // // setting loading state\r\n  // const [message, setMessage] = useState(\"Verifying Email..\");\r\n  // const [valid, setValid] = useState(\"valid center loadingMessage\");\r\n  const dispatch = useDispatch();\r\n\r\n  const history = useHistory();\r\n\r\n  // use callback stores the functions and reuses them and doesnt reevaluate\r\n  const verifyEmail = useCallback(async (token) => {\r\n    try {\r\n      dispatch(\r\n        loadingActions.setLoading({\r\n          isLoading: true,\r\n          showSpinner: false,\r\n          message: \"verifying your email...\",\r\n        })\r\n      );\r\n\r\n      const response = await axios.get(verifyEmailURL + token);\r\n      console.log(response);\r\n\r\n      dispatch(\r\n        loadingActions.setLoading({\r\n          isLoading: true,\r\n          showSpinner: false,\r\n          message: \"email verified, redirecting the user...\",\r\n        })\r\n      );\r\n\r\n      history.push(\"/signup/uploadProfile\");\r\n\r\n      dispatch(\r\n        loadingActions.setLoading({\r\n          isLoading: false,\r\n        })\r\n      );\r\n    } catch (err) {\r\n      console.log(err);\r\n\r\n      dispatch(\r\n        loadingActions.setLoading({\r\n          isLoading: true,\r\n          showSpinner: false,\r\n          message:\r\n            \"Token invalid or expired, try logging in to get a new token\",\r\n          color: \"red\",\r\n          forwardTo: \"/login\",\r\n        })\r\n      );\r\n\r\n      // setMessage(\"Err in verifying the user...!\");\r\n      // setValid(\"invalid center loadingMessage\");\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    verifyEmail(EmailToken);\r\n  }, [EmailToken, verifyEmail]);\r\n\r\n  return <Fragment></Fragment>;\r\n};\r\n\r\nexport default VerifyEmail;\r\n","D:\\front-end\\src\\pages\\signUP\\Signup.js",["386","387","388"],"import Card from \"../../UI/Card\";\r\nimport Input from \"../../UI/Input.js\";\r\nimport \"./Signup.css\";\r\nimport Button from \"../../UI/Button\";\r\nimport FormError from \"../../UI/FormError\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Radio from \"../../UI/Radio\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { loadingActions } from \"../../Store/loading-slice\";\r\nimport UserName from \"./afterSignUp/UserName\";\r\nimport { Switch, Route } from \"react-router-dom\";\r\n\r\nimport {\r\n  signUp,\r\n  ValidateEmail,\r\n  nameListeners,\r\n  emailListeners,\r\n  passwordListeners,\r\n  passwordClisteners,\r\n} from \"./SignUpHandlers\";\r\n\r\nimport Loading from \"../../UI/Loading\";\r\n\r\nimport { useDispatch } from \"react-redux\";\r\n\r\nimport React, { Fragment, useState } from \"react\";\r\n\r\nconst SignUp = (props) => {\r\n  const dispatch = useDispatch();\r\n\r\n  const name = React.createRef();\r\n  const email = React.createRef();\r\n  const password = React.createRef();\r\n  const passwordConfirm = React.createRef();\r\n\r\n  console.log(\"app\");\r\n\r\n  // state for 11000 err\r\n  const [err, setErr] = useState(\"\");\r\n  const [loading, setLoading] = useState(\"\");\r\n\r\n  // state for terms and conditions\r\n  const [agree, setAgree] = useState(false);\r\n\r\n  const signUpHandler = (e, setClick) => {\r\n    e.preventDefault();\r\n    const inpName = name.current.value.trim();\r\n    const inpEmail = email.current.value.trim();\r\n    const inpPass = password.current.value.trim();\r\n    const inpCpass = passwordConfirm.current.value.trim();\r\n\r\n    if (\r\n      inpName.length >= 3 &&\r\n      ValidateEmail(inpEmail.trim()) &&\r\n      inpPass.length >= 8 &&\r\n      inpPass === inpCpass &&\r\n      agree\r\n    ) {\r\n      console.log(\"submit sucess full\");\r\n      signUp(\r\n        inpName,\r\n        inpEmail,\r\n        inpPass,\r\n        inpCpass,\r\n        dispatch,\r\n        setErr,\r\n        setLoading,\r\n        setClick\r\n      );\r\n    } else {\r\n      dispatch(\r\n        loadingActions.setLoading({\r\n          isLoading: true,\r\n          showSpinner: false,\r\n          message: \"Invalid Credentials\",\r\n          color: \"red\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  // name listeners\r\n  const { nameOnChange, nameOnFocus, nameOnBlur } = nameListeners();\r\n\r\n  // email listeners\r\n  const { emailOnBlur, emailOnFocus, emailOnChange } = emailListeners();\r\n\r\n  // password listeners\r\n  const { passwordOnBlur, passwordOnFocus, passwordOnChange } =\r\n    passwordListeners(passwordConfirm);\r\n\r\n  // password confirm listeners\r\n  const { passwordCOnBlur, passwordCOnFocus, passwordCOnChange } =\r\n    passwordClisteners(password);\r\n\r\n  // TODO: implement error handler for direct click on submit\r\n  // with out touching the input fields\r\n\r\n  // radio button handler\r\n  const radioHandler = (radio, setRadio, radioFilled, radioEmpty) => {\r\n    if (radio === radioEmpty) {\r\n      setAgree(true);\r\n      setRadio(radioFilled);\r\n    } else {\r\n      setRadio(radioEmpty);\r\n      setAgree(false);\r\n    }\r\n  };\r\n\r\n  // darkmode settings\r\n  const isDarkMode = useSelector((state) => state.theme.darkMode);\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card>\r\n        <img\r\n          className=\"signupSVG\"\r\n          src=\"https://wezo-media.s3.ap-south-1.amazonaws.com/UI/signUP.svg\"\r\n          alt=\"two people working together\"\r\n        />\r\n\r\n        <form className=\"form\">\r\n          <h3\r\n            className={`${\r\n              isDarkMode\r\n                ? \"main-heading main-heading-dark-mode\"\r\n                : \"main-heading\"\r\n            }`}\r\n          >\r\n            Sign Up\r\n          </h3>\r\n          {err !== \"\" ? <FormError message={err} invalid={true} /> : null}\r\n          <Input\r\n            placeHolder=\"Name\"\r\n            ref={name}\r\n            onChange={nameOnChange}\r\n            onFocus={nameOnFocus}\r\n            onBlur={nameOnBlur}\r\n            autoFocus={true}\r\n          />\r\n          <Input\r\n            placeHolder=\"Email\"\r\n            ref={email}\r\n            onBlur={emailOnBlur}\r\n            onFocus={emailOnFocus}\r\n            onChange={emailOnChange}\r\n          />\r\n          <Input\r\n            placeHolder=\"Password\"\r\n            ref={password}\r\n            onBlur={passwordOnBlur}\r\n            onFocus={passwordOnFocus}\r\n            onChange={passwordOnChange}\r\n            type=\"password\"\r\n          />\r\n          <Input\r\n            placeHolder=\"Confirm Password\"\r\n            ref={passwordConfirm}\r\n            onBlur={passwordCOnBlur}\r\n            onFocus={passwordCOnFocus}\r\n            onChange={passwordCOnChange}\r\n            type=\"password\"\r\n          />\r\n          <Radio\r\n            text=\"I have read and agreed to WeZo terms of service\"\r\n            onClick={radioHandler}\r\n          />\r\n          <Button name=\"Sign Up\" onClick={signUpHandler} type=\"submit\" />\r\n          <p\r\n            className={`${\r\n              isDarkMode ? \"toOther toOther-dark-mode\" : \"toOther\"\r\n            }`}\r\n          >\r\n            Already have an account ?&nbsp;\r\n            {\r\n              <Link className=\"link\" to=\"/login\">\r\n                Sign in\r\n              </Link>\r\n            }\r\n          </p>\r\n\r\n          {loading !== \"\" ? (\r\n            <Loading text={loading} addClass=\"loadingMessage valid right\" />\r\n          ) : null}\r\n        </form>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default SignUp;\r\n","D:\\front-end\\src\\pages\\LoginPage\\Login.js",["389","390"],"import Input from \"../../UI/Input\";\r\nimport Card from \"../../UI/Card\";\r\nimport Button from \"../../UI/Button\";\r\nimport classes from \"./Login.module.css\";\r\nimport { emailListeners, ValidateEmail } from \"../signUP/SignUpHandlers\";\r\nimport { useRef, useState } from \"react\";\r\nimport { loginUser } from \"./LoginHandler\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { loadingActions } from \"../../Store/loading-slice\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Login = (props) => {\r\n  const email = useRef();\r\n  const password = useRef();\r\n  const history = useHistory();\r\n\r\n  const [loading, setLoading] = useState(\"\");\r\n\r\n  const { emailOnBlur, emailOnFocus, emailOnChange } = emailListeners();\r\n\r\n  // redux state\r\n  const dispatch = useDispatch();\r\n\r\n  const loginHandler = async (e, setClick) => {\r\n    e.preventDefault();\r\n    if (\r\n      !ValidateEmail(email.current.value.trim()) ||\r\n      password.current.value.trim().length < 8\r\n    ) {\r\n      dispatch(\r\n        loadingActions.setLoading({\r\n          isLoading: true,\r\n          message: \"Invalid email or password, try again\",\r\n          color: \"red\",\r\n        })\r\n      );\r\n      // setLoading(\"Invalid email or password, try again\");\r\n    } else {\r\n      await loginUser(\r\n        email.current.value.trim(),\r\n        password.current.value.trim(),\r\n        setLoading,\r\n        dispatch,\r\n        setClick,\r\n        history\r\n      );\r\n    }\r\n  };\r\n\r\n  // dont know y but signup css classes are working here too\r\n  // look at forgot password and signup\r\n\r\n  //loading animation\r\n\r\n  // console.log(\"is it loading\", isLoading);\r\n\r\n  return (\r\n    <Card>\r\n      <form className={classes.form}>\r\n        <Input\r\n          ref={email}\r\n          placeHolder=\"Email\"\r\n          type=\"email\"\r\n          onChange={emailOnChange}\r\n          onBlur={emailOnBlur}\r\n          onFocus={emailOnFocus}\r\n          autoFocus={true}\r\n        />\r\n        <Input\r\n          ref={password}\r\n          placeHolder=\"Password\"\r\n          type=\"password\"\r\n          autoFocus={false}\r\n        />\r\n        <Button type=\"submit\" onClick={loginHandler} name=\"Sign In\" />\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\nexport default Login;\r\n\r\n// {/* {loading !== \"\" ? (\r\n//           <Loading text={loading} addClass=\"valid right loadingMessage\" />\r\n//         ) : null} */}\r\n","D:\\front-end\\src\\pages\\Profile\\Profile.js",[],"D:\\front-end\\src\\pages\\ForgotPassword\\ForgotPassword.js",["391","392"],"import axios from \"axios\";\r\nimport { useCallback } from \"react\";\r\nimport Button from \"../../UI/Button\";\r\nimport Card from \"../../UI/Card\";\r\nimport Input from \"../../UI/Input\";\r\nimport { emailListeners, ValidateEmail } from \"../signUP/SignUpHandlers\";\r\nimport { useRef, useState } from \"react\";\r\nimport Loading from \"../../UI/Loading\";\r\nimport { forgotPass } from \"./ForgotPasswordHandler\";\r\n\r\n// will be using same classes from login\r\nimport classes from \"../LoginPage/Login.module.css\";\r\n\r\nconst ForgotPassword = (props) => {\r\n  const email = useRef();\r\n  const [loading, setLoading] = useState([\"\", \"valid\"]);\r\n\r\n  const resetPasswordHandler = async (e, setClick) => {\r\n    e.preventDefault();\r\n\r\n    if (!ValidateEmail(email.current.value.trim())) {\r\n      setLoading(\"Invalid email address\");\r\n    } else {\r\n      await forgotPass(email.current.value.trim(), setLoading, setClick);\r\n    }\r\n  };\r\n\r\n  const { emailOnBlur, emailOnFocus, emailOnChange } = emailListeners();\r\n  return (\r\n    <Card>\r\n      <form className={classes.form}>\r\n        <Input\r\n          onFocus={emailOnFocus}\r\n          onBlur={emailOnBlur}\r\n          onChange={emailOnChange}\r\n          ref={email}\r\n          placeHolder=\"Email address\"\r\n        />\r\n        <Button type=\"submit\" onClick={resetPasswordHandler} name=\"Reset password\" />\r\n        {loading[0] !== \"\" ? <Loading text={loading[0]} addClass={loading[1] + \" right loadingMessage\"} /> : null}\r\n      </form>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ForgotPassword;\r\n","D:\\front-end\\src\\pages\\ChangePassword\\ChangePassword.js",[],"D:\\front-end\\src\\pages\\signUP\\afterSignUp\\Bio.js",[],"D:\\front-end\\src\\pages\\signUP\\afterSignUp\\AddSkills.js",["393","394","395"],"import Card from \"../../../UI/Card\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport classes from \"./AddSkills.module.css\";\r\nimport Button from \"../../../UI/Button\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useRef } from \"react\";\r\nimport del from \"../../../UI/imgs/close.svg\";\r\nimport { skillAutoURL, addSkillsURL } from \"../../../URL/signUpURL\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { loadingActions } from \"../../../Store/loading-slice\";\r\nimport { userActions } from \"../../../Store/user-slice\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport closeIcon from \"../../../UI/imgs/close.svg\";\r\n\r\nconst AddSkills = (props) => {\r\n  const isDarkMode = useSelector((state) => state.theme.darkMode);\r\n  let user = useSelector((state) => state.user.userObj);\r\n  const dispatch = useDispatch();\r\n\r\n  // try\r\n  let egSkills = [\"eg: python\"];\r\n  if (props.skills) {\r\n    console.log(props.skills);\r\n    egSkills = [...props.skills];\r\n  }\r\n\r\n  const [skill, setSkill] = useState(egSkills);\r\n  const token = useSelector((state) => state.user.token);\r\n  const [sarray, setSarray] = useState([]); // suggestions array\r\n  const [stopSearch, setStopSearch] = useState(false);\r\n  const [index, setIndex] = useState(0);\r\n  const history = useHistory();\r\n  const usedAs = props.usedAs;\r\n\r\n  if (index != 0) {\r\n    console.log(document.getElementById(index - 1 + \"sarray\"));\r\n  }\r\n\r\n  // const [typing, setTyping] = useState(false);\r\n  const inpSkill = useRef();\r\n\r\n  const skillHandler = async (e) => {\r\n    if (e.target.value.length >= 2 && !stopSearch) {\r\n      const suggestions = await axios.get(skillAutoURL + e.target.value, {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      });\r\n\r\n      if (suggestions.data.search.length === 0) {\r\n        setStopSearch(true);\r\n      }\r\n\r\n      // console.log(suggestions.data.search.length === 0);\r\n\r\n      setSarray([...suggestions.data.search, { name: \"\" }]);\r\n    }\r\n    if (e.target.value.length < 2) {\r\n      setStopSearch(false); // activate search after backspacing unknown skill eg nodejs\r\n      setSarray([]);\r\n    }\r\n\r\n    console.log([...sarray]);\r\n    setSarray((prev) => {\r\n      const temp = [...prev];\r\n      temp[prev.length - 1] = { name: e.target.value };\r\n      return temp;\r\n    });\r\n\r\n    // remove example skill\r\n    if (skill[0] === \"eg: python\") {\r\n      setSkill([]);\r\n    }\r\n  };\r\n\r\n  const addSkillHandler = (e) => {\r\n    // console.log(e.target.outerText);\r\n    document.getElementById(\"searchBarForSkills\").focus();\r\n\r\n    setIndex(0);\r\n    setStopSearch(false);\r\n\r\n    console.log(inpSkill);\r\n    inpSkill.current.value = \"\";\r\n    setSarray([]);\r\n    if (skill) {\r\n      if (!skill.includes(e.target.outerText)) {\r\n        setSkill((oldArray) => [...oldArray, e.target.outerText]);\r\n      }\r\n    } else {\r\n      setSkill([e.target.outerText]);\r\n    }\r\n  };\r\n\r\n  const enterHandler = (e) => {\r\n    if (e.keyCode === 13 && index === 0) {\r\n      addSkillHandler({ target: { outerText: e.target.value } });\r\n    } else if (e.keyCode === 13) {\r\n      document.getElementById(index - 1 + \"sarray\").click();\r\n    }\r\n  };\r\n\r\n  const removeSkill = (e) => {\r\n    // console.log(e.target.outerText);\r\n    document.getElementById(\"searchBarForSkills\").focus();\r\n    const temp = [...skill].filter((el) => el !== e);\r\n\r\n    setSkill([...temp]);\r\n  };\r\n\r\n  const arrowkeyHandlers = (e) => {\r\n    // console.log(e);\r\n    // arrow down\r\n    if (e.keyCode === 40) {\r\n      if (index === sarray.length) {\r\n        setIndex(0);\r\n      } else {\r\n        setIndex((p) => p + 1);\r\n      }\r\n    } else if (e.keyCode === 38) {\r\n      if (index === 0) {\r\n        setIndex(sarray.length);\r\n      } else {\r\n        setIndex((p) => p - 1);\r\n      }\r\n    }\r\n  };\r\n\r\n  const submitSkillsHandler = async (e) => {\r\n    if (skill.length > 0) {\r\n      // no more old school loading\r\n      if (usedAs === \"addSkills\") {\r\n        dispatch(\r\n          loadingActions.setLoading({\r\n            isLoading: true,\r\n            message: \"Updating your skills\",\r\n          })\r\n        );\r\n      }\r\n      // console.log(token);\r\n      const res = await axios.post(\r\n        addSkillsURL,\r\n        { skills: skill },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + token,\r\n          },\r\n        }\r\n      );\r\n\r\n      const tempUser = { ...user, skills: skill };\r\n\r\n      dispatch(userActions.signUp({ user: tempUser, token: token }));\r\n      localStorage.setItem(\"user_Obj\", JSON.stringify(tempUser));\r\n\r\n      // TODO: check if signup is working properly\r\n      // history.push(\"/profile\");\r\n\r\n      if (usedAs === \"addSkills\") {\r\n        dispatch(\r\n          loadingActions.setLoading({\r\n            isLoading: true,\r\n            message: \"skills updated successfully\",\r\n          })\r\n        );\r\n\r\n        setTimeout(function () {\r\n          dispatch(\r\n            loadingActions.setLoading({\r\n              isLoading: false,\r\n            })\r\n          );\r\n        }, 1000);\r\n\r\n        history.push(\"/signup/addbio\");\r\n      } else if (usedAs === \"editSkills\") {\r\n        props.setUser({ ...tempUser });\r\n        props.editSkillsHandler();\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card custom={classes.card}>\r\n      <div className={classes.logonstep}>\r\n        <img\r\n          className={classes.logo}\r\n          alt=\"logo\"\r\n          src={isDarkMode ? \"/images/wezo_dark.svg\" : \"/images/wezo_white.svg\"}\r\n        />\r\n        {usedAs === \"editSkills\" ? (\r\n          <img src={closeIcon} onClick={props.editSkillsHandler} className={classes.closeIcon} alt=\"\" />\r\n        ) : (\r\n          <p className={classes.steps}>Step 3 of 4</p>\r\n        )}\r\n      </div>\r\n      <h1 className={`${classes.heading} ${isDarkMode ? classes.HeadingDark : \"\"}`}>\r\n        {usedAs === \"editSkills\" ? \"Edit\" : \"Add\"} your skill set...!\r\n      </h1>\r\n      {/* <h1 className={classes.subHeading}>Add a splash of personality and mention something that you love</h1> */}\r\n\r\n      <div className={classes.searchBox}>\r\n        <div className={classes.content}>\r\n          <input\r\n            id=\"searchBarForSkills\"\r\n            ref={inpSkill}\r\n            autoFocus\r\n            className={`${classes.skills} ${isDarkMode ? classes.skillsDark : \"\"}`}\r\n            onChange={skillHandler}\r\n            placeholder=\"Search for skills\"\r\n            onKeyUp={enterHandler}\r\n            onKeyDown={arrowkeyHandlers}\r\n            autoComplete=\"off\"\r\n          />\r\n\r\n          <img className={classes.search} alt=\"search icon\" src=\"/images/search.svg\" />\r\n        </div>\r\n\r\n        <ul className={classes.suggestions}>\r\n          {sarray\r\n            ? sarray.map((s, i) => {\r\n                if (s.name !== \"\") {\r\n                  return (\r\n                    <li className={index - 1 === i ? classes.addThisgoogle : \"\"} key={s.name}>\r\n                      <p id={i + \"sarray\"} onClick={addSkillHandler}>\r\n                        {s.name}\r\n                      </p>\r\n                    </li>\r\n                  );\r\n                }\r\n              })\r\n            : \"\"}\r\n        </ul>\r\n\r\n        <div className={classes.skillContent}>\r\n          {skill\r\n            ? skill.map((e) => (\r\n                <div key={e} className={classes.addedSkills}>\r\n                  <div key={e} className={classes.skillContainer}>\r\n                    {e}\r\n                  </div>\r\n                  <img\r\n                    className={classes.hide}\r\n                    onClick={() => {\r\n                      removeSkill(e);\r\n                    }}\r\n                    alt={e}\r\n                    src={del}\r\n                  />\r\n                </div>\r\n              ))\r\n            : \"\"}\r\n        </div>\r\n        <hr className={classes.dashedLine} />\r\n      </div>\r\n      <Button\r\n        onClick={submitSkillsHandler}\r\n        custom={`${classes.button} ${!isDarkMode ? classes.buttonNotDark : \"\"}`}\r\n        name=\"Submit\"\r\n      />\r\n      {props.skills ? (\r\n        \"\"\r\n      ) : (\r\n        <Link className={classes.link} to=\"/signup/addbio\">\r\n          Skip for now\r\n        </Link>\r\n      )}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default AddSkills;\r\n","D:\\front-end\\src\\pages\\signUP\\afterSignUp\\UserName.js",["396","397"],"import Card from \"../../../UI/Card\";\r\nimport Input from \"../../../UI/Input\";\r\nimport classes from \"./UserName.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport axios from \"axios\";\r\nimport { checkUserNameURL, setUsernameURL } from \"../../../URL/signUpURL\";\r\nimport Button from \"../../../UI/Button\";\r\nimport { useRef, useState } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { loadingActions } from \"../../../Store/loading-slice\";\r\nimport { userActions } from \"../../../Store/user-slice\";\r\n\r\nconst UserName = (props) => {\r\n  const isDarkMode = useSelector((state) => state.theme.darkMode);\r\n  const user = useSelector((state) => state.user.userObj);\r\n  const token = useSelector((state) => state.user.token);\r\n  const unameRef = useRef();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [userName, setUserName] = useState(\"\");\r\n\r\n  const inputHandler = (\r\n    e,\r\n    valid,\r\n    render,\r\n    red,\r\n    message,\r\n    setValid,\r\n    setRender,\r\n    setRed,\r\n    setMessage\r\n  ) => {\r\n    const doneTyping = async () => {\r\n      try {\r\n        const res = await axios.get(checkUserNameURL + e.target.value.trim());\r\n        console.log(res);\r\n        if (res.data.available) {\r\n          setRender(true);\r\n          setMessage(\"Username available\");\r\n          setRed(false);\r\n        } else {\r\n          setRender(true);\r\n          setMessage(\"Username not available\");\r\n          setRed(true);\r\n        }\r\n      } catch (err) {}\r\n    };\r\n\r\n    if (e.target.value.trim().length >= 3) {\r\n      //   console.log(e.target.value);\r\n      //   setRender(true);\r\n      //   setMessage(\"erer\");\r\n\r\n      if (/^[A-Za-z][A-Za-z0-9_]{2,10}$/.test(e.target.value.trim())) {\r\n        setRender(false);\r\n        let typingTimer;\r\n        let doneTypingInterval = 800;\r\n\r\n        clearTimeout(typingTimer);\r\n        typingTimer = setTimeout(doneTyping, doneTypingInterval);\r\n      } else {\r\n        setRender(true);\r\n        setMessage(\r\n          \"Username must be at least 3 letters and start with letter and can contain _ and letters\"\r\n        );\r\n      }\r\n    } else {\r\n      setRender(false);\r\n    }\r\n  };\r\n\r\n  const submitUnameHandler = async () => {\r\n    try {\r\n      if (unameRef.current.value.trim().length >= 3) {\r\n        dispatch(\r\n          loadingActions.setLoading({\r\n            isLoading: true,\r\n            showSpinner: false,\r\n            message: \"setting up your username...\",\r\n          })\r\n        );\r\n\r\n        const result = await axios.post(\r\n          setUsernameURL,\r\n          { uname: unameRef.current.value.trim().toLowerCase() },\r\n          {\r\n            headers: {\r\n              Authorization: `Bearer ${token}`,\r\n            },\r\n          }\r\n        );\r\n\r\n        const tempUser = {\r\n          ...user,\r\n          userID: result.data.userID,\r\n        };\r\n        dispatch(userActions.signUp({ user: tempUser, token: token }));\r\n        localStorage.setItem(\"user_Obj\", JSON.stringify(tempUser));\r\n\r\n        dispatch(\r\n          loadingActions.setLoading({\r\n            isLoading: true,\r\n            message: \"username updated\",\r\n          })\r\n        );\r\n\r\n        setTimeout(function () {\r\n          dispatch(\r\n            loadingActions.setLoading({\r\n              isLoading: false,\r\n            })\r\n          );\r\n        }, 1000);\r\n\r\n        history.push(\"/signup/addskills/\");\r\n      }\r\n    } catch (err) {\r\n      console.log(err);\r\n      dispatch(\r\n        loadingActions.setLoading({\r\n          isLoading: true,\r\n          message: \"err\",\r\n          color: \"red\",\r\n          forwardTo: \"/signup/addusername\",\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card custom={classes.customCard}>\r\n      <div className={classes.logonstep}>\r\n        <img\r\n          className={classes.logo}\r\n          alt=\"logo\"\r\n          src={isDarkMode ? \"/images/wezo_dark.svg\" : \"/images/wezo_white.svg\"}\r\n        />\r\n        <p className={classes.steps}>Step 2 of 4</p>\r\n      </div>\r\n\r\n      <h1\r\n        className={`${classes.heading} ${\r\n          isDarkMode ? classes.HeadingDark : \"\"\r\n        }`}\r\n      >\r\n        Username\r\n      </h1>\r\n      <h1 className={classes.subHeading}>\r\n        Pick a username that is easy to remember\r\n      </h1>\r\n      <Input\r\n        custom={classes.customInput}\r\n        onChange={inputHandler}\r\n        placeHolder=\"username\"\r\n        ref={unameRef}\r\n      />\r\n      <Button custom={classes.btn} name=\"submit\" onClick={submitUnameHandler} />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default UserName;\r\n","D:\\front-end\\src\\pages\\Feed\\Feed.js",["398","399","400","401","402","403","404","405"],"import LinkButton from \"../../UI/LinkButton\";\r\nimport { Fragment, useRef } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Hls from \"hls.js\";\r\nimport { Route, useHistory, Link, useParams } from \"react-router-dom\";\r\nimport VideoJS from \"../Player/VideoJS\";\r\n\r\nimport ListPosts from \"../post/ListPosts\";\r\nimport DetailedPost from \"../post/DetailedPost\";\r\nimport AddComment from \"../post/AddComment\";\r\nimport classes from \"./feed.module.css\";\r\nimport NavBar from \"./navbar/Navbar\";\r\n\r\nconst Feed = (props) => {\r\n  let user = useSelector((state) => state.user.userObj);\r\n  const token = useSelector((state) => state.user.token);\r\n\r\n  // video player\r\n\r\n  const playerRef = useRef(null);\r\n\r\n  const videoJsOptions = {\r\n    // lookup the options in the docs for more options\r\n    autoplay: true,\r\n    controls: true,\r\n    responsive: true,\r\n\r\n    html5: {\r\n      vhs: {\r\n        // withCredentials: true,\r\n      },\r\n    },\r\n\r\n    sources: [\r\n      {\r\n        src: \"https://wezo-video.s3.ap-south-1.amazonaws.com/test1.m3u8\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const handlePlayerReady = (player) => {\r\n    playerRef.current = player;\r\n    console.log(playerRef);\r\n    // you can handle player events here\r\n    player.on(\"waiting\", () => {\r\n      console.log(\"player is waiting\");\r\n    });\r\n\r\n    player.on(\"dispose\", () => {\r\n      console.log(\"player will dispose\");\r\n    });\r\n  };\r\n\r\n  // video player\r\n\r\n  return (\r\n    <Fragment>\r\n      <Route exact path=\"/feed\">\r\n        {/* <p>This is the feed i was talking about :D</p>\r\n        <LinkButton text=\"Profile\" to={\"/Profile/\" + user.userID} />\r\n        <LinkButton text=\"video\" to={\"feed/watch/videoID\"} />\r\n        <LinkButton\r\n          text=\"show post\"\r\n          to={\"feed/showPost/61977db660a0d37e3c374a8a\"}\r\n        />\r\n      </Route>\r\n\r\n      <Route exact path={`/feed/watch/videoID`}>\r\n        <VideoJS options={videoJsOptions} onReady={handlePlayerReady} />\r\n      </Route>\r\n      <Route exact path={`/feed/showPost/:postID`}>\r\n        <Post token={token} /> */}\r\n        <div className={classes.feed}>\r\n          <div className={classes.navbar}>\r\n            <NavBar userID={user.userID} />\r\n          </div>\r\n          <div className={classes.posts}>\r\n            <AddComment usedAs=\"addPost\" token={token} loggedUser={user} />\r\n            <ListPosts token={token} />\r\n          </div>\r\n          <div className={classes.suggested}></div>\r\n        </div>\r\n      </Route>\r\n      {/* <Route exact path=\"/feed/viewPost/:postID/:index\">\r\n        <DetailedPost token={token} />\r\n      </Route> */}\r\n\r\n      <Route exact path=\"/feed/viewPost/:postID\">\r\n        <div className={classes.feed}>\r\n          <div className={classes.navbar}>\r\n            <NavBar userID={user.userID} />\r\n          </div>\r\n          <div className={classes.posts}>\r\n            <DetailedPost token={token} />\r\n          </div>\r\n          <div className={classes.suggested}></div>\r\n        </div>\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Feed;\r\n","D:\\front-end\\src\\pages\\signUP\\afterSignUp\\UploadProfile.js",[],"D:\\front-end\\src\\pages\\Profile\\V2\\ProfileV2.js",["406","407","408","409","410","411","412","413"],"import classes from \"./profilev2.module.css\";\r\nimport NavBar from \"../../Feed/navbar/Navbar\";\r\nimport feedClasses from \"../../Feed/feed.module.css\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Route, useHistory, Link, useParams } from \"react-router-dom\";\r\nimport { Fragment, useState } from \"react\";\r\nimport Card from \"../../../UI/Card\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport axios from \"axios\";\r\nimport { useEffect } from \"react\";\r\nimport { viewProfileURL, followURL, amIFollowingURL } from \"../../../URL/signUpURL\";\r\nimport Button from \"../../../UI/Button\";\r\nimport moreMenu from \"../../../UI/imgs/moreMenu.svg\";\r\nimport calenderIcon from \"../../../UI/imgs/New folder/calendar.svg\";\r\nimport locationIcon from \"../../../UI/imgs/New folder/place.svg\";\r\nimport closeIcon from \"../../../UI/imgs/close2.svg\";\r\nimport chatIcon from \"../../../UI/imgs/chat.svg\";\r\nimport ImageViewer from \"../../../UI/ImageViewer\";\r\nimport personIcon from \"../../../UI/imgs/person.svg\";\r\nimport SkillsV2 from \"./SkillsV2\";\r\nimport P from \"../../../UI/P\";\r\nimport ListPatches from \"./ListPatches\";\r\nimport EditProfile from \"../sub/EditProfile\";\r\nimport { listProfileActions } from \"../../../Store/list-people-slice\";\r\nimport Projects from \"./Projects\";\r\n\r\nconst loadProfile = async (url, token, setUser, setFollowTxt, setLoading) => {\r\n  try {\r\n    setLoading(true);\r\n    const result = await axios.get(url, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n\r\n    setUser(result.data.data);\r\n    // await amIFollowing(amIFollowingURL, token, result.data.data._id, setFollowTxt);\r\n    setLoading(false);\r\n  } catch (err) {\r\n    console.error(\"err in fetching profile \", err);\r\n  }\r\n};\r\n\r\nexport const followSomeOne = async (url, token, id, setUser) => {\r\n  try {\r\n    const result = await axios.post(\r\n      url,\r\n      { follow: id },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n    if (result.data.message === \"following successfully\") {\r\n      setUser((p) => ({ ...p, followersCnt: p.followersCnt + 1 }));\r\n    } else {\r\n      setUser((p) => ({ ...p, followersCnt: p.followersCnt - 1 }));\r\n    }\r\n  } catch (err) {\r\n    console.log(\"err in following :(\", err);\r\n  }\r\n};\r\n\r\nexport const amIFollowing = async (url, token, id, setBtnTxt) => {\r\n  try {\r\n    const result = await axios.post(\r\n      url,\r\n      { following: id },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (result.data.data.split(\" \")[0] === \"1\") {\r\n      setBtnTxt(\"Following\");\r\n    } else {\r\n      setBtnTxt(\"Follow\");\r\n    }\r\n  } catch (err) {\r\n    console.log(\"err in finding out if you follow each other or not\");\r\n  }\r\n};\r\n\r\nconst ProfielV2 = (props) => {\r\n  const params = useParams();\r\n  const userID = params.userID;\r\n  const loggedUser = useSelector((state) => state.user.userObj);\r\n  const [loading, setLoading] = useState(true);\r\n  const [user, setUser] = useState();\r\n  const [follow, setFollow] = useState(\"Follow\");\r\n  const [view, setView] = useState(false);\r\n  const [maniImage, setMainImage] = useState();\r\n  const [show, setShow] = useState(\"\");\r\n  const [showEdit, setShowEdit] = useState(false);\r\n  const [followTxt, setFollowTxt] = useState();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    if (!user || !user.name) {\r\n      setLoading(true);\r\n    }\r\n  });\r\n\r\n  // loading profile\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      loadProfile(viewProfileURL + userID, props.token, setUser, setFollow, setLoading);\r\n    }\r\n  }, [userID, props.token]);\r\n\r\n  useEffect(() => {\r\n    if (user) {\r\n      if (user._id === loggedUser._id) {\r\n        setFollowTxt(\"Edit Profile\");\r\n        return;\r\n      } else {\r\n        amIFollowing(amIFollowingURL, props.token, user._id, setFollowTxt);\r\n      }\r\n    }\r\n  }, [props.token, user]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={feedClasses.feed}>\r\n        <div className={feedClasses.navbar}>\r\n          <NavBar />\r\n        </div>\r\n        <div className={`${feedClasses.posts} ${classes.profileArea}`}>\r\n          <Card custom={`${classes.card} ${classes.loader}`}>\r\n            <GuardSpinner color={\"#2ba272\"} loading={loading} />\r\n          </Card>\r\n        </div>\r\n        <div className={feedClasses.suggested}></div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  let banner;\r\n  let profile;\r\n\r\n  if (user && user.banner) {\r\n    banner = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/banner/\" + user.banner.replace(\"$\", \"%24\");\r\n  } else if (user && !user.banner) {\r\n    banner = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/banner/default.jpg\";\r\n  }\r\n  if (user && user.profile) {\r\n    profile = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/\" + user.profile.replace(\"$\", \"%24\");\r\n  } else if (user && !user.profile) {\r\n    profile = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/default.png\";\r\n  }\r\n\r\n  const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"April\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\n  let year;\r\n  let month;\r\n  if (user) {\r\n    year = new Date(user.joinedAt).getFullYear();\r\n    month = monthNames[new Date(user.joinedAt).getMonth()];\r\n  }\r\n\r\n  const viewHandler = () => {\r\n    setView((p) => !p);\r\n  };\r\n\r\n  const bannerHandler = () => {\r\n    setMainImage(banner);\r\n    setView((p) => !p);\r\n  };\r\n\r\n  const profileHandler = () => {\r\n    setMainImage(profile);\r\n    setView((p) => !p);\r\n  };\r\n\r\n  const showFollowingHandler = () => {\r\n    if (user.followingCnt > 0) {\r\n      setShow(\"following\");\r\n    }\r\n  };\r\n\r\n  const buttonHandler = () => {\r\n    // if its edit show edit menu\r\n    if (user.userID === loggedUser.userID) {\r\n      editHandler();\r\n    } else {\r\n      followSomeOne(followURL, props.token, user._id, setUser);\r\n      setFollowTxt((p) => {\r\n        if (p === \"Following\") {\r\n          return \"Follow\";\r\n        } else {\r\n          return \"Following\";\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const editHandler = () => {\r\n    setShowEdit((p) => !p);\r\n  };\r\n\r\n  const closeShowHandler = () => {\r\n    dispatch(listProfileActions.reset());\r\n    setShow();\r\n  };\r\n\r\n  const showFollowersHandler = () => {\r\n    if (user.followersCnt > 0) {\r\n      setShow(\"followers\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={feedClasses.feed}>\r\n        <div className={feedClasses.navbar}>\r\n          <NavBar userID={loggedUser.userID} />\r\n        </div>\r\n        <Route path={\"/profile/\" + userID}>\r\n          <div className={`${feedClasses.posts} ${classes.profileArea}`}>\r\n            <div>\r\n              <img className={classes.banner} src={banner} alt=\"\" onClick={bannerHandler} />\r\n            </div>\r\n            <Card custom={classes.top}>\r\n              <div className={classes.profileContainer}>\r\n                <img className={classes.profile} onClick={profileHandler} src={profile} alt=\"\" />\r\n                <div className={classes.nameContainer}>\r\n                  <h1 className={classes.name}>{user.name}</h1>\r\n                  <h3 className={classes.userID}>@{user.userID}</h3>\r\n                </div>\r\n                <div className={classes.actionButtons}>\r\n                  <img className={classes.moreMenu} src={moreMenu} alt=\"\" />\r\n                  {followTxt ? (\r\n                    <Button\r\n                      onClick={buttonHandler}\r\n                      custom={`${classes.btn} ${followTxt === \"Following\" ? classes.following : \"\"}`}\r\n                      name={followTxt}\r\n                    />\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                </div>\r\n                <div className={classes.bio}>\r\n                  <P emoji={classes.emoji} className={classes.p} text={user.bio} />\r\n                </div>\r\n                <div className={classes.bottomButtons}>\r\n                  <p onClick={showFollowingHandler}>\r\n                    <span>{user.followingCnt + \" \"}</span>\r\n                    Following\r\n                  </p>\r\n                  <p onClick={showFollowersHandler}>\r\n                    <span>{user.followersCnt + \" \"}</span>\r\n                    Followers\r\n                  </p>\r\n                  <div className={classes.bDiv}>\r\n                    <img src={calenderIcon} alt=\"\" />\r\n                    <p>{month + \" \" + year}</p>\r\n                  </div>\r\n                  <div className={classes.bDiv}>\r\n                    <img src={locationIcon} alt=\"\" />\r\n                    <p>{user.country}</p>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n              {show === \"following\" ? (\r\n                <ListPatches\r\n                  close={closeShowHandler}\r\n                  token={props.token}\r\n                  usedAs=\"following\"\r\n                  userID={user.userID}\r\n                  followingCnt={user.followingCnt}\r\n                  followersCnt={user.followersCnt}\r\n                  _id={user._id}\r\n                  loggedUserID={loggedUser.userID}\r\n                  loggedUser_id={loggedUser._id}\r\n                  myProfile={user.userID === loggedUser.userID ? true : false}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {show === \"followers\" ? (\r\n                <ListPatches\r\n                  close={closeShowHandler}\r\n                  token={props.token}\r\n                  usedAs=\"followers\"\r\n                  userID={user.userID}\r\n                  followingCnt={user.followingCnt}\r\n                  followersCnt={user.followersCnt}\r\n                  _id={user._id}\r\n                  loggedUserID={loggedUser.userID}\r\n                  loggedUser_id={loggedUser._id}\r\n                  myProfile={user.userID === loggedUser.userID ? true : false}\r\n                />\r\n              ) : (\r\n                \"\"\r\n              )}\r\n              {view ? <ImageViewer default={0} viewHandler={viewHandler} images={[maniImage]} /> : \"\"}\r\n            </Card>\r\n            <SkillsV2 setUser={setUser} user={user} showEditButton={user.userID === loggedUser.userID} />\r\n            <Projects\r\n              projectsCnt={user.projectsCnt}\r\n              user_id={user._id}\r\n              github_username={user.github_username}\r\n              userID={user.userID}\r\n              token={props.token}\r\n              loggedu_id={loggedUser._id}\r\n              key={\"aa\"}\r\n            />\r\n          </div>\r\n        </Route>\r\n\r\n        {showEdit ? <EditProfile setUser={setUser} token={props.token} closeHandler={editHandler} user={user} /> : \"\"}\r\n        <div className={feedClasses.suggested}></div>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProfielV2;\r\n","D:\\front-end\\src\\pages\\collab\\CollabMain.js",["414","415","416","417","418"],"import Navbar from \"../Feed/navbar/Navbar\";\r\nimport { Fragment, useRef, useEffect, useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Route, useHistory, Link, useParams, useLocation } from \"react-router-dom\";\r\nimport NavBar from \"../Feed/navbar/Navbar\";\r\nimport navBarClasses from \"../Feed/feed.module.css\";\r\nimport classes from \"./collabMain.module.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport ListCollabs from \"./ListCollabs\";\r\n\r\nconst CollabMain = (props) => {\r\n  let user = useSelector((state) => state.user.userObj);\r\n  const token = useSelector((state) => state.user.token);\r\n  const [currentRoute, setCurrentRoute] = useState();\r\n  const location = useLocation();\r\n\r\n  useEffect(() => {\r\n    const arr = location.pathname.split(\"/\");\r\n    setCurrentRoute(arr[arr.length - 1]);\r\n  }, [location.pathname]);\r\n\r\n  const subNavArray = [\r\n    { title: \"Requests received\", to: \"/collab\" },\r\n    { title: \"Requests sent\", to: \"/collab/sent\" },\r\n    { title: \"My collabs\", to: \"/collab/mine\" },\r\n  ];\r\n\r\n  return (\r\n    <Fragment>\r\n      <Route path=\"/collab\">\r\n        <div className={navBarClasses.feed}>\r\n          <div className={navBarClasses.navbar}>\r\n            <NavBar userID={user.userID} />\r\n          </div>\r\n          <div className={`${navBarClasses.posts} ${classes.contentArea}`}>\r\n            <div className={classes.topArea}>\r\n              <div className={classes.subNav}>\r\n                {subNavArray.map((e, i) => (\r\n                  <NavLink key={i + \"navbar\"} to={e.to}>\r\n                    <div\r\n                      className={`${\r\n                        currentRoute === e.to.split(\"/\")[e.to.split(\"/\").length - 1] ? classes.active : \"\"\r\n                      }`}\r\n                    >\r\n                      {e.title}\r\n                    </div>\r\n                  </NavLink>\r\n                ))}\r\n              </div>\r\n              <ListCollabs loggedUser={user} token={token} />\r\n            </div>\r\n\r\n            <Route exact path=\"/collab/sent\">\r\n              <div>sent</div>\r\n            </Route>\r\n\r\n            <Route exact path=\"/collab/mine\">\r\n              <div>my successfull collabs</div>\r\n            </Route>\r\n          </div>\r\n          <div className={navBarClasses.suggested}></div>\r\n        </div>\r\n      </Route>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default CollabMain;\r\n","D:\\front-end\\src\\pages\\Feed\\navbar\\Navbar.js",["419"],"import { navElements } from \"./navElements\";\r\nimport classes from \"./navbar.module.css\";\r\nimport logoIcon from \"../../../UI/imgs/navIcons/logoDarkTransparent.svg\";\r\nimport Button from \"../../../UI/Button\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport { useSelector } from \"react-redux\";\r\nconst NavBar = (props) => {\r\n  const user = useSelector((state) => state.user.userObj);\r\n\r\n  const toLinks = {\r\n    Home: \"/feed\",\r\n    Profile: \"/profile/\" + user.userID,\r\n    Collab: \"/collab\",\r\n\r\n    Search: \"/search\",\r\n    Notifications: \"/notifications\",\r\n    Messages: \"/messages\",\r\n  };\r\n\r\n  return (\r\n    <div className={classes.navWrapper}>\r\n      <div className={classes.navContainer}>\r\n        <div className={classes.logo}>\r\n          <img src={logoIcon} alt=\"\" />\r\n          <h1>WeZo.club</h1>\r\n        </div>\r\n        {navElements.map((e, i) => (\r\n          // <div className={classes.navItem} key={\"navbarDiv\" + i}>\r\n          //   <div className={classes.inside}>\r\n          //     <img src={e.icon} alt=\"\" />\r\n          //     {/* <h2>{e.title}</h2> */}\r\n          //     <NavLink className={classes.navLink} to={toLinks[e.title]}>\r\n          //       {e.title}\r\n          //     </NavLink>\r\n          //   </div>\r\n          // </div>\r\n          <NavLink key={i + \"navbar\"} className={classes.navLink} to={toLinks[e.title]}>\r\n            <div className={classes.navItem} key={\"navbarDiv\" + i}>\r\n              <div className={classes.inside}>\r\n                <img src={e.icon} alt=\"\" />\r\n                {/* <h2>{e.title}</h2> */}\r\n                {e.title}\r\n              </div>\r\n            </div>\r\n          </NavLink>\r\n        ))}\r\n        <Button custom={classes.btn} name=\"signout\"></Button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","D:\\front-end\\src\\pages\\Chat\\Messages.js",[],"D:\\front-end\\src\\UI\\Input.js",["420","421"],"import { forwardRef, useState, Fragment } from \"react\";\r\nimport FormError from \"./FormError\";\r\nimport showPwdImg from \"../UI images/eye.svg\";\r\nimport hidePwdImg from \"../UI images/eye-slash.svg\";\r\nimport { useSelector } from \"react-redux\";\r\nimport \"./Input.css\";\r\n\r\nconst Input = forwardRef((props, ref) => {\r\n  const [valid, setValid] = useState(false);\r\n  const [render, setRender] = useState(false);\r\n  const [red, setRed] = useState(false);\r\n  const [message, setMessage] = useState(\"Message\");\r\n  const [passType, setPassType] = useState(props.type);\r\n  const [eye, setEye] = useState(showPwdImg);\r\n  const [val, setVal] = useState(props.defaultValue);\r\n\r\n  //dark mode\r\n  const isDarkMode = useSelector((state) => state.theme.darkMode);\r\n\r\n  const showPasswordHandler = () => {\r\n    if (eye === showPwdImg) {\r\n      setEye(hidePwdImg);\r\n    } else if (eye === hidePwdImg) {\r\n      setEye(showPwdImg);\r\n    }\r\n\r\n    if (passType === \"text\") {\r\n      setPassType(\"password\");\r\n    } else {\r\n      setPassType(\"text\");\r\n    }\r\n\r\n    console.log(\"clicked on show pass\");\r\n  };\r\n\r\n  console.log(\"boo\", props.placeHolder);\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className=\"pwd-container\">\r\n        <input\r\n          className={`${isDarkMode ? \"input input-dark-mode\" : \"input\"} ${\r\n            props.custom ? props.custom : \"\"\r\n          }`}\r\n          placeholder={props.placeHolder}\r\n          ref={ref}\r\n          type={passType ? passType : \"text\"}\r\n          value={props.defaultValue ? val : undefined}\r\n          autoFocus={props.autoFocus}\r\n          onChange={\r\n            props.onChange\r\n              ? (e) =>\r\n                  props.onChange(\r\n                    e,\r\n                    valid,\r\n                    render,\r\n                    red,\r\n                    message,\r\n                    setValid,\r\n                    setRender,\r\n                    setRed,\r\n                    setMessage,\r\n                    setVal\r\n                  )\r\n              : null\r\n          }\r\n          onFocus={\r\n            props.onFocus\r\n              ? (e) =>\r\n                  props.onFocus(\r\n                    e,\r\n                    valid,\r\n                    render,\r\n                    red,\r\n                    message,\r\n                    setValid,\r\n                    setRender,\r\n                    setRed,\r\n                    setMessage\r\n                  )\r\n              : null\r\n          }\r\n          onBlur={\r\n            props.onBlur\r\n              ? (e) =>\r\n                  props.onBlur(\r\n                    e,\r\n                    valid,\r\n                    render,\r\n                    red,\r\n                    message,\r\n                    setValid,\r\n                    setRender,\r\n                    setRed,\r\n                    setMessage\r\n                  )\r\n              : null\r\n          }\r\n        />\r\n        {props.placeHolder === \"Password\" ? (\r\n          <img src={eye} onClick={showPasswordHandler} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {props.placeHolder === \"Confirm Password\" ? (\r\n          <img src={eye} onClick={showPasswordHandler} />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      {!valid && render ? <FormError message={message} invalid={red} /> : null}\r\n    </Fragment>\r\n  );\r\n});\r\n\r\nexport default Input;\r\n","D:\\front-end\\src\\UI\\P.js",[],"D:\\front-end\\src\\UI\\Toggle.js",[],"D:\\front-end\\src\\UI\\LinkButton.js",[],"D:\\front-end\\src\\UI\\Card.js",["422"],"import classes from \"./Card.module.css\";\r\nimport { useSelector } from \"react-redux\";\r\n\r\nconst Card = (props) => {\r\n  // const isDarkMode = useSelector((state) => state.theme.darkMode);\r\n  const isDarkMode = true;\r\n  // console.log(\"card\");\r\n\r\n  return (\r\n    <div\r\n      onMouseEnter={props.onMouseEnter ? props.onMouseEnter : null}\r\n      onMouseLeave={props.onMouseLeave ? props.onMouseLeave : null}\r\n      style={props.inLine}\r\n      className={`${classes.card} ${isDarkMode ? classes[\"card-dark-mode\"] : \"\"} ${\r\n        props.width ? classes[\"card-width-\" + props.width] : \"\"\r\n      } ${props.custom ? props.custom : \"\"}`}\r\n    >\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\nexport default Card;\r\n","D:\\front-end\\src\\UI\\Loading.js",["423"],"import \"./Loading.css\";\r\nimport { PushSpinner } from \"react-spinners-kit\";\r\n\r\nconst Loading = (props) => {\r\n  console.log(props.addClass, typeof props.addClass);\r\n\r\n  return <p className={props.addClass}>{props.text}</p>;\r\n};\r\n\r\nexport default Loading;\r\n","D:\\front-end\\src\\UI\\FormError.js",[],"D:\\front-end\\src\\pages\\signUP\\SignUpHandlers.js",[],"D:\\front-end\\src\\pages\\LoginPage\\LoginHandler.js",[],"D:\\front-end\\src\\pages\\collab\\ListCollabs.js",["424","425","426","427","428","429","430","431","432"],"import classes from \"./listCollabs.module.css\";\r\nimport { postActions } from \"../../Store/posts-slice\";\r\nimport { collabActions } from \"../../Store/collab-posts-slice\";\r\nimport axios from \"axios\";\r\nimport { getListOfCollabPostsURL } from \"../../URL/signUpURL\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { toast } from \"react-toastify\";\r\nimport PostV2 from \"../post/PostV2\";\r\n\r\nconst getFeed = async (url, token, dispatch, setLoading, page, setHasMore) => {\r\n  try {\r\n    setLoading(true);\r\n    const feed = await axios.post(\r\n      url,\r\n      { page: page - 1 },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n\r\n    for (let x = 0; x < feed.data.post.length; x++) {\r\n      let merger = { haveIUpvoted: false, haveIDownvoted: false };\r\n      if (feed.data.post[x].reactions.length > 0) {\r\n        if (feed.data.post[x].reactions[0].reaction == 1) {\r\n          merger.haveIUpvoted = true;\r\n        } else if (feed.data.post[x].reactions[0].reaction == 0) {\r\n          merger.haveIDownvoted = true;\r\n        }\r\n      }\r\n      feed.data.post[x] = { ...feed.data.post[x], ...merger };\r\n    }\r\n\r\n    // console.log(feed.data.post);\r\n    // FIXME: remove this\r\n    if (page === 1) {\r\n      dispatch(collabActions.reset());\r\n    }\r\n    if (feed.data.post.length < 7) {\r\n      setHasMore(false);\r\n    }\r\n\r\n    console.log(feed.data.post);\r\n\r\n    dispatch(collabActions.addToList({ posts: feed.data.post }));\r\n    // dispatch(postActions.setLoad({ load: false }));\r\n    dispatch(collabActions.setPageNo({ pageNo: page }));\r\n    setLoading(false);\r\n  } catch (err) {\r\n    console.error(\"err fetching feed\", err);\r\n  }\r\n};\r\n\r\nconst ListCollabs = (props) => {\r\n  const dispatch = useDispatch();\r\n  const posts = useSelector((state) => state.collabPosts.posts);\r\n  const [loading, setLoading] = useState(false);\r\n  const pageSaved = useSelector((state) => state.collabPosts.page);\r\n  const [page, setPage] = useState(1);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      if (page > pageSaved || posts.length < 1) {\r\n        getFeed(getListOfCollabPostsURL, props.token, dispatch, setLoading, page, setHasMore);\r\n      }\r\n    }\r\n  }, [props.token]);\r\n\r\n  const toastId = useRef(null);\r\n  const notify = (message, details = null) => (toastId.current = toast(message, { autoClose: false, ...details }));\r\n\r\n  const update = (message, details = null) =>\r\n    toast.update(toastId.current, {\r\n      render: message,\r\n      type: toast.TYPE.SUCCESS,\r\n      autoClose: 1000,\r\n      pauseOnFocusLoss: false,\r\n      pauseOnHover: false,\r\n      ...details,\r\n    });\r\n\r\n  const nextFunction = () => {\r\n    setPage((p) => p + 1);\r\n  };\r\n\r\n  const setShowMore = (id, length) => {\r\n    dispatch(collabActions.setShowMore({ showMore: length, id: id }));\r\n  };\r\n\r\n  const downvoteHandler = (id, vote) => {\r\n    dispatch(collabActions.setDownvote({ id: id, vote: vote }));\r\n  };\r\n  const upvoteHandler = (id, vote) => {\r\n    dispatch(collabActions.setUpvote({ id: id, vote: vote }));\r\n  };\r\n\r\n  const showCollabHandler = (postID, collabReaction, index, withDraw) => {\r\n    // if (collabReaction.length === 0) {\r\n    //   setShowCollab({ show: true, postID, index: index });\r\n    // } else {\r\n    //   // with draw request\r\n    //   if (withDraw) {\r\n    //     withdrawRequest(withdrawCollabRequestURL, props.token, collabReaction[0]._id, notify, toast, update);\r\n    //     dispatch(postActions.removeCollabRequest({ index: index }));\r\n    //   }\r\n    // }\r\n  };\r\n\r\n  const hideCollabHandler = () => {\r\n    // setShowCollab((p) => ({ show: !p.show, postID: p.postID }));\r\n  };\r\n\r\n  return (\r\n    <div id=\"listOfCollabPosts\" className={classes.listPosts}>\r\n      <InfiniteScroll dataLength={posts.length} next={nextFunction} hasMore={hasMore}>\r\n        {posts.map((e, i) => {\r\n          return (\r\n            <PostV2\r\n              key={e._id}\r\n              index={i}\r\n              post={e}\r\n              token={props.token}\r\n              loggedUser={props.loggedUser}\r\n              setShowMore={setShowMore}\r\n              upvote={upvoteHandler}\r\n              downvote={downvoteHandler}\r\n              usedAs=\"post\"\r\n              showCollabHandler={showCollabHandler}\r\n            />\r\n          );\r\n        })}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListCollabs;\r\n","D:\\front-end\\src\\UI\\Radio.js",[],"D:\\front-end\\src\\pages\\Profile\\V2\\Projects.js",["433","434","435","436","437","438","439","440","441"],"import axios from \"axios\";\r\nimport classes from \"./projects.module.css\";\r\nimport Card from \"../../../UI/Card\";\r\nimport editIcon from \"../../../UI/imgs/edit icon dark.svg\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport AddProjects from \"./AddProjects\";\r\nimport { useLocation, useHistory, Route, Switch, Link, useParams } from \"react-router-dom\";\r\nimport ProjectsGitHub from \"./ProjectsGitHub\";\r\nimport { loadProjectsURL, reactOnProjectURL, deleteProjectURL } from \"../../../URL/signUpURL\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport ProjectPatch from \"./ProjectPatch\";\r\nexport const loadProjects = async (url, token, user_id, page, setProjects, setLoading, setHasMore, perPage = 3) => {\r\n  try {\r\n    if (page === 0) {\r\n      setLoading(true);\r\n    }\r\n    const body = { user_id: user_id, page: page, perPage };\r\n\r\n    const projects = await axios.post(url, body, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n\r\n    if (projects.data.projects.length < 3) {\r\n      setHasMore(false);\r\n    }\r\n\r\n    for (let x = 0; x < projects.data.projects.length; x++) {\r\n      let merger = { haveIUpvoted: false, haveIDownvoted: false };\r\n      if (projects.data.projects[x].reactions.length > 0) {\r\n        if (projects.data.projects[x].reactions[0].reaction == 1) {\r\n          merger.haveIUpvoted = true;\r\n        } else if (projects.data.projects[x].reactions[0].reaction == 0) {\r\n          merger.haveIDownvoted = true;\r\n        }\r\n\r\n        projects.data.projects[x] = { ...projects.data.projects[x], ...merger };\r\n      }\r\n    }\r\n\r\n    for (let y = 0; y < projects.data.projects.length; y++) {\r\n      if (projects.data.projects[y].likes.length < 1) {\r\n        projects.data.projects[y].likes = [{ count: 0 }];\r\n      }\r\n      if (projects.data.projects[y].dislikes.length < 1) {\r\n        projects.data.projects[y].dislikes = [{ count: 0 }];\r\n      }\r\n    }\r\n\r\n    setProjects((p) => [...p, ...projects.data.projects]);\r\n    setLoading(false);\r\n    // console.log(projects.data);\r\n  } catch (err) {\r\n    console.error(\"err loading projects of user\", err);\r\n  }\r\n};\r\n\r\nconst deleteProject = async (url, projectID, token, setProject, index) => {\r\n  try {\r\n    await axios.delete(url + projectID, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    // console.log(\"delete trigger\");\r\n\r\n    setProject((p) => {\r\n      // const a = [...p.splice(index, 1)];\r\n      // console.log(\"p\", p);\r\n      // console.log(\"a\", a);\r\n      return p.filter((el, i) => {\r\n        if (i !== index) {\r\n          return el;\r\n        }\r\n      });\r\n    });\r\n  } catch (err) {\r\n    console.error(\"error deleting project\", err);\r\n  }\r\n};\r\n\r\nconst reactOnProject = async (url, projectID, reaction, token, setProject, index) => {\r\n  try {\r\n    const reactionResult = await axios.post(\r\n      url,\r\n      { reaction: reaction, projectID: projectID },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n\r\n    // TODO: this looks like garbage but will change it soon\r\n\r\n    console.log(\"project reaction response \", reactionResult.data);\r\n  } catch (err) {\r\n    console.error(\"can't react on project err\", err);\r\n  }\r\n};\r\n\r\nconst Projects = (props) => {\r\n  const history = useHistory();\r\n  const [loading, setLoading] = useState(false);\r\n  const [projectList, setProjectList] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  useEffect(() => {\r\n    if (props.user_id && props.token) {\r\n      loadProjects(loadProjectsURL, props.token, props.user_id, page, setProjectList, setLoading, setHasMore);\r\n    }\r\n  }, [props.user_id, page]);\r\n\r\n  const addProjectHandler = () => {\r\n    history.replace(\"/profile/\" + props.userID + \"/addProject\");\r\n  };\r\n\r\n  const projectReactHandler = (index, reaction, projectID) => {\r\n    reactOnProject(reactOnProjectURL, projectID, reaction, props.token, setProjectList, index);\r\n  };\r\n\r\n  const deleteProjectHandler = (index, projectID) => {\r\n    deleteProject(deleteProjectURL, projectID, props.token, setProjectList, index);\r\n  };\r\n\r\n  const addedProjectHandler = (project) => {\r\n    setProjectList((p) => [...p, project]);\r\n  };\r\n\r\n  const showMoreHandler = () => {\r\n    if (hasMore) {\r\n      setPage((p) => p + 1);\r\n    }\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card custom={classes.card}>\r\n        <div className={classes.topDiv}>\r\n          <h1 className={classes.title}>Projects</h1>\r\n          {/* <img src={editIcon} alt=\"\" /> */}\r\n          <h1 onClick={addProjectHandler} className={classes.noProjectsH1}>\r\n            +\r\n          </h1>\r\n        </div>\r\n        <div className={classes.loader}>\r\n          <GuardSpinner color={\"#2ba272\"} loading={loading} />\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Card custom={classes.card}>\r\n      <div className={classes.topDiv}>\r\n        <h1 className={classes.title}>Projects</h1>\r\n        {/* <img src={editIcon} alt=\"\" /> */}\r\n        <h1 onClick={addProjectHandler} className={classes.noProjectsH1}>\r\n          +\r\n        </h1>\r\n      </div>\r\n      {projectList.length < 1 ? (\r\n        <div className={classes.noProjects}>\r\n          <img src=\"https://wezo-media.s3.ap-south-1.amazonaws.com/UI/no-projects.png\" alt=\"\" />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className={classes.projectsCnt}>\r\n        {projectList.map((el, i) => {\r\n          return (\r\n            <Fragment key={i}>\r\n              <ProjectPatch\r\n                projectReactHandler={projectReactHandler}\r\n                index={i}\r\n                project={el}\r\n                key={i}\r\n                loggedu_id={props.loggedu_id}\r\n                deleteProjectHandler={deleteProjectHandler}\r\n              />\r\n              <hr className={classes.hr} />\r\n              {i === projectList.length - 1 ? (\r\n                <div onClick={showMoreHandler} className={classes.showMoreDiv}>\r\n                  {hasMore ? <p>show more</p> : <p>End</p>}\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <Route exact path={\"/profile/\" + props.userID + \"/addProject\"}>\r\n        <AddProjects\r\n          addedProjectHandler={addedProjectHandler}\r\n          github_username={props.github_username}\r\n          userID={props.userID}\r\n          token={props.token}\r\n        />\r\n      </Route>\r\n\r\n      <Route exact path={\"/profile/\" + props.userID + \"/addProject/:repo\"}>\r\n        <AddProjects\r\n          addedProjectHandler={addedProjectHandler}\r\n          github_username={props.github_username}\r\n          userID={props.userID}\r\n          token={props.token}\r\n        />\r\n      </Route>\r\n\r\n      <Route exact path={\"/profile/\" + props.userID + \"/addFromGithub\"}>\r\n        <div className={classes.cnt}>\r\n          <ProjectsGitHub userID={props.userID} github_username={props.github_username} />\r\n        </div>\r\n      </Route>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Projects;\r\n","D:\\front-end\\src\\pages\\Profile\\V2\\ListPatches.js",["442"],"import ProfilePatchV2 from \"./ProfilePatchV2\";\r\nimport classes from \"./ListPatches.module.css\";\r\nimport Card from \"../../../UI/Card\";\r\nimport { listProfileActions } from \"../../../Store/list-people-slice\";\r\nimport { getFollowingURL, getFollowersURL } from \"../../../URL/signUpURL\";\r\nimport axios from \"axios\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport closeIcon from \"../../../UI/imgs/close.svg\";\r\n\r\nconst loadProfileList = async (type, token, id, page, dispatch, setLoading, setHasMore) => {\r\n  try {\r\n    setLoading(true);\r\n    const result = await axios.post(\r\n      type === \"following\" ? getFollowingURL : getFollowersURL,\r\n      type === \"following\" ? { following: id, page: page } : { followers: id, page: page },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n\r\n    const temp = type === \"following\" ? result.data.following : result.data.followers;\r\n\r\n    if (temp.length <= 0) {\r\n      setHasMore(false);\r\n    }\r\n\r\n    const ret = temp.map((e) => {\r\n      return type === \"following\" ? e._id : e._id;\r\n    });\r\n\r\n    console.log(\"ret\", ret);\r\n    dispatch(\r\n      listProfileActions.addToList({\r\n        list: ret,\r\n      })\r\n    );\r\n    setLoading(false);\r\n  } catch (err) {\r\n    console.error(\"err in fetching profile \", err);\r\n  }\r\n};\r\n\r\nconst ListPatches = (props) => {\r\n  const profileList = useSelector((state) => state.profiles.list);\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const [page, setPage] = useState(0);\r\n  const dispatch = useDispatch();\r\n\r\n  //\r\n  useEffect(() => {\r\n    if (props.token) {\r\n    } else {\r\n      return;\r\n    }\r\n    // console.log(props.user.followingID);\r\n\r\n    if (page === 0 && profileList.length === 0) {\r\n      setLoading(true);\r\n    }\r\n\r\n    const temp = props.usedAs === \"following\" ? props.followingCnt : props.followersCnt;\r\n\r\n    if (temp > profileList.length) {\r\n      setHasMore(true);\r\n    } else {\r\n      setHasMore(false);\r\n      return;\r\n    }\r\n\r\n    loadProfileList(props.usedAs, props.token, props._id, page, dispatch, setLoading, setHasMore);\r\n  }, [props.token, page]);\r\n\r\n  if (page === 0 && loading) {\r\n    return (\r\n      <div className={classes.backdrop}>\r\n        <Card custom={classes.loader}>\r\n          <GuardSpinner color={\"#2ba272\"} loading={loading} />\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className={classes.backdrop}>\r\n      <Card custom={classes.card}>\r\n        <div className={classes.topSection}>\r\n          <h1 className={classes.heading}>{props.usedAs}</h1>\r\n          <img onClick={props.close} src={closeIcon} alt=\"\" />\r\n        </div>\r\n        <hr />\r\n\r\n        <div className={classes.scrollable} id=\"scrollProfiles\">\r\n          <InfiniteScroll\r\n            dataLength={\r\n              profileList.length\r\n              // props.type == \"following\"\r\n              //   ? props.user.followingCnt\r\n              //   : props.user.followersCnt\r\n            }\r\n            next={() => setPage((p) => p + 1)}\r\n            hasMore={hasMore}\r\n            scrollableTarget=\"scrollProfiles\"\r\n          >\r\n            {profileList.map((e, i) => {\r\n              return (\r\n                <Fragment key={i}>\r\n                  <ProfilePatchV2\r\n                    index={i}\r\n                    user={e}\r\n                    loggedUserID={props.loggedUserID}\r\n                    loggedUser_id={props.loggedUser_id}\r\n                    token={props.token}\r\n                    usedAs={props.usedAs}\r\n                    myProfile={props.myProfile}\r\n                    close={props.close}\r\n                  />\r\n                  <hr className={classes.innerHR} />\r\n                </Fragment>\r\n              );\r\n            })}\r\n          </InfiniteScroll>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPatches;\r\n","D:\\front-end\\src\\pages\\Profile\\V2\\SkillsV2.js",["443","444","445"],"import Card from \"../../../UI/Card\";\r\nimport classes from \"./skillsv2.module.css\";\r\nimport editIcon from \"../../../UI/imgs/edit icon.svg\";\r\nimport editIconWhite from \"../../../UI/imgs/edit icon dark.svg\";\r\nimport { useHorizontalScroll } from \"../useSideScroll\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Fragment, useState } from \"react\";\r\nimport AddSkills from \"../../signUP/afterSignUp/AddSkills\";\r\nconst Skills = (props) => {\r\n  //   const isDarkMode = useSelector((state) => state.theme.darkMode);\r\n  const scrollRef = useHorizontalScroll();\r\n  const history = useHistory();\r\n  const [viewEdit, setViewEdit] = useState(false);\r\n\r\n  const editSkillsHandler = () => {\r\n    setViewEdit((p) => !p);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card custom={classes.skillsCard}>\r\n        <div className={classes.headingDiv}>\r\n          <h1>Skills</h1>\r\n          {props.showEditButton ? (\r\n            <img src={editIconWhite} alt=\"edit skills\" className={classes.editSkillsIcon} onClick={editSkillsHandler} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n\r\n        <div className={classes.skills} ref={scrollRef}>\r\n          {props.user.skills\r\n            ? props.user.skills.map((e, i) => {\r\n                return (\r\n                  <Card custom={classes.skillCard} key={i}>\r\n                    <img\r\n                      src={\"https://wezo-media.s3.ap-south-1.amazonaws.com/icons/\" + e + \".svg\"}\r\n                      alt={e}\r\n                      onError={(e) => (e.target.src = \"/images/skill.svg\")}\r\n                    />\r\n                    <p>{e}</p>\r\n                  </Card>\r\n                );\r\n              })\r\n            : \"\"}\r\n        </div>\r\n      </Card>\r\n      {viewEdit ? (\r\n        <div className={classes.editSkills}>\r\n          <AddSkills\r\n            setUser={props.setUser}\r\n            editSkillsHandler={editSkillsHandler}\r\n            usedAs=\"editSkills\"\r\n            skills={props.user.skills}\r\n          />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Skills;\r\n","D:\\front-end\\src\\UI\\Button.js",["446","447"],"import classes from \"./Button.module.css\";\r\nimport { useState } from \"react\";\r\nimport { RotateSpinner } from \"react-spinners-kit\";\r\n\r\nconst Button = (props) => {\r\n  const [click, setClick] = useState(false);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  // console.log(\"Button render\");\r\n\r\n  return (\r\n    <button\r\n      type={props.type}\r\n      onClick={(e) => {\r\n        props.onClick(e, setLoading);\r\n      }}\r\n      // style={{ paddingTop: \"8px\", paddingBottom: \"8px\" }}\r\n      className={`${classes.button} ${props.custom ? props.custom : \"\"} ${loading ? classes.disabled : \"\"}`}\r\n    >\r\n      {loading === true ? <RotateSpinner sizeUnit=\"em\" size={1.5} color={\"#2ba272\"} loading={true} /> : props.name}\r\n      {/* {props.name} */}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n//${click ? classes.disabled : \"\"}\r\n","D:\\front-end\\src\\pages\\Feed\\navbar\\navElements.js",["448"],"import HomeIcon from \"../../../UI/imgs/navIcons/homeIcon.svg\";\r\nimport bellIcon from \"../../../UI/imgs/navIcons/bellIcon.svg\";\r\nimport chatIcon from \"../../../UI/imgs/navIcons/chatIcon.svg\";\r\nimport collabIcon from \"../../../UI/imgs/navIcons/collabIcon.svg\";\r\nimport profileIcon from \"../../../UI/imgs/navIcons/profileIcon.svg\";\r\nimport searchIcon from \"../../../UI/imgs/navIcons/searchIcon.svg\";\r\nimport codeIcon from \"../../../UI/imgs/navIcons/codeIcon.svg\";\r\n\r\nexport const navElements = [\r\n  { title: \"Home\", icon: HomeIcon },\r\n  {\r\n    title: \"Collab\",\r\n    icon: collabIcon,\r\n  },\r\n\r\n  { title: \"Search\", icon: searchIcon },\r\n  { title: \"Notifications\", icon: bellIcon },\r\n  { title: \"Messages\", icon: chatIcon },\r\n  { title: \"Profile\", icon: profileIcon },\r\n];\r\n\r\n// { title: \"Learn\", icon: codeIcon },\r\n","D:\\front-end\\src\\UI\\ImageViewer.js",[],"D:\\front-end\\src\\pages\\Player\\VideoJS.js",["449","450","451","452"],"import React, { useRef, useState, useEffect } from \"react\";\r\nimport videojs from \"video.js\";\r\nimport \"video.js/dist/video-js.css\";\r\nimport \"./player.css\";\r\n// those imports are important\r\nimport qualitySelector from \"videojs-hls-quality-selector\";\r\nimport qualityLevels from \"videojs-contrib-quality-levels\";\r\n\r\nconst VideoPlayer = ({ liveURL, source, type }) => {\r\n  const videoRef = useRef();\r\n  const [player, setPlayer] = useState(undefined);\r\n\r\n  useEffect(() => {\r\n    if (player) {\r\n      player.src([liveURL]);\r\n    }\r\n  }, [liveURL]);\r\n\r\n  useEffect(() => {\r\n    const videoJsOptions = {\r\n      controls: true,\r\n      fluid: true,\r\n      responsive: true,\r\n      controlBar: {\r\n        liveDisplay: true,\r\n        pictureInPictureToggle: false,\r\n      },\r\n\r\n      sources: [\r\n        {\r\n          src: source,\r\n        },\r\n      ],\r\n    };\r\n\r\n    const p = videojs(videoRef.current, videoJsOptions, function onPlayerReaady() {\r\n      // console.log('onPlayerReady');\r\n    });\r\n    setPlayer(p);\r\n\r\n    return () => {\r\n      if (player) player.dispose();\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (player) player.hlsQualitySelector({ displayCurrentQuality: true });\r\n  }, [player]);\r\n  return (\r\n    <div data-vjs-player>\r\n      <video ref={videoRef} className=\"video-js vjs-default-skin vjs-big-play-centered\"></video>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default VideoPlayer;\r\n","D:\\front-end\\src\\pages\\Profile\\sub\\EditProfile.js",["453","454","455"],"import Card from \"../../../UI/Card\";\r\nimport classes from \"./EditProfile.module.css\";\r\nimport edit from \"../../../UI/imgs/edit.svg\";\r\nimport editBanner from \"../../../UI/imgs/edit-banner.svg\";\r\nimport EditImage from \"../../../UI/cropper/EditImage\";\r\nimport { useState, useRef } from \"react\";\r\nimport Input from \"../../../UI/Input\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { autosize } from \"../../signUP/afterSignUp/Bio\";\r\nimport Button from \"../../../UI/Button\";\r\nimport axios from \"axios\";\r\nimport { checkUserNameURL, setUsernameURL, updateNameURL, addBio } from \"../../../URL/signUpURL\";\r\nimport { profilePreURL, profileStatus } from \"../../../URL/signUpURL\";\r\nimport { loadingActions } from \"../../../Store/loading-slice\";\r\nimport { userActions } from \"../../../Store/user-slice\";\r\nimport { srcToFile } from \"../../signUP/afterSignUp/UploadProfile\";\r\nimport closeIcon from \"../../../UI/imgs/close.svg\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\n\r\nimport { Fragment } from \"react\";\r\nconst EditProfile = (props) => {\r\n  let user = props.user;\r\n\r\n  const [ban, setBan] = useState();\r\n  const [pro, setPro] = useState();\r\n  const isDarkMode = useSelector((state) => state.theme.darkMode);\r\n  const [text, setText] = useState(user.bio ? user.bio : \"\");\r\n  const dispatch = useDispatch();\r\n  // const token = useSelector((state) => state.user.token);\r\n  const token = props.token;\r\n  const history = useHistory();\r\n  const name = useRef();\r\n  const userID = useRef();\r\n  const textArea = useRef();\r\n\r\n  const [name2, setName] = useState(user.name);\r\n  const [userid, setUserid] = useState(user.userID);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const typingHandler = (e) => {\r\n    if (e.target.value.length <= 165) {\r\n      setText(e.target.value);\r\n    }\r\n  };\r\n\r\n  let profile = user.profile\r\n    ? \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/\" + user.profile.replace(\"$\", \"%24\")\r\n    : \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/default.png\";\r\n  let banner = user.banner\r\n    ? \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/banner/\" + user.banner.replace(\"$\", \"%24\")\r\n    : \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/banner/default.jpg\";\r\n\r\n  const onChangeHandler = (e, valid, render, red, message, setValid, setRender, setRed, setMessage, setVal) => {\r\n    setVal(e.target.value);\r\n    setName(e.target.value);\r\n  };\r\n\r\n  const inputHandler = (e, valid, render, red, message, setValid, setRender, setRed, setMessage, setVal) => {\r\n    setVal(e.target.value);\r\n    if (e.target.value !== user.userID) {\r\n      const doneTyping = async () => {\r\n        try {\r\n          const res = await axios.get(checkUserNameURL + e.target.value.trim());\r\n          console.log(res);\r\n          if (res.data.available) {\r\n            setRender(true);\r\n            setUserid(e.target.value);\r\n            setMessage(\"Username available\");\r\n            setRed(false);\r\n          } else {\r\n            setRender(true);\r\n            setMessage(\"Username not available\");\r\n            setRed(true);\r\n          }\r\n        } catch (err) {}\r\n      };\r\n\r\n      if (e.target.value.trim().length >= 3) {\r\n        //   console.log(e.target.value);\r\n        //   setRender(true);\r\n        //   setMessage(\"erer\");\r\n\r\n        if (/^[A-Za-z][A-Za-z0-9_]{2,10}$/.test(e.target.value.trim())) {\r\n          setRender(false);\r\n          let typingTimer;\r\n          let doneTypingInterval = 1000;\r\n\r\n          clearTimeout(typingTimer);\r\n          typingTimer = setTimeout(doneTyping, doneTypingInterval);\r\n        } else {\r\n          setRender(true);\r\n          setMessage(\"Username must be at least 3 letters and start with letter and can contain _ and letters\");\r\n        }\r\n      } else {\r\n        setRender(false);\r\n      }\r\n    }\r\n  };\r\n\r\n  const saveChangesHandler = async (e, setClick) => {\r\n    // console.log(\"cropped image\", ban);\r\n\r\n    // console.log(\"cropped image\", pro);\r\n    setLoading(true);\r\n\r\n    let tempUser = { ...user };\r\n\r\n    if (ban) {\r\n      // dispatch(\r\n      //   loadingActions.setLoading({\r\n      //     isLoading: true,\r\n      //     message: \"updating banner...!\",\r\n      //   })\r\n      // );\r\n\r\n      const url = await axios.get(profilePreURL + \"/\" + ban.type.split(\"/\").slice(-1) + \"/banner\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      });\r\n\r\n      const file = await srcToFile(ban.img, \"profile.\" + ban.type.split(\"/\").slice(-1), ban.type);\r\n\r\n      // console.log(\"sending\", file);\r\n      // uploading to filesystem\r\n      await axios.put(url.data.url, file, {\r\n        headers: {\r\n          \"Content-Type\": \"image/\" + ban.type.split(\"/\").slice(-1),\r\n        },\r\n      });\r\n\r\n      await axios.get(profileStatus + url.data.fileName.split(\"/\")[2] + \"/banner\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      });\r\n\r\n      // diagnose\r\n      tempUser = { ...tempUser, banner: url.data.fileName.split(\"/\")[2] };\r\n    }\r\n\r\n    if (pro) {\r\n      // dispatch(\r\n      //   loadingActions.setLoading({\r\n      //     isLoading: true,\r\n      //     message: \"updating profile...!\",\r\n      //   })\r\n      // );\r\n\r\n      const url = await axios.get(profilePreURL + \"/\" + pro.type.split(\"/\").slice(-1) + \"/profile\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      });\r\n\r\n      const file = await srcToFile(pro.img, \"profile.\" + pro.type.split(\"/\").slice(-1), pro.type);\r\n\r\n      // console.log(\"sending\", file);\r\n      // uploading to filesystem\r\n      await axios.put(url.data.url, file, {\r\n        headers: {\r\n          \"Content-Type\": \"image/\" + pro.type.split(\"/\").slice(-1),\r\n        },\r\n      });\r\n\r\n      await axios.get(profileStatus + url.data.fileName.split(\"/\")[2] + \"/profile\", {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      });\r\n      tempUser = { ...tempUser, profile: url.data.fileName.split(\"/\")[2] };\r\n    }\r\n\r\n    ////////////////////user name//////////////////////\r\n    if (name2 !== user.name) {\r\n      // dispatch(\r\n      //   loadingActions.setLoading({\r\n      //     isLoading: true,\r\n      //     message: \"updating username...!\",\r\n      //   })\r\n      // );\r\n\r\n      await axios.post(\r\n        updateNameURL,\r\n        { name: name2 },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      console.log(\"name ee\", name2);\r\n\r\n      // diagnose\r\n      tempUser = { ...tempUser, name: name2 };\r\n    }\r\n\r\n    //<---------------- uID ----------------------->//\r\n\r\n    if (userid !== user.userID) {\r\n      // dispatch(\r\n      //   loadingActions.setLoading({\r\n      //     isLoading: true,\r\n      //     message: \"updating user id\",\r\n      //   })\r\n      // );\r\n\r\n      await axios.post(\r\n        setUsernameURL,\r\n        { uname: userid.trim() },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n\r\n      tempUser = { ...tempUser, userID: userid };\r\n    }\r\n\r\n    //<----------------BIO------------------------->//\r\n    if (text !== user.bio) {\r\n      // dispatch(\r\n      //   loadingActions.setLoading({\r\n      //     isLoading: true,\r\n      //     message: \"Updating bio !\",\r\n      //   })\r\n      // );\r\n\r\n      await axios.post(\r\n        addBio,\r\n        { bio: text },\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${token}`,\r\n          },\r\n        }\r\n      );\r\n      tempUser = { ...tempUser, bio: text };\r\n    }\r\n\r\n    dispatch(userActions.signUp({ user: { ...tempUser, followersCnt: 2, followingCnt: 1 }, token: token }));\r\n    props.setUser(tempUser);\r\n    localStorage.setItem(\"user_Obj\", JSON.stringify(tempUser));\r\n\r\n    setLoading(false);\r\n    props.closeHandler();\r\n    // history.push(`/profile/${user.userID}`);\r\n\r\n    // dispatch(\r\n    //   loadingActions.setLoading({\r\n    //     isLoading: false,\r\n    //     message: \"changes saved !\",\r\n    //   })\r\n    // );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.backdrop}>\r\n      <Card custom={classes.card}>\r\n        <EditImage\r\n          aspect={3 / 1}\r\n          className={classes.banner}\r\n          default={{\r\n            imageURL: banner,\r\n          }}\r\n          parentDivClass={classes.cntBanner}\r\n          sendPic={setBan}\r\n        >\r\n          <div className={classes.bannerOverlay}>\r\n            <img src={editBanner} alt=\"edit overlay\" />\r\n          </div>\r\n        </EditImage>\r\n        <img className={classes.closeIcon} onClick={props.closeHandler} src={closeIcon} alt=\"\" />\r\n        <EditImage\r\n          aspect={1 / 1}\r\n          className={classes.profile}\r\n          default={{\r\n            imageURL: profile,\r\n          }}\r\n          parentDivClass={classes.cnt}\r\n          sendPic={setPro}\r\n        >\r\n          <div className={classes.profileOverlay}>\r\n            <img src={edit} alt=\"edit overlay\" />\r\n          </div>\r\n        </EditImage>\r\n        <div className={classes.inputFields}>\r\n          <p className={classes.fieldName}>Name</p>\r\n          <Input\r\n            ref={name}\r\n            custom={`${classes.customName} ${classes.inp}`}\r\n            onChange={onChangeHandler}\r\n            defaultValue={user.name}\r\n          />\r\n\r\n          <p className={classes.fieldName}>User name</p>\r\n          <Input ref={userID} custom={classes.inp} onChange={inputHandler} defaultValue={user.userID} />\r\n          <p className={classes.fieldName}>Bio</p>\r\n          <div style={{ marginTop: \"0\" }} className={`${classes.content}`}>\r\n            <textarea\r\n              rows=\"4\"\r\n              cols=\"4\"\r\n              ref={textArea}\r\n              className={`${classes.bio}  ${isDarkMode ? classes[\"bio-dark\"] : \"\"} ${classes.bio}`}\r\n              onChange={typingHandler}\r\n              onKeyDown={autosize}\r\n              value={text}\r\n            ></textarea>\r\n            <p className={classes.count}>{165 - text.length}</p>\r\n          </div>\r\n          {loading ? (\r\n            <div className={classes.loader}>\r\n              <GuardSpinner color={\"#2ba272\"} loading={true} />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Button custom={classes.btn} onClick={saveChangesHandler} name=\"Save changes\" />\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EditProfile;\r\n","D:\\front-end\\src\\pages\\post\\DetailedPost.js",["456","457","458","459","460","461","462"],"import { Fragment, useEffect, useState, useRef } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { Route, useHistory, Link, useParams } from \"react-router-dom\";\r\nimport PostV2 from \"./PostV2\";\r\nimport { getPostURL } from \"../../URL/signUpURL\";\r\nimport axios from \"axios\";\r\nimport { detailedPostActions } from \"../../Store/detailed-post-slice\";\r\nimport AddComment from \"./AddComment\";\r\nimport CommentList from \"./CommentList\";\r\nimport { postActions } from \"../../Store/posts-slice\";\r\nimport { toast } from \"react-toastify\";\r\nimport { withdrawCollabRequestURL } from \"../../URL/signUpURL\";\r\nimport SendCollabRequest from \"../collab/SendCollabRequest\";\r\n\r\nconst getPost = async (id, token, dispatch) => {\r\n  try {\r\n    dispatch(detailedPostActions.reset());\r\n    const post = await axios.get(getPostURL + id, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n\r\n    let myReaction = { haveIUpvoted: false, haveIDownvoted: false };\r\n\r\n    if (post.data.post[0].reactions.length > 0) {\r\n      if (post.data.post[0].reactions[0].reaction === 0) {\r\n        myReaction.haveIDownvoted = true;\r\n      } else if (post.data.post[0].reactions[0].reaction === 1) {\r\n        myReaction.haveIUpvoted = true;\r\n      }\r\n    }\r\n\r\n    if (post.data.post[0].likes.length < 1) {\r\n      post.data.post[0].likes = [{ count: 0 }];\r\n    }\r\n\r\n    if (post.data.post[0].dislikes.length < 1) {\r\n      post.data.post[0].dislikes = [{ count: 0 }];\r\n    }\r\n\r\n    dispatch(detailedPostActions.setPost({ post: { ...post.data.post[0], ...myReaction } }));\r\n\r\n    // console.log(post);\r\n  } catch (err) {\r\n    console.log(\"err in getting post details\");\r\n  }\r\n};\r\n\r\nconst withdrawRequest = async (url, token, id, notify, toast, update) => {\r\n  try {\r\n    notify(\"withdrawing request\", { type: toast.TYPE.INFO, autoClose: false });\r\n    await axios.delete(url + id, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    update(\"request withdrawn\");\r\n  } catch (err) {\r\n    update(\"err withdrawing request\", {\r\n      type: toast.TYPE.ERROR,\r\n      autoClose: 1000,\r\n      style: { border: \"none\", color: \"#f91880\" },\r\n    });\r\n    console.error(\"err in withdrawing request\", err);\r\n  }\r\n};\r\n\r\nconst DetailedPost = (props) => {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const postID = params.postID;\r\n\r\n  const dispatch = useDispatch();\r\n  const detailedPost = useSelector((state) => state.detailedPost.post);\r\n  const loggedUser = useSelector((state) => state.user.userObj);\r\n  const [showCollab, setShowCollab] = useState({ show: false, postID: null, index: null });\r\n  // console.log(\"detailed post\", detailedPost);\r\n\r\n  const toastId = useRef(null);\r\n  const notify = (message, details = null) => (toastId.current = toast(message, { autoClose: false, ...details }));\r\n\r\n  const update = (message, details = null) =>\r\n    toast.update(toastId.current, {\r\n      render: message,\r\n      type: toast.TYPE.SUCCESS,\r\n      autoClose: 1000,\r\n      pauseOnFocusLoss: false,\r\n      pauseOnHover: false,\r\n      ...details,\r\n    });\r\n\r\n  useEffect(() => {\r\n    if (props.token && postID != \"\") {\r\n      getPost(postID, props.token, dispatch);\r\n    }\r\n  }, [props.token]);\r\n\r\n  const showCollabHandler = (postID, collabReaction, index, withDraw) => {\r\n    if (collabReaction.length === 0) {\r\n      setShowCollab({ show: true, postID, index: index });\r\n    } else {\r\n      // with draw request\r\n      if (withDraw) {\r\n        withdrawRequest(withdrawCollabRequestURL, props.token, collabReaction[0]._id, notify, toast, update);\r\n        dispatch(postActions.removeCollabRequest({ index: index }));\r\n        dispatch(detailedPostActions.removeCollabRequest());\r\n      }\r\n    }\r\n  };\r\n\r\n  // if (!detailedPost.u_id) {\r\n  //   return <div>loading</div>;\r\n  // }\r\n  const downvoteHandler = (id, vote) => {\r\n    let merger = {};\r\n    merger = { haveIUpvoted: false, haveIDownvoted: !detailedPost.haveIDownvoted };\r\n    let count = {};\r\n    count = {\r\n      like: detailedPost.haveIUpvoted ? detailedPost.like - 1 : detailedPost.like,\r\n      dislike: detailedPost.haveIDownvoted ? detailedPost.dislike - 1 : detailedPost.dislike + 1,\r\n    };\r\n\r\n    let likes, dislikes;\r\n\r\n    if (detailedPost.likes.length > 0) {\r\n      likes = [{ count: detailedPost.haveIUpvoted ? detailedPost.likes[0].count - 1 : detailedPost.likes[0].count }];\r\n    } else {\r\n      likes = [{ count: 0 }];\r\n    }\r\n\r\n    if (detailedPost.dislikes.length > 0) {\r\n      dislikes = [\r\n        {\r\n          count: detailedPost.haveIDownvoted ? detailedPost.dislikes[0].count - 1 : detailedPost.dislikes[0].count + 1,\r\n        },\r\n      ];\r\n    } else {\r\n      dislikes = [{ count: 0 }];\r\n    }\r\n\r\n    try {\r\n      dispatch(\r\n        detailedPostActions.setPost({\r\n          post: { ...detailedPost, ...merger, likes, dislikes },\r\n        })\r\n      );\r\n\r\n      dispatch(postActions.setDownvote({ id: postID, vote: vote, type: \"postID\" }));\r\n    } catch (err) {\r\n      console.error(\"refresh or shared post cant downvote locally\");\r\n    }\r\n  };\r\n  const upvoteHandler = (id, vote) => {\r\n    let merger = {};\r\n    merger = { haveIUpvoted: !detailedPost.haveIUpvoted, haveIDownvoted: false };\r\n    let count = {};\r\n    count = {\r\n      like: detailedPost.haveIUpvoted ? detailedPost.like - 1 : detailedPost.like + 1,\r\n      dislike: detailedPost.haveIDownvoted ? detailedPost.dislike - 1 : detailedPost.dislike,\r\n    };\r\n\r\n    let likes, dislikes;\r\n\r\n    if (detailedPost.likes.length > 0) {\r\n      likes = [\r\n        { count: detailedPost.haveIUpvoted ? detailedPost.likes[0].count - 1 : detailedPost.likes[0].count + 1 },\r\n      ];\r\n    } else {\r\n      likes = [{ count: 0 }];\r\n    }\r\n\r\n    if (detailedPost.dislikes.length > 0) {\r\n      dislikes = [\r\n        { count: detailedPost.haveIDownvoted ? detailedPost.dislikes[0].count - 1 : detailedPost.dislikes[0].count },\r\n      ];\r\n    } else {\r\n      dislikes = [{ count: 0 }];\r\n    }\r\n\r\n    try {\r\n      dispatch(\r\n        detailedPostActions.setPost({\r\n          post: { ...detailedPost, ...merger, likes, dislikes },\r\n        })\r\n      );\r\n\r\n      dispatch(postActions.setUpvote({ id: postID, vote: vote, type: \"postID\" }));\r\n    } catch (err) {\r\n      console.error(\"refresh or shared post cant upvote locally\");\r\n    }\r\n  };\r\n\r\n  const hideCollabHandler = () => {\r\n    setShowCollab((p) => ({ show: !p.show, postID: p.postID }));\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      {showCollab.show ? (\r\n        <SendCollabRequest\r\n          postID={showCollab.postID}\r\n          index={showCollab.index}\r\n          token={props.token}\r\n          userID={loggedUser._id}\r\n          showCollabHandler={hideCollabHandler}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <PostV2\r\n        loading={detailedPost.u_id ? false : true}\r\n        index={0}\r\n        post={detailedPost}\r\n        token={props.token}\r\n        loggedUser={loggedUser}\r\n        setShowMore={detailedPost.setShowMore}\r\n        upvote={upvoteHandler}\r\n        downvote={downvoteHandler}\r\n        usedAs=\"detailedPost\"\r\n        showCollabHandler={showCollabHandler}\r\n      />\r\n      {/*FIXME: could'nt send un edited images as of now, fix it later */}\r\n      {detailedPost ? (\r\n        <AddComment usedAs=\"addComment\" token={props.token} postID={detailedPost._id} loggedUser={loggedUser} />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {<CommentList token={props.token} loggedUser={loggedUser} postID={detailedPost._id} />}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default DetailedPost;\r\n","D:\\front-end\\src\\UI\\cropper\\EditImage.js",[],"D:\\front-end\\src\\pages\\post\\AddComment.js",["463","464","465","466","467","468","469","470","471","472","473","474","475","476","477"],"import Card from \"../../UI/Card\";\r\nimport cardClass from \"./post.module.css\";\r\nimport classes from \"./addComment.module.css\";\r\nimport { Fragment, useEffect, useRef, useState } from \"react\";\r\nimport { autosize } from \"../signUP/afterSignUp/Bio\";\r\nimport addImage from \"../../UI/imgs/add image.svg\";\r\nimport addGif from \"../../UI/imgs/add gif.svg\";\r\nimport addVideo from \"../../UI/imgs/add video.svg\";\r\nimport Button from \"../../UI/Button\";\r\nimport CropIt from \"../../UI/cropper/CropIt\";\r\nimport garbage from \"../../UI/imgs/delete.svg\";\r\nimport pencil from \"../../UI/imgs/pencil.svg\";\r\nimport ImageCropDialog from \"../../UI/cropper/ImageCropDialog\";\r\nimport Gif from \"../../UI/gifPicker/Gif\";\r\nimport {\r\n  addCommentURL,\r\n  commentStatusURL,\r\n  addReplyURL,\r\n  replyStatusURL,\r\n  createPostURL,\r\n  postStatusURL,\r\n  startUploadURL,\r\n  getUploadURL,\r\n  finishUploadURL,\r\n} from \"../../URL/signUpURL\";\r\nimport axios from \"axios\";\r\nimport { srcToFile } from \"../signUP/afterSignUp/UploadProfile\";\r\nimport { detailedPostActions } from \"../../Store/detailed-post-slice\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\nimport \"react-toastify/dist/ReactToastify.css\";\r\nimport { postActions } from \"../../Store/posts-slice\";\r\nimport closeIcon from \"../../UI/imgs/close.svg\";\r\nimport P from \"../../UI/P\";\r\nimport arrowIcon from \"../../UI/imgs/arrow.svg\";\r\n\r\nvar FormData = require(\"form-data\");\r\nvar fs = require(\"fs\");\r\n\r\nfunction blobToBase64(blob) {\r\n  return new Promise((resolve, _) => {\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => resolve(reader.result);\r\n    reader.readAsDataURL(blob);\r\n  });\r\n}\r\n\r\nconst toBase64 = (file) =>\r\n  new Promise((resolve, reject) => {\r\n    const reader = new FileReader();\r\n    reader.readAsDataURL(file);\r\n    reader.onload = () => resolve(reader.result);\r\n    reader.onerror = (error) => reject(error);\r\n  });\r\n\r\nasync function getFileFromUrl(url, name, defaultType = \"image/jpeg\") {\r\n  const response = await fetch(url);\r\n  const data = await response.blob();\r\n  return new File([data], name, {\r\n    type: defaultType,\r\n  });\r\n}\r\n\r\n//\r\n\r\n//\r\n\r\nconst AddComment = (props) => {\r\n  const textArea = useRef();\r\n  const [text, setText] = useState(\"\");\r\n  const [image, setImage] = useState([]);\r\n  const [showGif, setShowGif] = useState(false);\r\n  const loggedUser = props.loggedUser;\r\n  const inputFile = useRef();\r\n  const [gif, setGif] = useState();\r\n  const toastId = useRef(null);\r\n  const dispatch = useDispatch();\r\n  const inputVideo = useRef(null);\r\n  const [f, setF] = useState({\r\n    selectedFile: null,\r\n    uploadId: \"\",\r\n    fileName: \"\",\r\n  });\r\n  const [progress, setProgress] = useState({ 1: 0 });\r\n\r\n  // collab type post\r\n  const [postType, setPostType] = useState(\"Normal\");\r\n\r\n  // const usedForReply = props.usedAs === \"addReply\" ? true : false;\r\n\r\n  //---------------------------------------------\r\n\r\n  const [click, setClick] = useState(0);\r\n  const [data, setData] = useState({\r\n    selectedImageURL: null,\r\n    zoom: null,\r\n    crop: null,\r\n    rotation: null,\r\n    type: null,\r\n  });\r\n  // const [video, setVideo] = useState(false);\r\n\r\n  const onCancel = () => {\r\n    setClick(0);\r\n  };\r\n\r\n  const resetImage = () => {\r\n    setImage((p) => {\r\n      p.splice(click - 1, 1);\r\n      return p;\r\n    });\r\n\r\n    setClick(0);\r\n  };\r\n\r\n  const clickHandler = (e, i) => {\r\n    setClick(i + 1);\r\n    setData((p) => ({ ...p, selectedImageURL: image[i].imageURL }));\r\n  };\r\n\r\n  const onImageSelected = (e) => {\r\n    if (f.selectedFile) {\r\n      setF({\r\n        selectedFile: null,\r\n        uploadId: \"\",\r\n        fileName: \"\",\r\n      });\r\n    }\r\n\r\n    if (e.target.files[0]) {\r\n      setGif();\r\n\r\n      for (let x = 0; x < Math.min(e.target.files.length, 4); x++) {\r\n        setImage((p) => {\r\n          if (p.length >= 4) {\r\n            return p;\r\n          }\r\n\r\n          return [\r\n            ...p,\r\n            {\r\n              imageURL: URL.createObjectURL(e.target.files[x]),\r\n              zoom: null,\r\n              crop: null,\r\n              rotation: null,\r\n              aspect: 1,\r\n              croppedImageURL: null,\r\n              type: e.target.files[x].name.split(\".\").at(-1),\r\n              rawURL: e.target.files[x],\r\n            },\r\n          ];\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  const setCroppedImageFor = (id, crop, zoom, aspect, rotation, croppedImageURL) => {\r\n    // console.log(\"the send pic hander\", image);\r\n    setImage((p) => {\r\n      // let mod = p[click-1]\r\n      // let added = {...mod, imageURL:croppedImageURL}\r\n      p[click - 1].croppedImageURL = croppedImageURL;\r\n      p[click - 1].crop = crop;\r\n      p[click - 1].zoom = zoom;\r\n      p[click - 1].rotation = rotation;\r\n      p[click - 1].aspect = aspect;\r\n\r\n      return p;\r\n    });\r\n\r\n    // console.log(\"affert croppping,  \", image);\r\n\r\n    setClick(0);\r\n  };\r\n\r\n  //---------------------------------------------\r\n\r\n  let profile;\r\n  if (loggedUser && loggedUser.profile) {\r\n    profile = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/\" + loggedUser.profile.replace(\"$\", \"%24\");\r\n  }\r\n  if (loggedUser.profile === undefined) {\r\n    profile = \"/images/profile.png\";\r\n  }\r\n  const typingHandler = (e) => {\r\n    if (e.target.value.length <= (props.usedAs === \"addPost\" ? 1024 : 180)) {\r\n      setText(e.target.value);\r\n    }\r\n  };\r\n\r\n  const onButtonClick = () => {\r\n    // `current` points to the mounted file input element\r\n    inputFile.current.value = null;\r\n    inputFile.current.click();\r\n  };\r\n\r\n  const videoHandler = () => {\r\n    // `current` points to the mounted file input element\r\n    inputVideo.current.value = null;\r\n    inputVideo.current.click();\r\n  };\r\n\r\n  const onGifClick = () => {\r\n    if (f.selectedFile) {\r\n      setF({\r\n        selectedFile: null,\r\n        uploadId: \"\",\r\n        fileName: \"\",\r\n      });\r\n    }\r\n\r\n    setShowGif((p) => !p);\r\n  };\r\n\r\n  const settingGif = (id) => {\r\n    setGif(id);\r\n    setShowGif(false);\r\n    setImage([]);\r\n  };\r\n\r\n  const deleteGif = () => {\r\n    setGif();\r\n  };\r\n\r\n  const notify = (message, details = null) => (toastId.current = toast(message, { autoClose: false, ...details }));\r\n\r\n  const update = (message, autoClose = 1000, details = null) =>\r\n    toast.update(toastId.current, {\r\n      render: message,\r\n      type: toast.TYPE.SUCCESS,\r\n      autoClose: autoClose,\r\n      pauseOnFocusLoss: false,\r\n      pauseOnHover: false,\r\n      ...details,\r\n    });\r\n\r\n  const startUpload = async () => {\r\n    try {\r\n      // update(\"Uploading video\");\r\n      // update(\"uploading video\", 1000, { type: toast.TYPE.INFO });\r\n      update(\"uploading video\", 1000, { type: toast.TYPE.INFO });\r\n      const resp = await axios.post(\r\n        createPostURL,\r\n        { hasVideo: true, imgs: [], vformat: f.fileName.split(\".\").at(-1), postContent: text },\r\n        {\r\n          headers: {\r\n            Authorization: \"Bearer \" + props.token,\r\n          },\r\n        }\r\n      );\r\n\r\n      setF((p) => {\r\n        return { ...p, uploadId: resp.data.uploadId };\r\n      });\r\n\r\n      // console.log(\"here 1\");\r\n      // update(\"uploading video\", false);\r\n\r\n      // got url now start uploading\r\n      const CHUNK_SIZE = 7000000;\r\n      const fileSize = f.selectedFile.size;\r\n\r\n      const NUM_CHUNKS = Math.floor(fileSize / CHUNK_SIZE);\r\n\r\n      let promisesArray = [];\r\n      let start, end, blob;\r\n\r\n      // console.log(\"here 2\");\r\n\r\n      for (let index = 1; index < NUM_CHUNKS + 1; index++) {\r\n        // console.log(\"here index \", index);\r\n        start = (index - 1) * CHUNK_SIZE;\r\n        end = index * CHUNK_SIZE;\r\n        blob = index < NUM_CHUNKS ? f.selectedFile.slice(start, end) : f.selectedFile.slice(start);\r\n\r\n        // (1) Generate presigned URL for each part\r\n        let getUploadUrlResp = await axios.post(\r\n          getUploadURL,\r\n          { videoKey: resp.data.videoKey, partNumber: index, uploadId: resp.data.uploadId },\r\n          {\r\n            headers: {\r\n              Authorization: \"Bearer \" + props.token,\r\n            },\r\n          }\r\n        );\r\n\r\n        let { presignedUrl } = getUploadUrlResp.data;\r\n        // console.log(\"   Presigned URL \" + index + \": \" + presignedUrl + \" filetype \" + f.selectedFile.type);\r\n\r\n        // (2) Puts each file part into the storage server\r\n        // TODO: this will be a great interview question\r\n        // how do you implement a progress bar with multipart upload\r\n        let uploadResp = axios.put(presignedUrl, blob, {\r\n          headers: { \"Content-Type\": \"video/\" + f.fileName.split(\".\").at(-1) },\r\n          onUploadProgress: (pEvent) => {\r\n            let per = Math.round((pEvent.loaded * 100) / pEvent.total);\r\n            let obj = {};\r\n            obj[index] = per;\r\n            setProgress((p) => ({ ...p, ...obj }));\r\n            // console.log(\"the progress of --> \" + index + \" is \" + progress[index]);\r\n          },\r\n        });\r\n        // console.log('   Upload no ' + index + '; Etag: ' + uploadResp.headers.etag)\r\n        promisesArray.push(uploadResp);\r\n      }\r\n\r\n      // console.log(\"here 4\");\r\n\r\n      let resolvedArray = await Promise.all(promisesArray);\r\n      notify(\"video uploaded\", { type: toast.TYPE.SUCCESS, autoClose: 500 });\r\n      // console.log(resolvedArray, \" resolvedAr\");\r\n\r\n      let uploadPartsArray = [];\r\n      resolvedArray.forEach((resolvedPromise, index) => {\r\n        uploadPartsArray.push({\r\n          ETag: resolvedPromise.headers.etag.substring(1, resolvedPromise.headers.etag.length - 1),\r\n          PartNumber: index + 1,\r\n        });\r\n      });\r\n\r\n      const body = {\r\n        params: {\r\n          parts: [...uploadPartsArray],\r\n          uploadId: resp.data.uploadId,\r\n        },\r\n        videoKey: resp.data.videoKey,\r\n      };\r\n\r\n      // console.log(\"here 5\");\r\n      let completeUploadResp = await axios.post(finishUploadURL, body, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      });\r\n      // notify(\"Post will be live soon\");\r\n\r\n      setF({\r\n        selectedFile: null,\r\n        uploadId: \"\",\r\n        fileName: \"\",\r\n      });\r\n\r\n      setProgress({ 1: 0 });\r\n\r\n      // console.log(completeUploadResp.data, \" Stuff\");\r\n    } catch (err) {\r\n      // console.error(err);\r\n    }\r\n  };\r\n\r\n  const postComment = async (e, setClick) => {\r\n    try {\r\n      if (props.usedAs === \"addReply\") {\r\n        notify(\"Adding Reply\");\r\n      } else if (props.usedAs === \"addComment\") {\r\n        notify(\"Adding Comment\");\r\n      } else if (props.usedAs === \"addPost\") {\r\n        notify(\"Adding post\");\r\n      }\r\n\r\n      if (f.selectedFile && props.usedAs === \"addPost\") {\r\n        startUpload();\r\n        return;\r\n      }\r\n\r\n      const imageInfo = image.map((e) => {\r\n        return e.type;\r\n      });\r\n\r\n      let body;\r\n\r\n      if (props.usedAs === \"addReply\") {\r\n        body = {\r\n          postID: props.postID,\r\n          commentID: props.commentID,\r\n          reply: text,\r\n          gif: gif ? gif.id : null,\r\n          imgs: imageInfo,\r\n        };\r\n      } else if (props.usedAs === \"addComment\") {\r\n        body = { postID: props.postID, comment: text, gif: gif ? gif.id : null, imgs: imageInfo };\r\n      } else if (props.usedAs === \"addPost\") {\r\n        body = { postContent: text, gif: gif ? gif.id : null, imgs: imageInfo, postType: postType };\r\n      }\r\n\r\n      const userDetails = {\r\n        name: loggedUser.name,\r\n        userID: loggedUser.userID,\r\n        profile: loggedUser.profile,\r\n        _id: loggedUser._id,\r\n      };\r\n\r\n      const whichURL =\r\n        props.usedAs === \"addReply\" ? addReplyURL : props.usedAs === \"addComment\" ? addCommentURL : createPostURL;\r\n\r\n      const result = await axios.post(whichURL, body, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      });\r\n\r\n      if (result.data.preUrls.length === 0) {\r\n        if (props.usedAs === \"addReply\") {\r\n          update(\"Reply added\");\r\n        } else if (props.usedAs === \"addComment\") {\r\n          update(\"Comment added\");\r\n        } else if (props.usedAs === \"addPost\") {\r\n          update(\"Post added\");\r\n        }\r\n\r\n        // this is for adding reply or comment in real time with offline data\r\n        if (props.usedAs === \"addReply\") {\r\n          dispatch(\r\n            detailedPostActions.addRepliesToTop({\r\n              id: props.index,\r\n              replies: [\r\n                {\r\n                  ...result.data.reply,\r\n                  u_id: userDetails,\r\n                  likes: [{ count: 0 }],\r\n                  dislikes: [{ count: 0 }],\r\n                },\r\n              ],\r\n            })\r\n          );\r\n        } else if (props.usedAs === \"addComment\") {\r\n          // dispatch(postActions.incrementComment({ id: props.postID }));\r\n\r\n          dispatch(\r\n            detailedPostActions.addItOnTop({\r\n              comments: [\r\n                {\r\n                  ...result.data.comment,\r\n                  u_id: userDetails,\r\n                  likes: [{ count: 0 }],\r\n                  dislikes: [{ count: 0 }],\r\n                  repliesCnt: [{ count: 0 }],\r\n                },\r\n              ],\r\n            })\r\n          );\r\n        } else if (props.usedAs === \"addPost\") {\r\n          dispatch(\r\n            postActions.addPostToTop({\r\n              post: { ...result.data.post, u_id: userDetails, likes: [{ count: 0 }], dislikes: [{ count: 0 }] },\r\n            })\r\n          );\r\n        }\r\n        setImage([]);\r\n        setGif();\r\n        setText(\"\");\r\n\r\n        return;\r\n      }\r\n\r\n      const preUrls = result.data.preUrls;\r\n\r\n      for (let x = 0; x < preUrls.length; x++) {\r\n        // console.log(preUrls[x]);\r\n        const fields = preUrls[x].fields;\r\n        let file;\r\n        if (image[x].croppedImageURL === null) {\r\n          file = await toBase64(image[x].rawURL);\r\n          file = await srcToFile(file, \"profile.\" + imageInfo[x], \"images/\" + imageInfo[x]);\r\n        } else {\r\n          file = await srcToFile(image[x].croppedImageURL, \"profile.\" + imageInfo[x], \"images/\" + imageInfo[x]);\r\n        }\r\n\r\n        var data = new FormData();\r\n        data.append(\"key\", fields.key);\r\n        data.append(\"bucket\", fields.bucket);\r\n        data.append(\"X-Amz-Algorithm\", fields[\"X-Amz-Algorithm\"]);\r\n        data.append(\"X-Amz-Credential\", fields[\"X-Amz-Credential\"]);\r\n        data.append(\"X-Amz-Date\", fields[\"X-Amz-Date\"]);\r\n        data.append(\"Policy\", fields.Policy);\r\n        data.append(\"X-Amz-Signature\", fields[\"X-Amz-Signature\"]);\r\n        data.append(\"file\", file);\r\n\r\n        var config = {\r\n          method: \"post\",\r\n          url: preUrls[x].url,\r\n          headers: {\r\n            ...data,\r\n          },\r\n          data: data,\r\n        };\r\n\r\n        const sent = await axios(config);\r\n      }\r\n\r\n      // console.log(\"result.data.id\", result);\r\n      const statusURL =\r\n        props.usedAs === \"addReply\"\r\n          ? replyStatusURL + result.data.id\r\n          : props.usedAs === \"addPost\"\r\n          ? postStatusURL + result.data.id\r\n          : commentStatusURL + result.data.id;\r\n\r\n      const result2 = await axios.get(statusURL, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      });\r\n\r\n      setImage([]);\r\n      setGif();\r\n      setText(\"\");\r\n      if (props.usedAs === \"addReply\") {\r\n        dispatch(\r\n          detailedPostActions.addRepliesToTop({\r\n            id: props.index,\r\n            replies: [\r\n              {\r\n                ...result2.data.reply,\r\n                u_id: userDetails,\r\n              },\r\n            ],\r\n          })\r\n        );\r\n        update(\"Reply added\");\r\n      } else if (props.usedAs === \"addComment\") {\r\n        dispatch(postActions.incrementComment({ id: props.postID }));\r\n        dispatch(\r\n          detailedPostActions.addItOnTop({\r\n            comments: [\r\n              {\r\n                ...result2.data.comment,\r\n                u_id: userDetails,\r\n              },\r\n            ],\r\n          })\r\n        );\r\n        update(\"Comment added\");\r\n      } else if (props.usedAs === \"addPost\") {\r\n        dispatch(postActions.addPostToTop({ post: { ...result2.data.post, u_id: userDetails } }));\r\n        update(\"Post added\");\r\n      }\r\n\r\n      // console.log(\"-- post comment result --\", result);\r\n    } catch (err) {\r\n      // console.log(\"err in adding comments\", err);\r\n      toast.update(toastId.current, {\r\n        render: \"Err adding comment\",\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 2000,\r\n        style: { border: \"none\", color: \"#f91880\" },\r\n      });\r\n    }\r\n  };\r\n\r\n  const onVideoSelected = (e) => {\r\n    try {\r\n      if (image.length > 0) {\r\n        setImage([]);\r\n      }\r\n      if (gif) {\r\n        setGif();\r\n      }\r\n\r\n      let selectedFile = e.target.files[0];\r\n      let fileName = selectedFile.name;\r\n      setF({\r\n        selectedFile: selectedFile,\r\n        fileName: fileName,\r\n        fileURL: URL.createObjectURL(selectedFile),\r\n      });\r\n    } catch (err) {\r\n      // console.error(err);\r\n    }\r\n  };\r\n\r\n  const removeVideo = () => {\r\n    if (f.selectedFile) {\r\n      setF({\r\n        selectedFile: null,\r\n        uploadId: \"\",\r\n        fileName: \"\",\r\n      });\r\n    }\r\n  };\r\n\r\n  // console.table(progress);\r\n  function sum(obj) {\r\n    if (!obj || obj === undefined || obj === {}) {\r\n      return 0;\r\n    }\r\n\r\n    var sum = 0;\r\n    var num = 0;\r\n    for (var el in obj) {\r\n      if (obj.hasOwnProperty(el)) {\r\n        sum += parseFloat(obj[el]);\r\n        num = num + 1;\r\n      }\r\n    }\r\n    return sum / num;\r\n  }\r\n  // console.log(progress.length);\r\n  // console.log(\"eweewewe , \", sum(progress));\r\n\r\n  // TODO: collab dropdown section\r\n\r\n  const dropdownHandler = (e) => {\r\n    setPostType((p) => {\r\n      if (p === \"Normal\") {\r\n        return \"Collab\";\r\n      } else {\r\n        return \"Normal\";\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card\r\n        custom={`${cardClass.card} ${classes.card}  ${props.usedAs === \"addReply\" ? classes.cardForReply : \"\"} ${\r\n          props.usedAs === \"addPost\" ? classes.cardForPost : \"\"\r\n        }`}\r\n      >\r\n        {/* <img className={classes.profile} src={profile} alt={\"profile of \" + loggedUser.name} /> */}\r\n        <div className={classes.content}>\r\n          <textarea\r\n            rows={props.usedAs === \"addReply\" ? \"2\" : \"4\"}\r\n            cols=\"4\"\r\n            ref={textArea}\r\n            className={`${classes.comment}`}\r\n            onChange={typingHandler}\r\n            onKeyDown={autosize}\r\n            placeholder={\r\n              props.usedAs === \"addReply\"\r\n                ? \"add your reply...\"\r\n                : props.usedAs === \"addComment\"\r\n                ? \"comment your thoughts...\"\r\n                : \"start your post here...\"\r\n            }\r\n            value={text}\r\n          ></textarea>\r\n          <p className={classes.count}>{props.usedAs === \"addPost\" ? 1024 - text.length : 180 - text.length}</p>\r\n        </div>\r\n        {image.length > 0 ? (\r\n          <div className={classes.selectedContent}>\r\n            {image.map((e, i) => {\r\n              // console.log(\"element ,\", e);\r\n\r\n              if (i >= 4) {\r\n                return;\r\n              }\r\n\r\n              return (\r\n                <div key={i} className={classes.parentDivClass}>\r\n                  <img\r\n                    className={classes.selImage}\r\n                    key={\"a\" + i}\r\n                    src={e.croppedImageURL ? e.croppedImageURL : e.imageURL}\r\n                    alt=\"\"\r\n                  />\r\n                  <div className={classes.edit}>\r\n                    <img\r\n                      onClick={(ev) => {\r\n                        clickHandler(ev, i);\r\n                      }}\r\n                      key={\"b\" + i}\r\n                      src={pencil}\r\n                      alt=\"\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        ) : gif ? (\r\n          <div className={classes.selectedContent}>\r\n            <div className={classes.parentDivClass}>\r\n              <img className={classes.selImage} src={gif.url} alt=\"\" />\r\n              <div className={classes.edit}>\r\n                <img src={garbage} alt=\"\" onClick={deleteGif} />\r\n              </div>\r\n            </div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        {f.selectedFile ? (\r\n          <div className={classes.videoContainer}>\r\n            <img onClick={removeVideo} src={closeIcon} alt=\"\" />\r\n\r\n            <video type=\"video/mp4\" controls={true} src={f.fileURL}></video>\r\n            {/* <VideoJS type=\"local\" source={URL.createObjectURL(f.selectedFile)} /> */}\r\n            <div style={{ width: sum(progress) + \"%\" }} className={classes.progressBar}></div>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n        <div className={classes.bottom}>\r\n          <img className={classes.addButtons} src={addImage} onClick={onButtonClick} alt=\"\" />\r\n          <img className={classes.addButtons} src={addGif} alt=\"\" onClick={onGifClick} />\r\n          {props.usedAs === \"addPost\" ? (\r\n            <img className={classes.addButtons} src={addVideo} alt=\"\" onClick={videoHandler} />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {props.usedAs === \"addPost\" ? (\r\n            <div onClick={dropdownHandler} className={classes.dropdown}>\r\n              {postType} <span> &#x25BC;</span>\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          <Button onClick={postComment} name=\"post\" custom={classes.button} />\r\n        </div>\r\n\r\n        {click !== 0 ? (\r\n          <ImageCropDialog\r\n            id={1}\r\n            imageURL={image[click - 1].imageURL}\r\n            cropInit={image[click - 1].crop}\r\n            zoomInit={image[click - 1].zoom}\r\n            aspectInit={image[click - 1].aspect}\r\n            onCancel={onCancel}\r\n            rotationInit={image[click - 1].rotation}\r\n            setCroppedImageFor={setCroppedImageFor}\r\n            resetImage={resetImage}\r\n            ratios={[1, 16 / 9]}\r\n          />\r\n        ) : null}\r\n\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          id=\"file\"\r\n          ref={inputFile}\r\n          style={{ display: \"none\" }}\r\n          onChange={onImageSelected}\r\n          multiple\r\n        />\r\n        {props.usedAs === \"addPost\" ? (\r\n          <input\r\n            type=\"file\"\r\n            accept=\"video/*\"\r\n            id=\"file\"\r\n            ref={inputVideo}\r\n            style={{ display: \"none\" }}\r\n            onChange={onVideoSelected}\r\n            multiple\r\n          />\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </Card>\r\n      {showGif ? <Gif setGif={settingGif} setShowGif={setShowGif} /> : \"\"}\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default AddComment;\r\n","D:\\front-end\\src\\pages\\post\\ListPosts.js",["478","479","480","481","482","483"],"import { feedURL } from \"../../URL/signUpURL\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { useState, useEffect, useRef } from \"react\";\r\nimport postSlice, { postActions } from \"../../Store/posts-slice\";\r\nimport axios from \"axios\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport PostV2 from \"./PostV2\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport classes from \"./listposts.module.css\";\r\nimport SendCollabRequest from \"../collab/SendCollabRequest\";\r\nimport { withdrawCollabRequestURL } from \"../../URL/signUpURL\";\r\nimport { toast } from \"react-toastify\";\r\n\r\nconst withdrawRequest = async (url, token, id, notify, toast, update) => {\r\n  try {\r\n    notify(\"withdrawing request\", { type: toast.TYPE.INFO, autoClose: false });\r\n    await axios.delete(url + id, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n    update(\"request withdrawn\");\r\n  } catch (err) {\r\n    update(\"err withdrawing request\", {\r\n      type: toast.TYPE.ERROR,\r\n      autoClose: 1000,\r\n      style: { border: \"none\", color: \"#f91880\" },\r\n    });\r\n    console.error(\"err in withdrawing request\", err);\r\n  }\r\n};\r\n\r\nconst getFeed = async (token, dispatch, setLoading, page, setHasMore) => {\r\n  try {\r\n    setLoading(true);\r\n    const feed = await axios.post(\r\n      feedURL,\r\n      { page: page - 1 },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n\r\n    for (let x = 0; x < feed.data.post.length; x++) {\r\n      let merger = { haveIUpvoted: false, haveIDownvoted: false };\r\n      if (feed.data.post[x].reactions.length > 0) {\r\n        if (feed.data.post[x].reactions[0].reaction == 1) {\r\n          merger.haveIUpvoted = true;\r\n        } else if (feed.data.post[x].reactions[0].reaction == 0) {\r\n          merger.haveIDownvoted = true;\r\n        }\r\n      }\r\n      feed.data.post[x] = { ...feed.data.post[x], ...merger };\r\n    }\r\n\r\n    // console.log(feed.data.post);\r\n    // FIXME: remove this\r\n    if (page === 1) {\r\n      dispatch(postActions.reset());\r\n    }\r\n    if (feed.data.post.length < 7) {\r\n      setHasMore(false);\r\n    }\r\n\r\n    dispatch(postActions.addToList({ posts: feed.data.post }));\r\n    // dispatch(postActions.setLoad({ load: false }));\r\n    dispatch(postActions.setPageNo({ pageNo: page }));\r\n    setLoading(false);\r\n  } catch (err) {\r\n    console.error(\"err fetching feed\");\r\n  }\r\n};\r\n\r\nconst ListPosts = (props) => {\r\n  const loggedUser = useSelector((state) => state.user.userObj);\r\n  const token = useSelector((state) => state.user.token);\r\n  const posts = useSelector((state) => state.posts.posts);\r\n  const pageSaved = useSelector((state) => state.posts.page);\r\n  const [showCollab, setShowCollab] = useState({ show: false, postID: null, index: null });\r\n\r\n  const [loading, setLoading] = useState(false);\r\n  const [hasMore, setHasMore] = useState(true);\r\n\r\n  const [page, setPage] = useState(1);\r\n  const dispatch = useDispatch();\r\n\r\n  const toastId = useRef(null);\r\n  const notify = (message, details = null) => (toastId.current = toast(message, { autoClose: false, ...details }));\r\n\r\n  const update = (message, details = null) =>\r\n    toast.update(toastId.current, {\r\n      render: message,\r\n      type: toast.TYPE.SUCCESS,\r\n      autoClose: 1000,\r\n      pauseOnFocusLoss: false,\r\n      pauseOnHover: false,\r\n      ...details,\r\n    });\r\n\r\n  useEffect(() => {\r\n    if (!loggedUser || !token) {\r\n      return;\r\n    }\r\n\r\n    if (page > pageSaved || posts.length < 1) {\r\n      getFeed(token, dispatch, setLoading, page, setHasMore);\r\n    }\r\n\r\n    // getFeed(token, dispatch, setLoading, page, setHasMore);\r\n  }, [page, props.token]);\r\n\r\n  if (!loggedUser) {\r\n    return <div>loading</div>;\r\n  }\r\n\r\n  const nextFunction = () => {\r\n    // console.log(\"iam the next function\");\r\n    setPage((p) => p + 1);\r\n  };\r\n\r\n  const setShowMore = (id, length) => {\r\n    dispatch(postActions.setShowMore({ showMore: length, id: id }));\r\n  };\r\n\r\n  const downvoteHandler = (id, vote) => {\r\n    dispatch(postActions.setDownvote({ id: id, vote: vote }));\r\n  };\r\n  const upvoteHandler = (id, vote) => {\r\n    dispatch(postActions.setUpvote({ id: id, vote: vote }));\r\n  };\r\n\r\n  const showCollabHandler = (postID, collabReaction, index, withDraw) => {\r\n    if (collabReaction.length === 0) {\r\n      setShowCollab({ show: true, postID, index: index });\r\n    } else {\r\n      // with draw request\r\n      if (withDraw) {\r\n        withdrawRequest(withdrawCollabRequestURL, props.token, collabReaction[0]._id, notify, toast, update);\r\n        dispatch(postActions.removeCollabRequest({ index: index }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const hideCollabHandler = () => {\r\n    setShowCollab((p) => ({ show: !p.show, postID: p.postID }));\r\n  };\r\n\r\n  return (\r\n    <div id=\"listOfPosts\" className={classes.listPosts}>\r\n      {showCollab.show ? (\r\n        <SendCollabRequest\r\n          postID={showCollab.postID}\r\n          index={showCollab.index}\r\n          token={token}\r\n          userID={loggedUser._id}\r\n          showCollabHandler={hideCollabHandler}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      <InfiniteScroll dataLength={posts.length} next={nextFunction} hasMore={hasMore}>\r\n        {posts.map((e, i) => {\r\n          return (\r\n            <PostV2\r\n              key={e._id}\r\n              index={i}\r\n              post={e}\r\n              token={token}\r\n              loggedUser={loggedUser}\r\n              setShowMore={setShowMore}\r\n              upvote={upvoteHandler}\r\n              downvote={downvoteHandler}\r\n              usedAs=\"post\"\r\n              showCollabHandler={showCollabHandler}\r\n            />\r\n          );\r\n        })}\r\n      </InfiniteScroll>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListPosts;\r\n","D:\\front-end\\src\\URL\\signUpURL.js",["484"],"const production = \"https://wezo-backend.herokuapp.com/\";\r\nconst dev = \"http://localhost:3000/\";\r\n\r\n// let env = production;\r\nlet env=dev;\r\n\r\nexport const signUpURL = env + \"api/v1/users/signup\";\r\nexport const loginURL = env + \"api/v1/users/login\";\r\nexport const verifyEmailURL = env + \"api/v1/users/verifyEmail/\"; // here token\r\nexport const sendVerificationURL = env + \"api/v1/users/sendVerificationEmail\";\r\nexport const forgotPasswordURL = env + \"api/v1/users/forgotPassword\";\r\nexport const resetPasswordURL = env + \"api/v1/users/resetPassword/\"; // send token\r\nexport const profilePreURL = env + \"api/v1/users/uploadProfile\";\r\nexport const profileStatus = env + \"api/v1/users/profileStatus/\"; //send token\r\n\r\nexport const addBio = env + \"api/v1/users/addBio\";\r\nexport const skillAutoURL = env + \"api/v1/skill/auto/\"; //entered skill as token\r\nexport const addSkillsURL = env + \"api/v1/users/addSkills\";\r\nexport const checkUserNameURL = env + \"api/v1/users/checkUserName/\"; // send uname as token\r\nexport const setUsernameURL = env + \"api/v1/users/setUsername\";\r\nexport const updateNameURL = env + \"api/v1/users/updateName\";\r\nexport const viewProfileURL = env + \"api/v1/users/viewProfile/\"; // send the userID\r\nexport const followURL = env + \"api/v1/users/follow\"; // send post with follow id\r\nexport const amIFollowingURL = env + \"api/v1/users/amIfollowing\"; // post id\r\nexport const getFollowingURL = env + \"api/v1/users/getFollowing\"; // u id, page no\r\n\r\nexport const getFollowersURL = env + \"api/v1/users/getFollowers\"; // u id, page no\r\n\r\nexport const getPostURL = env + \"api/v1/posts/showPost/\"; //send post as param\r\nexport const feedURL = env + \"api/v1/posts/feed\";\r\n\r\nexport const createPostURL = env + \"api/v1/posts/create\";\r\nexport const postStatusURL = env + \"api/v1/posts/status/\"; //send id of post\r\n\r\nexport const reactURL = env + \"api/v1/posts/reactPost\";\r\nexport const addCommentURL = env + \"api/v1/posts/comment\";\r\nexport const commentsFeedURL = env + \"api/v1/posts/commentsFeed\";\r\nexport const commentStatusURL = env + \"api/v1/posts/comment/status/\"; // send comment id as params\r\nexport const commentReactionURL = env + \"api/v1/posts/comment/reaction\";\r\nexport const deleteCommentURL = env + \"api/v1/posts/comment/\"; //send comment id\r\n\r\nexport const replyReactionURL = env + \"api/v1/posts/reply/reaction\";\r\nexport const getRepliesURL = env + \"api/v1/posts/getReplies\";\r\nexport const addReplyURL = env + \"api/v1/posts/addReply\";\r\nexport const replyStatusURL = env + \"api/v1/posts/reply/status/\";\r\nexport const deleteReplyURL = env + \"api/v1/posts/reply/\";\r\n\r\nexport const giphyTrendingURL = \"https://api.giphy.com/v1/gifs/trending?api_key=rs40lGAaQGDam6kxgXlV6ZAR4srLUYVh\";\r\nexport const giphySearchURL = \"https://api.giphy.com/v1/gifs/search?api_key=rs40lGAaQGDam6kxgXlV6ZAR4srLUYVh\";\r\nexport const giphyFromIDURL = \"http://api.giphy.com/v1/gifs?api_key=rs40lGAaQGDam6kxgXlV6ZAR4srLUYVh&ids=\"; //send id\r\n\r\nexport const deletePostURL = env + \"api/v1/posts/delete/\"; //send post id;\r\n\r\nexport const startUploadURL = env + \"api/v1/posts/startUpload\";\r\nexport const getUploadURL = env + \"api/v1/posts/getUploadURL\";\r\nexport const finishUploadURL = env + \"api/v1/posts/completeUpload\";\r\n\r\nexport const githubCodeURL = env + \"api/v1/users/github/oauth/\"; // append the code\r\n\r\nexport const gitLoadReposURL = \"https://api.github.com/users/\";\r\nexport const gitRepoURL = \"https://api.github.com/repos/\"; //send user/repo\r\n\r\nexport const addProjectURL = env + \"api/v1/users/addProject\";\r\nexport const loadProjectsURL = env + \"api/v1/users/listProjects\";\r\nexport const reactOnProjectURL = env + \"api/v1/users/project/react\";\r\nexport const deleteProjectURL = env + \"api/v1/users/project/\"; // send project id\r\n\r\nexport const sendCollabRequestURL = env + \"api/v1/posts/collabRequest\";\r\nexport const withdrawCollabRequestURL = env + \"api/v1/posts/collabRequest/\"; // attach request id\r\nexport const getListOfCollabPostsURL = env + \"api/v1/posts/collabPosts\";\r\n","D:\\front-end\\src\\pages\\Chat\\Chatnav.js",[],"D:\\front-end\\src\\pages\\ChangePassword\\ChangePasswordHandler.js",[],"D:\\front-end\\src\\pages\\ForgotPassword\\ForgotPasswordHandler.js",[],"D:\\front-end\\src\\pages\\Profile\\V2\\ProjectsGitHub.js",["485","486","487","488","489"],"import { useLocation, useHistory, useParams } from \"react-router-dom\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport { useState, useEffect, Fragment } from \"react\";\r\nimport axios from \"axios\";\r\nimport Card from \"../../../UI/Card\";\r\nimport classes from \"./projectsGithub.module.css\";\r\nimport closeIcon from \"../../../UI/imgs/close.svg\";\r\nimport { gitLoadReposURL } from \"../../../URL/signUpURL\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport AddProjects from \"./AddProjects\";\r\n\r\nconst loadRepos = async (url, userID, page, setRepos, setLoading, sort) => {\r\n  try {\r\n    // setLoading(true);\r\n    if (page === 1) {\r\n      setLoading(true);\r\n    }\r\n    const repos = await axios.get(url + userID + \"/repos?per_page=10&sort=\" + sort + \"&page=\" + page);\r\n\r\n    console.log(repos.data);\r\n    setRepos((p) => [...p, ...repos.data]);\r\n\r\n    if (page === 1) {\r\n      setLoading(false);\r\n    }\r\n\r\n    // setLoading(false);\r\n  } catch (err) {}\r\n};\r\n\r\nconst ProjectsGitHub = (props) => {\r\n  const [loading, setLoading] = useState(false);\r\n  const history = useHistory();\r\n  const [repos, setRepos] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [sort, setSort] = useState(\"created\");\r\n\r\n  useEffect(() => {\r\n    loadRepos(gitLoadReposURL, props.github_username, page + 1, setRepos, setLoading, sort);\r\n  }, [props.userID, page, sort]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <Card custom={classes.card}>\r\n        <div className={classes.loader}>\r\n          <GuardSpinner color={\"#2ba272\"} loading={loading} />\r\n          <p>fetching repos...</p>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  const closeHandler = () => {\r\n    history.replace(\"/profile/\" + props.userID);\r\n  };\r\n\r\n  const sortHandler = (e) => {\r\n    setSort(e.target.value);\r\n    setRepos([]);\r\n    setPage(0);\r\n  };\r\n\r\n  const addThisRepoHandler = (el) => {\r\n    history.replace(\"/profile/\" + props.userID + \"/addProject/\" + el.name);\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <Card custom={classes.card}>\r\n        <div className={classes.header}>\r\n          <h1 className={classes.title}>Import Projects</h1>\r\n          <img className={classes.closeIcon} onClick={closeHandler} src={closeIcon} alt=\"\" />\r\n        </div>\r\n        <hr />\r\n        <div className={classes.top}>\r\n          <label className={classes.label} htmlFor=\"sort_repos\">\r\n            sort by\r\n          </label>\r\n          <select value={sort} onChange={sortHandler} className={classes.select} name=\"sort_repos\" id=\"\">\r\n            <option value=\"created\">created</option>\r\n            <option value=\"updated\">updated</option>\r\n            <option value=\"pushed\">pushed</option>\r\n            <option value=\"full_name\">full name</option>\r\n          </select>\r\n        </div>\r\n        <div className={classes.scrollable} id=\"scrollrepos\">\r\n          <InfiniteScroll\r\n            dataLength={repos.length}\r\n            next={() => setPage((p) => p + 1)}\r\n            hasMore={hasMore}\r\n            scrollableTarget=\"scrollrepos\"\r\n          >\r\n            {repos.map((el, ind) => {\r\n              return (\r\n                <div\r\n                  key={ind}\r\n                  className={classes.repo}\r\n                  onClick={() => {\r\n                    addThisRepoHandler(el);\r\n                  }}\r\n                >\r\n                  <h3 className={classes.titleOfRepo}>{el.name}</h3>\r\n                  <p className={classes.disOfRepo}>{el.description}</p>\r\n                </div>\r\n              );\r\n            })}\r\n          </InfiniteScroll>\r\n        </div>\r\n      </Card>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default ProjectsGitHub;\r\n","D:\\front-end\\src\\pages\\Profile\\useSideScroll.js",["490"],"import { useRef, useEffect } from \"react\";\r\n\r\nexport function useHorizontalScroll() {\r\n  const elRef = useRef();\r\n  useEffect(() => {\r\n    const el = elRef.current;\r\n\r\n    if (el) {\r\n      const onWheel = (e) => {\r\n        if (e.deltaY == 0) return;\r\n        e.preventDefault();\r\n        el.scrollTo({\r\n          left: el.scrollLeft + e.deltaY * 4,\r\n          behavior: \"smooth\",\r\n        });\r\n      };\r\n\r\n      el.addEventListener(\"wheel\", onWheel);\r\n      return () => el.removeEventListener(\"wheel\", onWheel);\r\n    }\r\n  }, []);\r\n  return elRef;\r\n}\r\n","D:\\front-end\\src\\pages\\post\\PostV2.js",["491","492","493","494","495","496","497","498","499","500","501","502","503","504"],"import Card from \"../../UI/Card\";\r\nimport classes from \"./post.module.css\";\r\nimport { Route, useHistory, Link, useParams, useLocation } from \"react-router-dom\";\r\nimport { useState, useEffect, Fragment, useRef } from \"react\";\r\nimport P from \"../../UI/P\";\r\nimport arrow from \"../../UI/imgs/arrow.svg\";\r\nimport upvote from \"../../UI/imgs/upvote.svg\";\r\nimport upvoteGreen from \"../../UI/imgs/upvoteGreen.svg\";\r\nimport upvoteRed from \"../../UI/imgs/upvoteRed.svg\";\r\nimport upvoteFilled from \"../../UI/imgs/upvoteFilled.svg\";\r\nimport downvoteFilled from \"../../UI/imgs/downvoteFilled.svg\";\r\nimport comment from \"../../UI/imgs/comment.svg\";\r\nimport commentGreen from \"../../UI/imgs/commentGreen.svg\";\r\nimport moreMenu from \"../../UI/imgs/moreMenu.svg\";\r\nimport close from \"../../UI/imgs/close2.svg\";\r\nimport deleteIcon from \"../../UI/imgs/delete.svg\";\r\nimport personIcon from \"../../UI/imgs/person.svg\";\r\nimport blockIcon from \"../../UI/imgs/block.svg\";\r\nimport flag from \"../../UI/imgs/flag.svg\";\r\nimport colab from \"../../UI/imgs/colab.svg\";\r\nimport colabGreen from \"../../UI/imgs/colabGreen.svg\";\r\nimport share from \"../../UI/imgs/share.svg\";\r\nimport shareGreen from \"../../UI/imgs/shareGreen.svg\";\r\nimport axios from \"axios\";\r\nimport { reactURL, amIFollowingURL, followURL, deletePostURL, giphyFromIDURL } from \"../../URL/signUpURL\";\r\nimport { followSomeOne } from \"../Profile/Profile\";\r\nimport test from \"../../pages/Profile/joe.jpg\";\r\nimport VideoJS from \"../Player/VideoJS\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postActions } from \"../../Store/posts-slice\";\r\nimport { detailedPostActions } from \"../../Store/detailed-post-slice\";\r\nimport ImageViewer from \"../../UI/ImageViewer\";\r\nimport classesFromComment from \"./comments.module.css\";\r\nimport { fetchGif } from \"./Comment\";\r\n\r\nconst amIFollowing = async (url, token, id, setFollowTxt) => {\r\n  try {\r\n    const result = await axios.post(\r\n      url,\r\n      { following: id },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (result.data.data.split(\" \")[0] == \"1\") {\r\n      setFollowTxt(\"Following\");\r\n    } else {\r\n      setFollowTxt(\"Follow\");\r\n    }\r\n  } catch (err) {\r\n    console.log(\"err in finding out if you follow each other or not\");\r\n  }\r\n};\r\n\r\nfunction round(value, precision) {\r\n  var multiplier = Math.pow(10, precision || 0);\r\n  return Math.round(value * multiplier) / multiplier;\r\n}\r\n\r\nconst sendUpvote = async (vote, id, token) => {\r\n  try {\r\n    await axios.post(\r\n      reactURL,\r\n      { postID: id, reaction: vote },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n  } catch (err) {\r\n    console.log(\"err registering upvote\", err);\r\n  }\r\n};\r\n\r\nexport const calculatePostTime = (date) => {\r\n  const endDate = new Date();\r\n  const startDate = new Date(date);\r\n  let postDate;\r\n\r\n  let diff = endDate.getTime() - startDate.getTime();\r\n  const hours = diff / 1000 / 60 / 60;\r\n\r\n  // console.log(\"hrs ,\", date);\r\n\r\n  // diff -= hours * 1000 * 60 * 60;\r\n  const minutes = hours * 60;\r\n  if (minutes < 1) {\r\n    postDate = round(minutes * 60) + \"s\";\r\n  } else if (minutes < 60) {\r\n    postDate = round(minutes) + \"m\";\r\n    // postDate = minutes + \" m\";\r\n  } else if (hours < 24) {\r\n    postDate = round(hours) + \"h\";\r\n  } else if (hours < 672) {\r\n    postDate = round(hours / 24) + \"d\";\r\n  } else {\r\n    const monthNames = [\"Jan\", \"Feb\", \"Mar\", \"April\", \"May\", \"Jun\", \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\n    let year;\r\n    let month;\r\n\r\n    year = new Date(date).getFullYear();\r\n    month = monthNames[new Date(date).getMonth()];\r\n\r\n    postDate = month + \" \" + year;\r\n  }\r\n\r\n  return postDate;\r\n};\r\n\r\nconst deleteThatPost = async (url, id, token) => {\r\n  try {\r\n    await axios.delete(url + id, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.error(\"err deleting post\");\r\n  }\r\n};\r\n\r\nconst PostV2 = (props) => {\r\n  const history = useHistory();\r\n  const playerRef = useRef(null);\r\n  const location = useLocation();\r\n  const dispatch = useDispatch();\r\n\r\n  const post = props.post;\r\n  const [postDate, setPostDate] = useState(calculatePostTime(post.created_at));\r\n  const [showMore, setShowMore] = useState(post.showMore ? post.showMore : post.imgUrl.length > 0 ? 165 : 500);\r\n  const [showMoreMenu, setShowMoreMenu] = useState(false);\r\n  const [mainImage, setMainImage] = useState(0);\r\n  const [upvoteSrc, setUpvoteSrc] = useState(post.haveIUpvoted === true ? upvoteFilled : upvote);\r\n  const [downvoteSrc, setDownvoteSrc] = useState(post.haveIDownvoted === true ? downvoteFilled : upvote);\r\n  const [collabSrc, setCollabSrc] = useState();\r\n\r\n  // console.log(\"collab reaction \", post.collabReaction);\r\n\r\n  useEffect(() => {\r\n    if (post.collabReaction && post.collabReaction.length > 0) {\r\n      setCollabSrc(\"https://wezo-media.s3.ap-south-1.amazonaws.com/UI/collab-pending.svg\");\r\n    } else {\r\n      setCollabSrc(colab);\r\n    }\r\n  }, [post.collabReaction]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setUpvoteSrc(post.haveIUpvoted === true ? upvoteFilled : upvote);\r\n    }\r\n  }, [post.haveIUpvoted]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      setDownvoteSrc(post.haveIDownvoted === true ? downvoteFilled : upvote);\r\n    }\r\n  }, [post.haveIDownvoted]);\r\n\r\n  let listOfImages = post.imgUrl;\r\n  // let listOfImages = [test];\r\n  const [following, setFollowing] = useState(\"dono\");\r\n  const [view, setView] = useState(false);\r\n\r\n  const [gif, setGif] = useState();\r\n  const [gifState, setGifState] = useState(false);\r\n\r\n  // upvote --> upvoteFilled --> upvote\r\n  useEffect(() => {\r\n    if (showMoreMenu && following === \"dono\" && props.loggedUser._id !== post.u_id._id) {\r\n      amIFollowing(amIFollowingURL, props.token, post.u_id._id, setFollowing);\r\n    }\r\n  }, [props.token, showMoreMenu]);\r\n\r\n  // console.log(\"user id is \", location.pathname.split(\"/\").at(-1));\r\n\r\n  useEffect(() => {\r\n    const arr = location.pathname.split(\"/\");\r\n    if (arr[arr.length - 1] === \"feed\") {\r\n      setUpvoteSrc(post.haveIUpvoted === true ? upvoteFilled : upvote);\r\n      setDownvoteSrc(post.haveIDownvoted === true ? downvoteFilled : upvote);\r\n    }\r\n  });\r\n\r\n  useEffect(() => {\r\n    const arr = location.pathname.split(\"/\");\r\n    if (arr[arr.length - 1] !== \"feed\" && props.loading === false) {\r\n      setPostDate(calculatePostTime(post.created_at));\r\n      // console.log(post);\r\n    }\r\n  }, [props.loading]);\r\n\r\n  useEffect(() => {\r\n    if (!props.loading && post.haveIUpvoted) {\r\n      setUpvoteSrc(post.haveIUpvoted === true ? upvoteFilled : upvote);\r\n    } else if (!props.loading && post.haveIDownvoted) {\r\n      setDownvoteSrc(post.haveIDownvoted === true ? downvoteFilled : upvote);\r\n    }\r\n  }, [props.loading]);\r\n\r\n  useEffect(() => {\r\n    if (post.gif) {\r\n      fetchGif(giphyFromIDURL, post.gif, setGif);\r\n    }\r\n  }, [post.gif]);\r\n\r\n  // useEffect(() => {\r\n  //   if (upvoteSrc === upvote && post.haveIUpvoted) {\r\n  //     console.log(\"removing upvote\");\r\n  //   }\r\n  // }, [post.haveIUpvoted]);\r\n\r\n  // useEffect(() => {\r\n  //   console.log(\"sending downvote\");\r\n  // }, [downvoteSrc]);\r\n\r\n  if (!props.loggedUser || !props.token) {\r\n    return <div>haven't got props yet</div>;\r\n  }\r\n\r\n  if (props.loading) {\r\n    return (\r\n      <Card custom={`${classes.card} ${props.usedAs === \"detailedPost\" ? classes.detailedPost : \"\"}`}>\r\n        <div className={classes.spinner}>\r\n          <div className={classes.spinner2}>\r\n            <GuardSpinner color={\"#2ba272\"} loading={true} />\r\n          </div>\r\n        </div>\r\n      </Card>\r\n    );\r\n  }\r\n\r\n  let profile;\r\n  if (post && post.u_id.profile) {\r\n    profile = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/\" + post.u_id.profile.replace(\"$\", \"%24\");\r\n  } else {\r\n    profile = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/default.png\";\r\n  }\r\n\r\n  if (listOfImages.length > 0) {\r\n    listOfImages = listOfImages.map((e) => {\r\n      return \"https://wezo-media.s3.ap-south-1.amazonaws.com/\" + e.replace(\"$\", \"%24\");\r\n    });\r\n  }\r\n\r\n  const profileClickHandler = () => {\r\n    history.push(\"/profile/\" + post.u_id.userID);\r\n  };\r\n\r\n  const showMoreHandler = () => {\r\n    setShowMore(post.postContent.length);\r\n    props.setShowMore(props.index, post.postContent.length);\r\n  };\r\n\r\n  // --- --- //\r\n\r\n  const dotClickHandler = (indx) => {\r\n    setMainImage(indx);\r\n  };\r\n\r\n  const arrowLeftClickHandler = () => {\r\n    if (mainImage === 0) {\r\n      setMainImage(listOfImages.length - 1);\r\n    } else {\r\n      setMainImage((p) => p - 1);\r\n    }\r\n  };\r\n\r\n  const arrowRightClickHandler = () => {\r\n    if (mainImage === listOfImages.length - 1) {\r\n      setMainImage(0);\r\n    } else {\r\n      setMainImage((p) => p + 1);\r\n    }\r\n  };\r\n\r\n  const upvoteHandler = (e) => {\r\n    // if there is a downvote remove it\r\n    if (downvoteSrc === downvoteFilled) {\r\n      // setDownvoteSrc(upvote);\r\n\r\n      props.downvote(props.index, -1);\r\n    }\r\n\r\n    sendUpvote(1, post._id, props.token);\r\n\r\n    // setUpvoteSrc((p) => {\r\n    //   if (p === upvote) {\r\n    //     return upvoteFilled;\r\n    //   } else if (p === upvoteFilled) {\r\n    //     return upvote;\r\n    //   }\r\n    // });\r\n    props.upvote(props.index, upvoteSrc === upvoteFilled ? -1 : 1);\r\n  };\r\n\r\n  const downvoteHandler = () => {\r\n    // if there is a upvote remove it\r\n    if (upvoteSrc === upvoteFilled) {\r\n      // setUpvoteSrc(upvote);\r\n      props.upvote(props.index, -1);\r\n    }\r\n    sendUpvote(0, post._id, props.token);\r\n    // setDownvoteSrc((p) => {\r\n    //   if (p === upvote) {\r\n    //     return downvoteFilled;\r\n    //   } else if (p === downvoteFilled) {\r\n    //     return upvote;\r\n    //   }\r\n    // });\r\n    props.downvote(props.index, downvoteSrc === downvoteFilled ? -1 : 1);\r\n  };\r\n\r\n  const followHandler = () => {\r\n    setFollowing((p) => {\r\n      if (p === \"Following\") {\r\n        return \"Follow\";\r\n      } else if (p === \"Follow\") {\r\n        return \"Following\";\r\n      }\r\n    });\r\n    followSomeOne(followURL, props.token, post.u_id._id, setFollowing);\r\n  };\r\n\r\n  const viewPostHandler = () => {\r\n    if (location.pathname.split(\"/\").at(-1) === \"feed\" || location.pathname.split(\"/\").at(-1) === \"collab\") {\r\n      // console.log(\"this is runngin\", location.pathname.split(\"/\").at(-1));\r\n      history.push(\"/feed/viewPost/\" + post._id);\r\n    }\r\n  };\r\n\r\n  // --- deleting post --- //\r\n  const deletePostHandler = () => {\r\n    deleteThatPost(deletePostURL, post._id, props.token);\r\n    if (location.pathname.split(\"/\").at(-1) === \"feed\") {\r\n      dispatch(postActions.deletePost({ id: props.index }));\r\n    } else {\r\n      console.log(\"the index that i have here is \");\r\n      dispatch(postActions.detailedDelete({ id: post._id }));\r\n      history.push(\"/feed\");\r\n    }\r\n  };\r\n\r\n  const viewHandler = () => {\r\n    setView((p) => !p);\r\n  };\r\n  const gifClickHandler = () => {\r\n    setGifState((p) => !p);\r\n  };\r\n\r\n  const collabClickHandler = () => {\r\n    if (post.u_id._id !== props.loggedUser._id) {\r\n      props.showCollabHandler(\r\n        post._id,\r\n        post.collabReaction,\r\n        props.index,\r\n        collabSrc === \"https://wezo-media.s3.ap-south-1.amazonaws.com/UI/collab-pending.svg\" ? true : false\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card custom={`${classes.card} ${props.usedAs === \"detailedPost\" ? classes.detailedPost : \"\"}`}>\r\n      <div className={classes.topSection}>\r\n        <img\r\n          onClick={profileClickHandler}\r\n          className={classes.profile}\r\n          alt=\"profile pic\"\r\n          src={profile}\r\n          onError={(e) => (e.target.src = \"/images/profile.png\")}\r\n        />\r\n        <div onClick={profileClickHandler} className={classes.nameContainer}>\r\n          <h1 className={classes.name}>{post.u_id.name}</h1>\r\n          <p className={classes.postTime}> &#183;</p>\r\n          <p className={classes.time}>{postDate}</p>\r\n          <h3 className={classes.userID}>@{post.u_id.userID}</h3>\r\n        </div>\r\n\r\n        <div className={classes.moreMenu}>\r\n          {/* <p>&#183;&#183;&#183;</p> */}\r\n          <img\r\n            onClick={() => {\r\n              setShowMoreMenu((p) => !p);\r\n            }}\r\n            src={showMoreMenu ? close : moreMenu}\r\n            alt=\"more menu\"\r\n          />\r\n          {showMoreMenu ? (\r\n            <Card custom={classes.hoverOptions}>\r\n              {props.loggedUser._id === post.u_id._id ? (\r\n                <Fragment>\r\n                  <div className={classes.moreItem} onClick={deletePostHandler}>\r\n                    <img src={deleteIcon} alt=\"delete post\" />\r\n                    <p>delete post</p>\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                <Fragment>\r\n                  {following !== \"dono\" ? (\r\n                    <div className={classes.moreItem} onClick={followHandler}>\r\n                      <img src={personIcon} alt=\"follow\" />\r\n                      {following === \"Following\" ? <p>Unfollow</p> : <p>Follow</p>}\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <div className={classes.moreItem}>\r\n                    <img src={blockIcon} alt=\"delete post\" />\r\n                    <p>block</p>\r\n                  </div>\r\n                  <div className={classes.moreItem}>\r\n                    <img src={flag} alt=\"report\" /> <p>report post</p>\r\n                  </div>\r\n                </Fragment>\r\n              )}\r\n            </Card>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      <hr />\r\n      <div className={classes.contentContainer}>\r\n        <P className={classes.content} text={post.postContent.substring(0, showMore)}>\r\n          {post.postContent.length > 165 && (showMore === 165 || showMore === 500) ? (\r\n            <p onClick={showMoreHandler} className={classes.showMore}>\r\n              ...read more\r\n            </p>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </P>\r\n      </div>\r\n      {/* render only if there are images */}\r\n      {listOfImages.length > 0 ? (\r\n        <div className={classesFromComment.imageSection}>\r\n          <img\r\n            className={`${classesFromComment.image}`}\r\n            src={listOfImages[mainImage]}\r\n            alt=\"post pic\"\r\n            onClick={viewHandler}\r\n          />\r\n          {listOfImages.length > 1 ? (\r\n            <Fragment>\r\n              <img\r\n                onClick={arrowRightClickHandler}\r\n                className={` ${classesFromComment.rightArrow} ${classesFromComment.arrow}`}\r\n                src={arrow}\r\n                alt=\"click to see next pic\"\r\n              />\r\n              <img\r\n                onClick={arrowLeftClickHandler}\r\n                className={`${classesFromComment.leftArrow} ${classesFromComment.arrow}`}\r\n                src={arrow}\r\n                alt=\"click to see next pic\"\r\n              />\r\n              <div className={classesFromComment.dotContainer}>\r\n                {listOfImages.map((img, indx) => {\r\n                  return (\r\n                    <div\r\n                      key={indx}\r\n                      className={`${classesFromComment.dott} ${mainImage === indx ? classesFromComment.dotActive : \"\"}`}\r\n                      onClick={() => {\r\n                        dotClickHandler(indx);\r\n                      }}\r\n                    ></div>\r\n                  );\r\n                })}\r\n              </div>\r\n            </Fragment>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      {gif ? (\r\n        <div\r\n          className={`${classesFromComment.imageSection} ${classesFromComment.gifSection}`}\r\n          onClick={gifClickHandler}\r\n        >\r\n          <img className={classesFromComment.gif} src={gifState ? gif.play : gif.still} alt=\"\" />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n      {/* if there is a video */}\r\n      {post.vidUrl ? (\r\n        <div className={classes.videoContainer}>\r\n          <VideoJS source=\"https://wezo-video.s3.ap-south-1.amazonaws.com/postVideos/test1.m3u8\" />\r\n        </div>\r\n      ) : (\r\n        \"\"\r\n      )}\r\n\r\n      <div className={`${classes.reactionSection} ${listOfImages.length > 0 ? \"\" : classes.onlyTxt}`}>\r\n        <div className={classes.reaction}>\r\n          <img\r\n            src={upvoteSrc}\r\n            alt=\"upvote\"\r\n            onClick={upvoteHandler}\r\n            onMouseOver={(e) => (upvoteSrc === upvoteFilled ? \"\" : (e.currentTarget.src = upvoteGreen))}\r\n            onMouseLeave={(e) => (e.currentTarget.src = upvoteSrc)}\r\n          />\r\n\r\n          <p style={{ color: upvoteSrc === upvoteFilled ? \"#2ba272\" : \"\" }} className={classes.reactTxt}>\r\n            {post.likes.length > 0 ? post.likes[0].count : 0}\r\n          </p>\r\n        </div>\r\n\r\n        <div className={`${classes.reaction}`}>\r\n          <img\r\n            onClick={downvoteHandler}\r\n            className={classes.downVote}\r\n            src={downvoteSrc}\r\n            alt=\"downvote\"\r\n            onMouseOver={(e) => (downvoteSrc === downvoteFilled ? \"\" : (e.currentTarget.src = upvoteRed))}\r\n            onMouseLeave={(e) => (e.currentTarget.src = downvoteSrc)}\r\n          />\r\n\r\n          <p style={{ color: downvoteSrc === downvoteFilled ? \"#F91880\" : \"\" }} className={classes.reactTxt}>\r\n            {post.dislikes.length > 0 ? post.dislikes[0].count : 0}\r\n          </p>\r\n        </div>\r\n\r\n        <div className={`${classes.reaction}`} onClick={viewPostHandler}>\r\n          <img\r\n            src={comment}\r\n            alt=\"comment\"\r\n            onMouseOver={(e) => (e.currentTarget.src = commentGreen)}\r\n            onMouseLeave={(e) => (e.currentTarget.src = comment)}\r\n          />\r\n\r\n          <p className={classes.reactTxt}>{post.comments}</p>\r\n        </div>\r\n\r\n        {post.postType === \"Collab\" ? (\r\n          <div onClick={collabClickHandler} className={`${classes.reaction}`}>\r\n            <img\r\n              src={collabSrc}\r\n              alt=\"collab\"\r\n              onMouseOver={(e) =>\r\n                (e.currentTarget.src =\r\n                  collabSrc === colab\r\n                    ? colabGreen\r\n                    : \"https://wezo-media.s3.ap-south-1.amazonaws.com/UI/collab-reject.svg\")\r\n              }\r\n              onMouseLeave={(e) => (e.currentTarget.src = collabSrc)}\r\n            />\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n\r\n        <div className={`${classes.reaction}`}>\r\n          <img\r\n            src={share}\r\n            alt=\"share\"\r\n            onMouseOver={(e) => (e.currentTarget.src = shareGreen)}\r\n            onMouseLeave={(e) => (e.currentTarget.src = share)}\r\n          />\r\n        </div>\r\n      </div>\r\n      {view ? <ImageViewer default={mainImage} viewHandler={viewHandler} images={listOfImages} /> : \"\"}\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default PostV2;\r\n\r\n// {listOfImages.length > 0 ? (\r\n//   <div className={classes.imageSection}>\r\n//     <img className={`${classes.image}`} src={listOfImages[mainImage]} alt=\"post pic\" onClick={viewHandler} />\r\n//     {listOfImages.length > 1 ? (\r\n//       <Fragment>\r\n//         <img\r\n//           onClick={arrowRightClickHandler}\r\n//           className={` ${classes.rightArrow} ${classes.arrow}`}\r\n//           src={arrow}\r\n//           alt=\"click to see next pic\"\r\n//         />\r\n//         <img\r\n//           onClick={arrowLeftClickHandler}\r\n//           className={`${classes.leftArrow} ${classes.arrow}`}\r\n//           src={arrow}\r\n//           alt=\"click to see next pic\"\r\n//         />\r\n//         <div className={classes.dotContainer}>\r\n//           {listOfImages.map((img, indx) => {\r\n//             return (\r\n//               <div\r\n//                 key={indx}\r\n//                 className={`${classes.dott} ${mainImage === indx ? classes.dotActive : \"\"}`}\r\n//                 onClick={() => {\r\n//                   dotClickHandler(indx);\r\n//                 }}\r\n//               ></div>\r\n//             );\r\n//           })}\r\n//         </div>\r\n//       </Fragment>\r\n//     ) : (\r\n//       \"\"\r\n//     )}\r\n//   </div>\r\n// ) : (\r\n//   \"\"\r\n// )}\r\n","D:\\front-end\\src\\pages\\Profile\\V2\\AddProjects.js",["505","506","507","508","509","510"],"import Card from \"../../../UI/Card\";\r\nimport classes from \"./addProject.module.css\";\r\nimport closeIcon from \"../../../UI/imgs/close.svg\";\r\nimport { autosize } from \"../../signUP/afterSignUp/Bio\";\r\nimport { useState, useRef, Fragment } from \"react\";\r\nimport Button from \"../../../UI/Button\";\r\nimport ProjectsGitHub from \"./ProjectsGitHub\";\r\nimport axios from \"axios\";\r\nimport { Route, Switch, useHistory, Link, useParams } from \"react-router-dom\";\r\nimport { skillAutoURL, gitRepoURL, addProjectURL } from \"../../../URL/signUpURL\";\r\nimport { useEffect } from \"react\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport { ToastContainer, toast } from \"react-toastify\";\r\n\r\nvar validUrl = require(\"valid-url\");\r\n\r\nconst loadRepo = async (\r\n  url,\r\n  github_username,\r\n  repo,\r\n  setTitle,\r\n  setText,\r\n  setTech,\r\n  setLink,\r\n  setLoading,\r\n  history,\r\n  notify,\r\n  userID\r\n) => {\r\n  try {\r\n    setLoading(true);\r\n    const result = await axios.get(url + github_username + \"/\" + repo);\r\n    // console.log(result.data);\r\n\r\n    const languages = await axios.get(result.data.languages_url);\r\n    // console.log(\"langa\", Object.keys(languages.data));\r\n\r\n    if (languages.data) {\r\n      // setTech(languages);\r\n      // console.log(languages.data);\r\n      setTech([...Object.keys(languages.data)]);\r\n    }\r\n\r\n    setTitle(result.data.name);\r\n    if (result.data.description) {\r\n      setText(result.data.description.substring(0, 1024));\r\n    }\r\n    setLink(result.data.html_url);\r\n    setLoading(false);\r\n  } catch (err) {\r\n    // console.error(\"err getting repo\", err);\r\n    notify(\"err in loading repos try later...!\");\r\n    history.replace(\"/profile/\" + userID);\r\n  }\r\n};\r\n\r\nconst AddProjects = (props) => {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const repo = params.repo;\r\n\r\n  const [text, setText] = useState(\"\");\r\n  const [loading, setLoading] = useState(false);\r\n  const textArea = useRef();\r\n  const [stopSearch, setStopSearch] = useState({ att: 0, val: false });\r\n  const [sugg, setSugg] = useState([]);\r\n  const [techArray, setTechArray] = useState([]);\r\n  const [focus, setFocus] = useState(0);\r\n  const [enteredTech, setEnteredTech] = useState();\r\n  const [title, setTitle] = useState();\r\n\r\n  const [status, setStatus] = useState(\"Finished\");\r\n\r\n  const [link, setLink] = useState();\r\n  const inputTechRef = useRef();\r\n\r\n  const toastId = useRef(null);\r\n\r\n  const notify = (message, details = null) =>\r\n    (toastId.current = toast(message, {\r\n      autoClose: 2000,\r\n      bodyClassName: classes.bodyToast,\r\n      className: classes.containerToast,\r\n      progressClassName: classes.progressBar,\r\n\r\n      ...details,\r\n    }));\r\n\r\n  const update = (message, autoClose, details = null) =>\r\n    toast.update(toastId.current, {\r\n      render: message,\r\n      type: toast.TYPE.SUCCESS,\r\n      autoClose: 1000 || autoClose,\r\n      pauseOnFocusLoss: false,\r\n      pauseOnHover: false,\r\n      ...details,\r\n    });\r\n\r\n  // this is only if repo param exists\r\n  useEffect(() => {\r\n    if (repo) {\r\n      loadRepo(\r\n        gitRepoURL,\r\n        props.github_username,\r\n        repo,\r\n        setTitle,\r\n        setText,\r\n        setTechArray,\r\n        setLink,\r\n        setLoading,\r\n        history,\r\n        notify,\r\n        props.userID\r\n      );\r\n    }\r\n  }, [props.github_username, repo]);\r\n\r\n  const closeHandler = () => {\r\n    history.replace(\"/profile/\" + props.userID);\r\n  };\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={`${classes.cnt}`}>\r\n        <Card custom={`${classes.card}`}>\r\n          <div className={classes.topSection}>\r\n            <h1 className={classes.title}>Add Project</h1>\r\n            <img onClick={closeHandler} className={classes.closeIcon} src={closeIcon} alt=\"\" />\r\n          </div>\r\n          <hr />\r\n          <div className={classes.loader}>\r\n            <GuardSpinner color={\"#2ba272\"} loading={loading} />\r\n          </div>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  const typingHandler = (e) => {\r\n    if (e.target.value.length <= 1024) {\r\n      setText(e.target.value);\r\n    } else {\r\n      setText(e.target.value.substring(0, 1024));\r\n      notify(\"description should be shorter than 1000 chars\");\r\n    }\r\n  };\r\n\r\n  let typingTimer;\r\n  let doneTypingInterval = 500;\r\n\r\n  const techTyping = (ee) => {\r\n    setEnteredTech(ee.target.value.trim());\r\n\r\n    if (stopSearch.val && stopSearch.att > ee.target.value.length) {\r\n      setStopSearch({ att: 0, val: false });\r\n    }\r\n\r\n    // to prevent typing lag on last sugg while stopsearch val===true\r\n    if (stopSearch.val) {\r\n      techHandler(ee);\r\n    } else {\r\n      clearTimeout(typingTimer);\r\n      typingTimer = setTimeout(function () {\r\n        techHandler(ee);\r\n      }, doneTypingInterval);\r\n    }\r\n  };\r\n\r\n  const statusHandler = (e) => {\r\n    setStatus(e.target.value);\r\n  };\r\n\r\n  const techHandler = async (e) => {\r\n    if (e.target.value.length >= 2 && !stopSearch.val) {\r\n      const suggestions = await axios.get(skillAutoURL + e.target.value, {\r\n        headers: {\r\n          Authorization: `Bearer ${props.token}`,\r\n        },\r\n      });\r\n\r\n      if (suggestions.data.search.length === 0) {\r\n        setStopSearch({ att: e.target.value.length, val: true });\r\n      }\r\n\r\n      setSugg([...suggestions.data.search, { name: e.target.value.trim() }]);\r\n    } else if (e.target.value.length < 2) {\r\n      setFocus(0);\r\n      setSugg([]);\r\n      setStopSearch({ att: 0, val: false });\r\n    }\r\n\r\n    if (stopSearch.val) {\r\n      setSugg([{ name: e.target.value.trim() }]);\r\n    }\r\n  };\r\n\r\n  const arrowkeyHandlers = (e) => {\r\n    // arrow down\r\n    if (e.keyCode === 40) {\r\n      if (focus === sugg.length) {\r\n        setFocus(0);\r\n      } else {\r\n        setFocus((p) => p + 1);\r\n      }\r\n    } else if (e.keyCode === 38) {\r\n      e.preventDefault();\r\n      if (focus === 0) {\r\n        setFocus(sugg.length);\r\n      } else {\r\n        setFocus((p) => p - 1);\r\n      }\r\n    } else if (e.keyCode === 13) {\r\n      setTechArray((p) => [...p, e.target.value.trim()]);\r\n      setFocus(0);\r\n      setStopSearch({ att: 0, val: false });\r\n      setSugg([]);\r\n      setEnteredTech(\"\");\r\n    } else if (e.keyCode === 8 && focus !== 0) {\r\n      // setTechArray((p) => [...p, e.target.value.trim()]);\r\n      // setTechArray(sugg[focus - 1].name);\r\n      // setStopSearch({ att: 0, val: false });\r\n      setEnteredTech(sugg[focus - 1].name);\r\n      setSugg([]);\r\n      setFocus(0);\r\n    }\r\n  };\r\n\r\n  const addByClick = (tech) => {\r\n    inputTechRef.current.focus();\r\n    setTechArray((p) => [...p, tech]);\r\n    setFocus(0);\r\n    setStopSearch({ att: 0, val: false });\r\n    setSugg([]);\r\n    setEnteredTech(\"\");\r\n  };\r\n\r\n  const removeTech = (tech) => {\r\n    // const temp = [...techArray].filter((el) => el !== tech);\r\n\r\n    // setTechArray([...temp]);\r\n\r\n    inputTechRef.current.focus();\r\n    setTechArray((p) => {\r\n      const temp = [...p].filter((el) => el !== tech);\r\n\r\n      return temp;\r\n    });\r\n  };\r\n\r\n  const addFromGitHandler = () => {\r\n    if (props.github_username) {\r\n      history.push(\"/profile/\" + props.userID + \"/addFromGithub\");\r\n    }\r\n  };\r\n\r\n  const titleHandler = (e) => {\r\n    if (e.target.value.trim().length < 100) {\r\n      setTitle(e.target.value);\r\n    } else {\r\n      notify(\"use title shorter than 100 chars\");\r\n    }\r\n  };\r\n\r\n  const linkHandler = (e) => {\r\n    if (e.target.value.trim().length < 100) {\r\n      setLink(e.target.value.trim());\r\n    } else {\r\n      notify(\"add links shorter than 100 chars\");\r\n    }\r\n  };\r\n\r\n  const submitProjectHandler = async (e, s) => {\r\n    if (link && !validUrl.isUri(link)) {\r\n      notify(\"Please add a valid URL\");\r\n      return;\r\n    }\r\n\r\n    if (title.length > 0) {\r\n      notify(\"Adding project\", {\r\n        autoClose: false,\r\n        type: toast.TYPE.INFO,\r\n        bodyClassName: classes.bodyToastSuccess,\r\n        className: classes.containerToastSuccess,\r\n        progressClassName: classes.progressBarSuccess,\r\n      });\r\n\r\n      const body = { title: title, description: text, link: link, repo: repo, tech: techArray, status: status };\r\n\r\n      const result = await axios.post(addProjectURL, body, {\r\n        headers: {\r\n          Authorization: \"Bearer \" + props.token,\r\n        },\r\n      });\r\n\r\n      let project = { ...result.data.project, likes: [{ count: 0 }], dislikes: [{ count: 0 }] };\r\n\r\n      props.addedProjectHandler(project);\r\n      history.replace(\"/profile/\" + props.userID);\r\n\r\n      update(\"Project added successfully\", { autoClose: 1000, type: toast.TYPE.SUCCESS });\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={classes.cnt}>\r\n        <Card custom={classes.card}>\r\n          <div className={classes.topSection}>\r\n            <h1 className={classes.title}>Add Project</h1>\r\n            <img onClick={closeHandler} className={classes.closeIcon} src={closeIcon} alt=\"\" />\r\n          </div>\r\n          <hr />\r\n          <p className={classes.field}>Title</p>\r\n          <textarea\r\n            // placeholder=\"eg: Translator bot\"\r\n            onChange={titleHandler}\r\n            className={classes.textarea}\r\n            name=\"title\"\r\n            cols=\"1\"\r\n            rows=\"1\"\r\n            value={title}\r\n          ></textarea>\r\n          {/* \r\n              <p className={classes.field}>One liner</p>\r\n              <textarea\r\n                // placeholder=\"eg: Translates text from one language to other\"\r\n                className={classes.textarea}\r\n                name=\"title\"\r\n                cols=\"1\"\r\n                rows=\"1\"\r\n              ></textarea> */}\r\n\r\n          <p className={classes.field}>Description</p>\r\n          <div className={classes.desCnt}>\r\n            <textarea\r\n              ref={textArea}\r\n              value={text}\r\n              onChange={typingHandler}\r\n              onKeyDown={autosize}\r\n              className={classes.textarea}\r\n              name=\"title\"\r\n              cols=\"3\"\r\n              rows=\"4\"\r\n            ></textarea>\r\n            <p className={classes.count}>{1024 - text.length}</p>\r\n          </div>\r\n\r\n          <p className={classes.field}>Tech stack</p>\r\n          <div className={classes.tech}>\r\n            <div className={classes.suggestions}>\r\n              {sugg.map((e, i) => (\r\n                <div\r\n                  style={i + 1 === focus ? { backgroundColor: \"#656565\" } : {}}\r\n                  className={classes.suggestionsItem}\r\n                  onClick={() => {\r\n                    addByClick(e.name);\r\n                  }}\r\n                  key={i}\r\n                  onMouseMove={() => {\r\n                    setFocus(i + 1);\r\n                  }}\r\n                >\r\n                  {e.name}\r\n                </div>\r\n              ))}\r\n            </div>\r\n\r\n            {techArray.map((el, ind) => (\r\n              <span key={ind + \"added tech\"} className={classes.item}>\r\n                <p>{el}</p>{\" \"}\r\n                <img\r\n                  onClick={() => {\r\n                    removeTech(el);\r\n                  }}\r\n                  src={closeIcon}\r\n                  alt=\"\"\r\n                />\r\n              </span>\r\n            ))}\r\n\r\n            {/* <span className={classes.item}>\r\n                hello <img src={closeIcon} alt=\"\" />\r\n              </span> */}\r\n\r\n            <input\r\n              value={focus === 0 ? enteredTech : sugg[focus - 1].name}\r\n              onKeyDown={arrowkeyHandlers}\r\n              className={classes.input}\r\n              onChange={techTyping}\r\n              type=\"text\"\r\n              ref={inputTechRef}\r\n              autoFocus={techArray.length > 0 ? (focus === 0 ? true : false) : \"\"}\r\n            />\r\n\r\n            {/* <div className={classes.rest}>aa</div> */}\r\n          </div>\r\n\r\n          <p className={classes.field}>Link</p>\r\n          <textarea\r\n            value={link}\r\n            onChange={linkHandler}\r\n            className={classes.textarea}\r\n            name=\"title\"\r\n            cols=\"1\"\r\n            rows=\"1\"\r\n          ></textarea>\r\n\r\n          {/* <div className={classes.status}>\r\n            <p className={`${classes.field} ${classes.fieldP}`}>Status</p>\r\n            <div className={classes.circle}>\r\n              <div className={classes.filled}></div>\r\n            </div>\r\n            <div className={classes.circle}></div>\r\n          </div> */}\r\n          <div className={classes.status}>\r\n            <p className={`${classes.field} ${classes.fieldP}`}>Status</p>\r\n            <select className={classes.select} name=\"sort_repos\" id=\"\" value={status} onChange={statusHandler}>\r\n              <option value=\"Finished\">Finished</option>\r\n              <option value=\"In development\">In development</option>\r\n            </select>\r\n          </div>\r\n\r\n          <Button custom={classes.btn} name=\"Add Project\" onClick={submitProjectHandler} />\r\n          {!repo ? (\r\n            <Fragment>\r\n              <div className={classes.or}>\r\n                <hr />\r\n                <span>or</span>\r\n                <hr />\r\n              </div>\r\n              <div className={classes.gitDiv}>\r\n                {!props.github_username ? (\r\n                  <a\r\n                    href={\r\n                      \"https://github.com/login/oauth/authorize?client_id=491398f9a595f2bf1b88&state=/profile/\" +\r\n                      props.userID\r\n                    }\r\n                  >\r\n                    {\" \"}\r\n                    <span>import from </span>github\r\n                  </a>\r\n                ) : (\r\n                  <Fragment>\r\n                    <span className={classes.notFirstTime}>\r\n                      import from <span onClick={addFromGitHandler}>github</span>\r\n                    </span>\r\n                  </Fragment>\r\n                )}\r\n\r\n                <img src=\"https://wezo-media.s3.ap-south-1.amazonaws.com/icons/github.svg\" alt=\"\" />\r\n              </div>\r\n            </Fragment>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </Card>\r\n      </div>\r\n    </Fragment>\r\n  );\r\n};\r\nexport default AddProjects;\r\n","D:\\front-end\\src\\pages\\Profile\\V2\\ProfilePatchV2.js",["511","512"],"import classes from \"./patch.module.css\";\r\nimport P from \"../../../UI/P\";\r\nimport Button from \"../../../UI/Button\";\r\nimport { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\nimport { amIFollowingURL, followURL } from \"../../../URL/signUpURL\";\r\nimport { useHistory } from \"react-router-dom\";\r\nexport const amIFollowing = async (url, token, id, setBtnTxt) => {\r\n  try {\r\n    const result = await axios.post(\r\n      url,\r\n      { following: id },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (result.data.data.split(\" \")[0] === \"1\") {\r\n      setBtnTxt(\"Following\");\r\n    } else {\r\n      setBtnTxt(\"Follow\");\r\n    }\r\n  } catch (err) {\r\n    console.log(\"err in finding out if you follow each other or not\");\r\n  }\r\n};\r\n\r\nexport const followSomeOne = async (url, token, id) => {\r\n  try {\r\n    const result = await axios.post(\r\n      url,\r\n      { follow: id },\r\n      {\r\n        headers: {\r\n          Authorization: `Bearer ${token}`,\r\n        },\r\n      }\r\n    );\r\n  } catch (err) {\r\n    console.log(\"err in following :(\", err);\r\n  }\r\n};\r\n\r\nconst ProfilePatchV2 = (props) => {\r\n  const user = props.user;\r\n  let profile;\r\n  const [btnTxt, setBtnTxt] = useState();\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    if (!props.token) {\r\n      return;\r\n    }\r\n\r\n    if (props.myProfile && props.usedAs === \"following\") {\r\n      setBtnTxt(\"Following\");\r\n      return;\r\n    } else {\r\n      amIFollowing(amIFollowingURL, props.token, user._id, setBtnTxt);\r\n    }\r\n  }, [props.token]);\r\n\r\n  if (user.profile) {\r\n    profile = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/\" + user.profile.replace(\"$\", \"%24\");\r\n  } else if (!user.profile) {\r\n    profile = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/default.png\";\r\n  }\r\n\r\n  const profileHandler = () => {\r\n    props.close();\r\n    history.push(\"/profile/\" + user.userID);\r\n  };\r\n\r\n  const followHandler = () => {\r\n    console.log(\"Follow clicked\", btnTxt);\r\n    setBtnTxt((p) => (p === \"Following\" ? \"Follow\" : \"Following\"));\r\n    followSomeOne(followURL, props.token, user._id);\r\n  };\r\n\r\n  return (\r\n    <div key={props.index}>\r\n      <div></div>\r\n      <div className={classes.main}>\r\n        <img className={classes.profile} src={profile} alt=\"\" onClick={profileHandler} />\r\n        <div className={classes.areaOneH}>\r\n          <div className={classes.areaOneV}>\r\n            <h1 onClick={profileHandler} className={classes.name}>\r\n              {user.name}\r\n            </h1>\r\n            <h3 className={classes.userID}>@{user.userID}</h3>\r\n          </div>\r\n          <Button\r\n            custom={`${classes.btn} ${btnTxt ? \"\" : classes.displayNone} ${\r\n              btnTxt === \"Following\" || btnTxt === \"following\" ? classes.following : \"\"\r\n            } ${user.userID === props.loggedUserID ? classes.displayNone : \"\"}`}\r\n            onClick={followHandler}\r\n            name={btnTxt}\r\n          />\r\n        </div>\r\n\r\n        <P emoji={classes.emoji} className={classes.p} text={user.bio} />\r\n      </div>\r\n      <div></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProfilePatchV2;\r\n","D:\\front-end\\src\\pages\\Profile\\V2\\ProjectPatch.js",[],"D:\\front-end\\src\\pages\\collab\\SendCollabRequest.js",["513","514","515"],"import Card from \"../../UI/Card\";\r\nimport classes from \"./sendCollabRequest.module.css\";\r\nimport closeIcon from \"../../UI/imgs/close.svg\";\r\nimport { useState, useRef, useEffect } from \"react\";\r\nimport { autosize } from \"../signUP/afterSignUp/Bio\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\nimport Button from \"../../UI/Button\";\r\nimport { loadProjects } from \"../Profile/V2/Projects\";\r\nimport { loadProjectsURL } from \"../../URL/signUpURL\";\r\nimport { sendCollabRequestURL } from \"../../URL/signUpURL\";\r\nimport axios from \"axios\";\r\nimport { toast } from \"react-toastify\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { postActions } from \"../../Store/posts-slice\";\r\nimport { detailedPostActions } from \"../../Store/detailed-post-slice\";\r\n\r\nexport const myOwnIncludes = (mainArray, element) => {\r\n  for (let i = 0; i < mainArray.length; i++) {\r\n    if (mainArray[i] === element) {\r\n      return { contains: true, foundAt: i };\r\n    }\r\n  }\r\n\r\n  return { contains: false, foundAt: null };\r\n};\r\n\r\nconst sendCollabRequest = async (\r\n  url,\r\n  token,\r\n  postID,\r\n  refProjects,\r\n  comment,\r\n  notify,\r\n  update,\r\n  closeDialouge,\r\n  dispatch,\r\n  index\r\n) => {\r\n  try {\r\n    notify(\"sending request\", { type: toast.TYPE.INFO, autoClose: false });\r\n    const res = await axios.post(\r\n      url,\r\n      {\r\n        postID,\r\n        refProjects,\r\n        comment,\r\n      },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n\r\n    let typingTimer;\r\n    let doneTypingInterval = 1000;\r\n\r\n    dispatch(postActions.addCollabRequest({ index: index, collabRequest: res.data.collabRequest }));\r\n    dispatch(detailedPostActions.addCollabRequest({ collabRequest: res.data.collabRequest }));\r\n    // console.log(\"dataaaaaaaaaaa\", res.data.collabRequest);\r\n\r\n    clearTimeout(typingTimer);\r\n    typingTimer = setTimeout(() => {\r\n      update(\"request sent\");\r\n      closeDialouge();\r\n    }, doneTypingInterval);\r\n  } catch (err) {\r\n    let typingTimer;\r\n    let doneTypingInterval = 1000;\r\n\r\n    clearTimeout(typingTimer);\r\n    typingTimer = setTimeout(() => {\r\n      update(\"err sending request\", {\r\n        type: toast.TYPE.ERROR,\r\n        autoClose: 1000,\r\n        style: { border: \"none\", color: \"#f91880\" },\r\n      });\r\n      closeDialouge();\r\n    }, doneTypingInterval);\r\n  }\r\n};\r\n\r\nconst SendCollabRequest = (props) => {\r\n  const textArea = useRef();\r\n  const [text, setText] = useState(\"\");\r\n  const [projectsList, setProjectsList] = useState([]);\r\n  const [page, setPage] = useState(0);\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const [loading, setLoading] = useState(true);\r\n  const [selectedList, setSelectedList] = useState([]);\r\n  const dispatch = useDispatch();\r\n\r\n  const toastId = useRef(null);\r\n  const notify = (message, details = null) => (toastId.current = toast(message, { autoClose: false, ...details }));\r\n\r\n  const update = (message, details = null) =>\r\n    toast.update(toastId.current, {\r\n      render: message,\r\n      type: toast.TYPE.SUCCESS,\r\n      autoClose: 1000,\r\n      pauseOnFocusLoss: false,\r\n      pauseOnHover: false,\r\n      ...details,\r\n    });\r\n\r\n  const typingHandler = (e) => {\r\n    if (e.target.value.length < 180) {\r\n      setText(e.target.value);\r\n    } else {\r\n      setText(e.target.value.substring(0, 180));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    loadProjects(loadProjectsURL, props.token, props.userID, page, setProjectsList, setLoading, setHasMore, 15);\r\n  }, [props.token, page]);\r\n\r\n  const selectHandler = (id) => {\r\n    let res = myOwnIncludes(selectedList, id);\r\n\r\n    if (res.contains) {\r\n      setSelectedList((p) => {\r\n        const temp = [...p].filter((el) => el !== id);\r\n\r\n        return temp;\r\n      });\r\n    } else {\r\n      setSelectedList((p) => {\r\n        if (p.length < 3) {\r\n          return [...p, id];\r\n        } else {\r\n          return [p[1], p[2], id];\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const submitHandler = () => {\r\n    sendCollabRequest(\r\n      sendCollabRequestURL,\r\n      props.token,\r\n      props.postID,\r\n      selectedList,\r\n      text,\r\n      notify,\r\n      update,\r\n      props.showCollabHandler,\r\n      dispatch,\r\n      props.index\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.container}>\r\n      <Card custom={classes.card}>\r\n        <div className={classes.heading}>\r\n          <h3 className={classes.headingH3}>Send Collab Request</h3>\r\n          <img onClick={props.showCollabHandler} src={closeIcon} alt=\"\" className={classes.closeIcon} />\r\n        </div>\r\n        <hr />\r\n        <p className={classes.label}>Add something</p>\r\n        <div className={classes.textareaContainer}>\r\n          <textarea\r\n            rows={props.usedAs === \"addReply\" ? \"2\" : \"4\"}\r\n            cols=\"4\"\r\n            ref={textArea}\r\n            className={`${classes.collabTextArea}`}\r\n            onChange={typingHandler}\r\n            onKeyDown={autosize}\r\n            placeholder={\"use this space to show your expertise\"}\r\n            value={text}\r\n          ></textarea>\r\n          <p className={classes.count}>{180 - text.length}</p>\r\n        </div>\r\n\r\n        <div className={classes.attachProject}>\r\n          <p className={classes.label}>Attach projects</p>\r\n          <img\r\n            className={classes.paperClip}\r\n            src=\"https://wezo-media.s3.ap-south-1.amazonaws.com/UI/paper-clip.svg\"\r\n            alt=\"\"\r\n          />\r\n        </div>\r\n        <div className={classes.scrollable} id=\"scrollProfiles\">\r\n          <InfiniteScroll\r\n            dataLength={\r\n              projectsList.length\r\n              // props.type == \"following\"\r\n              //   ? props.user.followingCnt\r\n              //   : props.user.followersCnt\r\n            }\r\n            next={() => setPage((p) => p + 1)}\r\n            hasMore={hasMore}\r\n            scrollableTarget=\"scrollProfiles\"\r\n          >\r\n            {loading ? (\r\n              <div className={classes.loader}>\r\n                <GuardSpinner color={\"#2ba272\"} loading={loading} />\r\n              </div>\r\n            ) : (\r\n              \"\"\r\n            )}\r\n            {projectsList.map((e, i) => {\r\n              // return <ProjectComponent onClick={selectHandler} id={e._id} title={e.title} key={i} />;\r\n\r\n              return (\r\n                <div\r\n                  key={i}\r\n                  onClick={() => {\r\n                    selectHandler(e._id);\r\n                  }}\r\n                  className={`${classes.projectItem} ${\r\n                    selectedList[0] == e._id || selectedList[1] === e._id || selectedList[2] === e._id\r\n                      ? classes.selected\r\n                      : \"\"\r\n                  }`}\r\n                >\r\n                  {e.title}\r\n                </div>\r\n              );\r\n            })}\r\n          </InfiniteScroll>\r\n        </div>\r\n\r\n        <Button onClick={submitHandler} custom={classes.btn} name=\"send request\"></Button>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SendCollabRequest;\r\n","D:\\front-end\\src\\UI\\cropper\\ImageCropDialog.js",[],"D:\\front-end\\src\\UI\\cropper\\CropIt.js",["516"],"import { useState, useRef } from \"react\";\r\n\r\nimport ImageCropDialog from \"./ImageCropDialog\";\r\n\r\nconst CropIt = (props) => {\r\n  const profile = props.default;\r\n\r\n  const inputFile = useRef();\r\n  const [display, setDisplay] = useState(profile.imageURL);\r\n  const [data, setData] = useState({\r\n    selectedImageURL: props.default.imageURL,\r\n    crop: null,\r\n    aspect: null,\r\n    zoom: null,\r\n    rotation: 0,\r\n    croppedImageURL: null,\r\n    fileType: null,\r\n  });\r\n  const [click, setClick] = useState(false);\r\n\r\n  const setCroppedImageFor = (id, crop, zoom, aspect, rotation, croppedImageURL) => {\r\n    setData((prev) => ({\r\n      ...prev,\r\n      crop,\r\n      zoom,\r\n      aspect,\r\n      rotation,\r\n      croppedImageURL,\r\n    }));\r\n    setClick(false);\r\n\r\n    // console.log(\"---> type of file selevctyeds\", data);\r\n\r\n    setDisplay(croppedImageURL);\r\n    // const img = new File([croppedImageURL], \"nameOfFile\", {\r\n    //   type: \"image/\" + data.fileType,\r\n    // });\r\n\r\n    // const img = new File([croppedImageURL], \"nameOfFile\", {\r\n    //   type: \"jpeg\",\r\n    // });\r\n\r\n    props.sendPic({\r\n      type: \"image/\" + data.fileType,\r\n      img: croppedImageURL,\r\n    });\r\n\r\n    // console.log(\"file of cropped image \", croppedImageURL);\r\n  };\r\n\r\n  const onCancel = () => {\r\n    // inputFile.current.files = null;\r\n    // console.log(inputFile.current.files);\r\n    setClick(false);\r\n  };\r\n\r\n  const resetImage = () => {\r\n    setData({\r\n      selectedImageURL: null,\r\n      crop: null,\r\n      aspect: null,\r\n      zoom: null,\r\n      croppedImageURL: null,\r\n    });\r\n\r\n    setDisplay(profile.imageURL);\r\n    setClick(false);\r\n  };\r\n\r\n  return (\r\n    <div className={props.parentDivClass ? props.parentDivClass : \"\"}>\r\n      <img\r\n        src={display}\r\n        alt=\"profile\"\r\n        className={props.className}\r\n        onClick={() => {\r\n          setClick(true);\r\n        }}\r\n      />\r\n\r\n      {click ? (\r\n        <ImageCropDialog\r\n          id={1}\r\n          imageURL={data.selectedImageURL}\r\n          cropInit={data.crop}\r\n          zoomInit={data.zoom}\r\n          aspectInit={props.aspect}\r\n          onCancel={onCancel}\r\n          rotationInit={data.rotation}\r\n          setCroppedImageFor={setCroppedImageFor}\r\n          resetImage={resetImage}\r\n          sendPic={props.sendPic}\r\n        />\r\n      ) : null}\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CropIt;\r\n","D:\\front-end\\src\\pages\\post\\CommentList.js",["517","518","519","520"],"import Card from \"../../UI/Card\";\r\nimport cardClass from \"./post.module.css\";\r\nimport classes from \"./commentList.module.css\";\r\nimport Comment from \"./Comment\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { commentsFeedURL, commentReactionURL } from \"../../URL/signUpURL\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { detailedPostActions } from \"../../Store/detailed-post-slice\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\n\r\nconst getComments = async (url, id, token, pageNo, dispatch, setHasMore, setLoading) => {\r\n  try {\r\n    setLoading(true);\r\n    const comments = await axios.post(\r\n      url,\r\n      { postID: id, page: pageNo },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (comments.data.comments.length < 7) {\r\n      setHasMore(false);\r\n    }\r\n\r\n    for (let x = 0; x < comments.data.comments.length; x++) {\r\n      let merger = { haveIUpvoted: false, haveIDownvoted: false };\r\n      if (comments.data.comments[x].reactions.length > 0) {\r\n        if (comments.data.comments[x].reactions[0].reaction == 1) {\r\n          merger.haveIUpvoted = true;\r\n        } else if (comments.data.comments[x].reactions[0].reaction == 0) {\r\n          merger.haveIDownvoted = true;\r\n        }\r\n\r\n        comments.data.comments[x] = { ...comments.data.comments[x], ...merger };\r\n      }\r\n      // this is for that like dislike count\r\n\r\n      if (comments.data.comments[x].likes.length < 1) {\r\n        comments.data.comments[x].likes = [{ count: 0 }];\r\n      }\r\n      if (comments.data.comments[x].dislikes.length < 1) {\r\n        comments.data.comments[x].dislikes = [{ count: 0 }];\r\n      }\r\n      if (comments.data.comments[x].repliesCnt.length < 1) {\r\n        comments.data.comments[x].repliesCnt = [{ count: 0 }];\r\n      }\r\n    }\r\n\r\n    dispatch(detailedPostActions.appendComments({ comments: comments.data.comments }));\r\n    setLoading(false);\r\n\r\n    // console.log(\"fetched comments \", comments.data);\r\n  } catch (err) {\r\n    console.log(\"err in fetching comments\");\r\n  }\r\n};\r\n\r\nconst reactComment = async (url, id, postID, token, reaction) => {\r\n  try {\r\n    await axios.post(\r\n      url,\r\n      { postID: postID, commentID: id, reaction: reaction },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n  } catch (err) {\r\n    console.error(\"err reacting on comments\");\r\n  }\r\n};\r\n\r\nconst CommentList = (props) => {\r\n  const [pageNo, setPageNo] = useState(0);\r\n  const dispatch = useDispatch();\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const comments = useSelector((state) => state.detailedPost.comments);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  useEffect(() => {\r\n    if (props.token && props.postID) {\r\n      // if (pageNo === 0) {\r\n      //   dispatch(detailedPostActions.resetComments());\r\n      // }\r\n      getComments(commentsFeedURL, props.postID, props.token, pageNo, dispatch, setHasMore, setLoading);\r\n    }\r\n  }, [props.postID, pageNo]);\r\n\r\n  const nextFunction = () => {\r\n    if (comments.length > 1) {\r\n      console.log(\"next fired\");\r\n      setPageNo((p) => p + 1);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Card custom={cardClass.card}>\r\n      <h1 className={classes.title}>Comments</h1>\r\n      <hr />\r\n      <div id=\"commentsList\" className={classes.commentsContainer}>\r\n        <InfiniteScroll dataLength={comments.length} next={nextFunction} hasMore={hasMore}>\r\n          {comments.length > 0 ? (\r\n            comments.map((e, i) => {\r\n              return (\r\n                <Comment\r\n                  loggedUser={props.loggedUser}\r\n                  usedAs=\"comment\"\r\n                  token={props.token}\r\n                  index={i}\r\n                  comment={e}\r\n                  key={e._id}\r\n                  reactComment={reactComment}\r\n                  postID={props.postID}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <div className={classes.noComments}>\r\n              <p>No comments</p>\r\n            </div>\r\n          )}\r\n        </InfiniteScroll>\r\n      </div>\r\n      <div className={classes.loader}>\r\n        <GuardSpinner color={\"#2ba272\"} loading={loading} />\r\n        {!hasMore && !loading && comments.length > 0 ? <p>END</p> : \"\"}\r\n      </div>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default CommentList;\r\n","D:\\front-end\\src\\UI\\gifPicker\\Gif.js",[],"D:\\front-end\\src\\pages\\post\\Comment.js",["521","522"],"import { Fragment, useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport classes from \"./comments.module.css\";\r\nimport { calculatePostTime } from \"./PostV2\";\r\nimport P from \"../../UI/P\";\r\nimport upvote from \"../../UI/imgs/upvote.svg\";\r\nimport upvoteGreen from \"../../UI/imgs/upvoteGreen.svg\";\r\nimport upvoteRed from \"../../UI/imgs/upvoteRed.svg\";\r\nimport upvoteFilled from \"../../UI/imgs/upvoteFilled.svg\";\r\nimport downvoteFilled from \"../../UI/imgs/downvoteFilled.svg\";\r\nimport arrow from \"../../UI/imgs/arrow.svg\";\r\nimport {\r\n  giphyFromIDURL,\r\n  commentReactionURL,\r\n  replyReactionURL,\r\n  deleteReplyURL,\r\n  deleteCommentURL,\r\n} from \"../../URL/signUpURL\";\r\nimport axios from \"axios\";\r\nimport RepliesList from \"./RepliesList\";\r\nimport ImageViewer from \"../../UI/ImageViewer\";\r\nimport deleteIcon from \"../../UI/imgs/delete.svg\";\r\nimport flagIcon from \"../../UI/imgs/flag.svg\";\r\nimport moreMenu from \"../../UI/imgs/moreMenu.svg\";\r\nimport close from \"../../UI/imgs/close2.svg\";\r\nimport { detailedPostActions } from \"../../Store/detailed-post-slice\";\r\n\r\nexport const fetchGif = async (url, id, setGif) => {\r\n  try {\r\n    const gif = await axios.get(url + id);\r\n    // console.log(gif.data.data[0].images.fixed_width_downsampled);\r\n    // setGif(gif.data.data[0].images.fixed_width_downsampled.url);\r\n\r\n    setGif({\r\n      still: gif.data.data[0].images.fixed_width_still.url,\r\n      play: gif.data.data[0].images.fixed_width_downsampled.url,\r\n    });\r\n  } catch (err) {\r\n    console.error(\"err fetchign gif\", err);\r\n  }\r\n};\r\n\r\nconst deleteReply = async (url, id, token) => {\r\n  try {\r\n    await axios.delete(url + id, {\r\n      headers: {\r\n        Authorization: \"Bearer \" + token,\r\n      },\r\n    });\r\n  } catch (err) {\r\n    console.error(\"error deleting reply ,\", err);\r\n  }\r\n};\r\n\r\nconst Comment = (props) => {\r\n  const comment = props.usedAs === \"reply\" ? props.reply : props.comment;\r\n\r\n  const author = comment.u_id;\r\n  const loggedUser = props.loggedUser;\r\n  const [postDate, setPostDate] = useState(calculatePostTime(comment.created_at));\r\n\r\n  const [gif, setGif] = useState();\r\n  const [gifState, setGifState] = useState(false);\r\n  const [mainImage, setMainImage] = useState(0);\r\n  const [view, setView] = useState(false);\r\n\r\n  const [showReplies, setShowReplies] = useState(false);\r\n  const [showMoreMenu, setShowMoreMenu] = useState(false);\r\n\r\n  const [upvoteSrc, setUpvoteSrc] = useState(comment.haveIUpvoted === true ? upvoteFilled : upvote);\r\n  const [downvoteSrc, setDownvoteSrc] = useState(comment.haveIDownvoted === true ? downvoteFilled : upvote);\r\n\r\n  const dispatch = useDispatch();\r\n  // useEffect(() => {\r\n  //   setPostDate(calculatePostTime(comment.created_at));\r\n  //   if (comment.gif) {\r\n  //     fetchGif(giphyFromIDURL, comment.gif, setGif);\r\n  //   }\r\n  // });\r\n  useEffect(() => {\r\n    if (comment.gif) {\r\n      fetchGif(giphyFromIDURL, comment.gif, setGif);\r\n    }\r\n  }, []);\r\n\r\n  let profile = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/default.png\";\r\n  if (author.profile) {\r\n    profile = \"https://wezo-media.s3.ap-south-1.amazonaws.com/users/profile/\" + author.profile.replace(\"$\", \"%24\");\r\n  }\r\n\r\n  let listOfImages;\r\n\r\n  if (comment.imgs.length > 0) {\r\n    listOfImages = comment.imgs.map((e) => {\r\n      return \"https://wezo-media.s3.ap-south-1.amazonaws.com/\" + e.replace(\"$\", \"%24\");\r\n    });\r\n  }\r\n\r\n  const gifClickHandler = () => {\r\n    setGifState((p) => !p);\r\n  };\r\n\r\n  const dotClickHandler = (indx) => {\r\n    setMainImage(indx);\r\n  };\r\n\r\n  const arrowLeftClickHandler = () => {\r\n    if (mainImage === 0) {\r\n      setMainImage(listOfImages.length - 1);\r\n    } else {\r\n      setMainImage((p) => p - 1);\r\n    }\r\n  };\r\n\r\n  const arrowRightClickHandler = () => {\r\n    if (mainImage === listOfImages.length - 1) {\r\n      setMainImage(0);\r\n    } else {\r\n      setMainImage((p) => p + 1);\r\n    }\r\n  };\r\n\r\n  const repliesHandler = () => {\r\n    if (props.usedAs === \"comment\") {\r\n      if (showReplies) {\r\n        dispatch(detailedPostActions.resetReplies({ id: props.index }));\r\n      }\r\n      setShowReplies((p) => !p);\r\n    }\r\n  };\r\n\r\n  const viewHandler = () => {\r\n    setView((p) => !p);\r\n  };\r\n\r\n  const moreMenuHandler = () => {\r\n    setShowMoreMenu((p) => !p);\r\n  };\r\n\r\n  const upvoteHandler = () => {\r\n    if (downvoteSrc === downvoteFilled) {\r\n      if (props.usedAs === \"comment\") {\r\n        dispatch(detailedPostActions.commentDownvote({ id: props.index, vote: -1 }));\r\n      } else if (props.usedAs === \"reply\") {\r\n        dispatch(\r\n          detailedPostActions.downvoteReply({ commentIndex: props.commentIndex, replyIndex: props.index, vote: -1 })\r\n        );\r\n      }\r\n      setDownvoteSrc(upvote);\r\n    }\r\n\r\n    let vote = 1;\r\n\r\n    if (upvoteSrc === upvoteFilled) {\r\n      vote = -1;\r\n    }\r\n    setUpvoteSrc((p) => {\r\n      if (p === upvoteFilled) {\r\n        return upvote;\r\n      } else {\r\n        return upvoteFilled;\r\n      }\r\n    });\r\n    if (props.usedAs === \"comment\") {\r\n      props.reactComment(commentReactionURL, comment._id, props.postID, props.token, 1);\r\n      dispatch(detailedPostActions.commentUpvote({ id: props.index, vote: vote }));\r\n    } else if (props.usedAs === \"reply\") {\r\n      props.reactReply(replyReactionURL, comment._id, props.commentID, props.postID, props.token, 1);\r\n      dispatch(\r\n        detailedPostActions.upvoteReply({ commentIndex: props.commentIndex, replyIndex: props.index, vote: vote })\r\n      );\r\n    }\r\n  };\r\n\r\n  const downvoteHandler = () => {\r\n    if (upvoteSrc === upvoteFilled) {\r\n      if (props.usedAs === \"comment\") {\r\n        dispatch(detailedPostActions.commentUpvote({ id: props.index, vote: -1 }));\r\n      } else if (props.usedAs === \"reply\") {\r\n        dispatch(\r\n          detailedPostActions.upvoteReply({ commentIndex: props.commentIndex, replyIndex: props.index, vote: -1 })\r\n        );\r\n      }\r\n      setUpvoteSrc(upvote);\r\n    }\r\n    let vote = 1;\r\n    if (downvoteSrc === downvoteFilled) {\r\n      vote = -1;\r\n    }\r\n\r\n    setDownvoteSrc((p) => {\r\n      if (p === downvoteFilled) {\r\n        return upvote;\r\n      } else {\r\n        return downvoteFilled;\r\n      }\r\n    });\r\n    if (props.usedAs === \"comment\") {\r\n      props.reactComment(commentReactionURL, comment._id, props.postID, props.token, 0);\r\n      dispatch(detailedPostActions.commentDownvote({ id: props.index, vote: vote }));\r\n    } else if (props.usedAs === \"reply\") {\r\n      props.reactReply(replyReactionURL, comment._id, props.commentID, props.postID, props.token, 0);\r\n      dispatch(\r\n        detailedPostActions.downvoteReply({ commentIndex: props.commentIndex, replyIndex: props.index, vote: vote })\r\n      );\r\n    }\r\n  };\r\n\r\n  const deleteHandler = () => {\r\n    if (props.usedAs === \"reply\") {\r\n      dispatch(detailedPostActions.deleteReply({ commentIndex: props.commentIndex, replyIndex: props.index }));\r\n      deleteReply(deleteReplyURL, comment._id, props.token);\r\n    } else if (props.usedAs === \"comment\") {\r\n      deleteReply(deleteCommentURL, comment._id, props.token);\r\n      dispatch(detailedPostActions.deleteComment({ commentIndex: props.index }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div className={`${classes.comment} ${props.usedAs === \"reply\" ? classes.reply : \"\"}`}>\r\n        <div className={classes.profile}>\r\n          <img src={profile} alt=\"\" />\r\n        </div>\r\n        <div className={classes.content}>\r\n          <div className={classes.head}>\r\n            <h1 className={classes.name}>{author.name}</h1>\r\n            <p className={classes.dot}>&#183;</p>\r\n            <h3 className={classes.userID}>@{author.userID}</h3>\r\n            <p className={classes.postDate}>{postDate}</p>\r\n          </div>\r\n          <div className={classes.message}>\r\n            <P\r\n              emoji={classes.emoji}\r\n              text={props.usedAs === \"reply\" ? comment.reply : comment.comment}\r\n              className={classes.actualComment}\r\n            ></P>\r\n          </div>\r\n          {gif ? (\r\n            <div className={`${classes.imageSection} ${classes.gifSection}`} onClick={gifClickHandler}>\r\n              <img className={classes.gif} src={gifState ? gif.play : gif.still} alt=\"\" />\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n          {comment.imgs.length > 0 ? (\r\n            <div className={classes.imageSection}>\r\n              <img className={`${classes.image}`} src={listOfImages[mainImage]} alt=\"post pic\" onClick={viewHandler} />\r\n              {listOfImages.length > 1 ? (\r\n                <Fragment>\r\n                  <img\r\n                    onClick={arrowRightClickHandler}\r\n                    className={` ${classes.rightArrow} ${classes.arrow}`}\r\n                    src={arrow}\r\n                    alt=\"click to see next pic\"\r\n                  />\r\n                  <img\r\n                    onClick={arrowLeftClickHandler}\r\n                    className={`${classes.leftArrow} ${classes.arrow}`}\r\n                    src={arrow}\r\n                    alt=\"click to see next pic\"\r\n                  />\r\n                  <div className={classes.dotContainer}>\r\n                    {listOfImages.map((img, indx) => {\r\n                      return (\r\n                        <div\r\n                          key={indx}\r\n                          className={`${classes.dott} ${mainImage === indx ? classes.dotActive : \"\"}`}\r\n                          onClick={() => {\r\n                            dotClickHandler(indx);\r\n                          }}\r\n                        ></div>\r\n                      );\r\n                    })}\r\n                  </div>\r\n                </Fragment>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n\r\n          <div className={classes.reactionsDiv}>\r\n            <div className={classes.reaction}>\r\n              <img\r\n                className={classes.upvote}\r\n                onClick={upvoteHandler}\r\n                src={upvoteSrc}\r\n                alt=\"upvote\"\r\n                onMouseOver={(e) => (upvoteSrc === upvoteFilled ? \"\" : (e.currentTarget.src = upvoteGreen))}\r\n                onMouseLeave={(e) => (e.currentTarget.src = upvoteSrc)}\r\n              />\r\n\r\n              <p style={{ color: upvoteSrc === upvoteFilled ? \"#2ba272\" : \"\" }} className={classes.reactTxt}>\r\n                {comment.likes[0].count}\r\n              </p>\r\n            </div>\r\n\r\n            <div className={`${classes.reaction} ${classes.downvoteDiv}`}>\r\n              <img\r\n                className={classes.downvote}\r\n                onClick={downvoteHandler}\r\n                src={downvoteSrc}\r\n                alt=\"downvote\"\r\n                onMouseOver={(e) => (downvoteSrc === downvoteFilled ? \"\" : (e.currentTarget.src = upvoteRed))}\r\n                onMouseLeave={(e) => (e.currentTarget.src = downvoteSrc)}\r\n              />\r\n\r\n              <p style={{ color: downvoteSrc === downvoteFilled ? \"#F91880\" : \"\" }} className={classes.reactTxt}>\r\n                {comment.dislikes[0].count}\r\n              </p>\r\n            </div>\r\n            <p className={classes.replies} onClick={repliesHandler}>\r\n              {props.usedAs === \"comment\"\r\n                ? showReplies\r\n                  ? \"Hide Replies\"\r\n                  : comment.repliesCnt.length > 0\r\n                  ? \"REPLIES \" + comment.repliesCnt[0].count\r\n                  : \"REPLIES \" + 0\r\n                : \"REPLY\"}\r\n            </p>\r\n            <div className={classes.moreMenu}>\r\n              <img\r\n                className={classes.moreIcon}\r\n                onClick={moreMenuHandler}\r\n                src={showMoreMenu ? close : moreMenu}\r\n                alt=\"\"\r\n              />\r\n              {showMoreMenu ? (\r\n                <div className={classes.floatingMenu}>\r\n                  {author.userID === loggedUser.userID ? (\r\n                    <div className={classes.menuItem} onClick={deleteHandler}>\r\n                      <img src={deleteIcon} alt=\"\" /> <p>delete</p>\r\n                    </div>\r\n                  ) : (\r\n                    \"\"\r\n                  )}\r\n                  <div className={classes.menuItem}>\r\n                    <img src={flagIcon} alt=\"\" /> <p>flag</p>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                \"\"\r\n              )}\r\n            </div>\r\n          </div>\r\n          {showReplies ? (\r\n            <RepliesList\r\n              key={comment._id}\r\n              index={props.index}\r\n              token={props.token}\r\n              commentID={comment._id}\r\n              postID={props.postID}\r\n            />\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </div>\r\n      </div>\r\n      {view ? <ImageViewer default={mainImage} viewHandler={viewHandler} images={listOfImages} /> : \"\"}\r\n      <hr className={classes.hr} />\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nexport default Comment;\r\n","D:\\front-end\\src\\pages\\Profile\\V2\\BuiltWith.js",["523","524"],"import classes from \"./projectPatch.module.css\";\r\n// import { useHorizontalScroll } from \"../useSideScroll\";\r\nimport { useEffect, useRef, useState } from \"react\";\r\n\r\nfunction useHorizontalScroll2() {\r\n  const elRef = useRef();\r\n  useEffect(() => {\r\n    const el = elRef.current;\r\n\r\n    if (el) {\r\n      const onWheel = (e) => {\r\n        if (e.deltaY == 0) return;\r\n        e.preventDefault();\r\n        el.scrollTo({\r\n          left: el.scrollLeft + e.deltaY * 4,\r\n          behavior: \"smooth\",\r\n        });\r\n      };\r\n\r\n      el.addEventListener(\"wheel\", onWheel);\r\n      return () => el.removeEventListener(\"wheel\", onWheel);\r\n    }\r\n  }, []);\r\n  return elRef;\r\n}\r\n\r\nconst BuiltWith = (props) => {\r\n  const builtArray = props.builtWith;\r\n  const scrollRef = useHorizontalScroll2();\r\n  return (\r\n    <div className={classes.techContainer} ref={scrollRef}>\r\n      {builtArray.map((el, i) => {\r\n        return (\r\n          <div key={i} className={classes.techCard}>\r\n            <img\r\n              onError={(e) => (e.target.src = \"/images/skill.svg\")}\r\n              src={\"https://wezo-media.s3.ap-south-1.amazonaws.com/icons/\" + el.toLowerCase() + \".svg\"}\r\n              alt=\"\"\r\n            />\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BuiltWith;\r\n","D:\\front-end\\src\\UI\\cropper\\cropImage.js",["525"],"const createImage = (url) =>\r\n  new Promise((resolve, reject) => {\r\n    const image = new Image();\r\n    image.addEventListener(\"load\", () => resolve(image));\r\n    image.addEventListener(\"error\", (error) => reject(error));\r\n    image.setAttribute(\"crossOrigin\", \"anonymous\"); // needed to avoid cross-origin issues on CodeSandbox\r\n    image.src = url;\r\n  });\r\n\r\nfunction getRadianAngle(degreeValue) {\r\n  return (degreeValue * Math.PI) / 180;\r\n}\r\n\r\n/**\r\n * This function was adapted from the one in the ReadMe of https://github.com/DominicTobias/react-image-crop\r\n * @param {File} image - Image File url\r\n * @param {Object} pixelCrop - pixelCrop Object provided by react-easy-crop\r\n * @param {number} rotation - optional rotation parameter\r\n */\r\nexport default async function getCroppedImg(imageSrc, pixelCrop, rotation = 0) {\r\n  const image = await createImage(imageSrc);\r\n  const canvas = document.createElement(\"canvas\");\r\n  const ctx = canvas.getContext(\"2d\");\r\n\r\n  const maxSize = Math.max(image.width, image.height);\r\n  const safeArea = 2 * ((maxSize / 2) * Math.sqrt(2));\r\n\r\n  // set each dimensions to double largest dimension to allow for a safe area for the\r\n  // image to rotate in without being clipped by canvas context\r\n  canvas.width = safeArea;\r\n  canvas.height = safeArea;\r\n\r\n  // translate canvas context to a central location on image to allow rotating around the center.\r\n  ctx.translate(safeArea / 2, safeArea / 2);\r\n  ctx.rotate(getRadianAngle(rotation));\r\n  ctx.translate(-safeArea / 2, -safeArea / 2);\r\n\r\n  // draw rotated image and store data.\r\n  ctx.drawImage(\r\n    image,\r\n    safeArea / 2 - image.width * 0.5,\r\n    safeArea / 2 - image.height * 0.5\r\n  );\r\n  const data = ctx.getImageData(0, 0, safeArea, safeArea);\r\n\r\n  // set canvas width to final desired crop size - this will clear existing context\r\n  canvas.width = pixelCrop.width;\r\n  canvas.height = pixelCrop.height;\r\n\r\n  // paste generated rotate image with correct offsets for x,y crop values.\r\n  ctx.putImageData(\r\n    data,\r\n    Math.round(0 - safeArea / 2 + image.width * 0.5 - pixelCrop.x),\r\n    Math.round(0 - safeArea / 2 + image.height * 0.5 - pixelCrop.y)\r\n  );\r\n\r\n  // As Base64 string\r\n  return canvas.toDataURL(\"image/jpeg\");\r\n\r\n  // As a blob\r\n  return new Promise((resolve) => {\r\n    canvas.toBlob((file) => {\r\n      console.log(file);\r\n      resolve(URL.createObjectURL(file));\r\n    }, \"image/jpeg\");\r\n  });\r\n}\r\n","D:\\front-end\\src\\pages\\post\\RepliesList.js",["526","527","528"],"import classes from \"./repliesList.module.css\";\r\n\r\nimport AddComment from \"./AddComment\";\r\nimport Comment from \"./Comment\";\r\nimport { getRepliesURL } from \"../../URL/signUpURL\";\r\nimport { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { detailedPostActions } from \"../../Store/detailed-post-slice\";\r\nimport InfiniteScroll from \"react-infinite-scroll-component\";\r\nimport { GuardSpinner } from \"react-spinners-kit\";\r\n\r\nconst fetchReplies = async (url, id, token, pageNO, dispatch, index, setLoading, setHasMore) => {\r\n  try {\r\n    const replies = await axios.post(\r\n      url,\r\n      { commentID: id, page: pageNO },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n\r\n    if (replies.data.replies.length < 7) {\r\n      setHasMore(false);\r\n    }\r\n\r\n    for (let x = 0; x < replies.data.replies.length; x++) {\r\n      let merger = { haveIUpvoted: false, haveIDownvoted: false };\r\n      if (replies.data.replies[x].reactions.length > 0) {\r\n        if (replies.data.replies[x].reactions[0].reaction == 1) {\r\n          merger.haveIUpvoted = true;\r\n        } else if (replies.data.replies[x].reactions[0].reaction == 0) {\r\n          merger.haveIDownvoted = true;\r\n        }\r\n\r\n        replies.data.replies[x] = { ...replies.data.replies[x], ...merger };\r\n      }\r\n\r\n      // this is for that like dislike count\r\n\r\n      if (replies.data.replies[x].likes.length < 1) {\r\n        replies.data.replies[x].likes = [{ count: 0 }];\r\n      }\r\n      if (replies.data.replies[x].dislikes.length < 1) {\r\n        replies.data.replies[x].dislikes = [{ count: 0 }];\r\n      }\r\n    }\r\n\r\n    dispatch(detailedPostActions.appendReplies({ id: index, replies: replies.data.replies }));\r\n    setLoading(false);\r\n\r\n    // console.log(\"replies are here\", replies.data.replies);\r\n  } catch (err) {\r\n    console.error(\"err fetching replies\");\r\n  }\r\n};\r\nconst reactReply = async (url, id, commentID, postID, token, reaction) => {\r\n  try {\r\n    await axios.post(\r\n      url,\r\n      { postID: postID, replyID: id, reaction: reaction, commentID: commentID },\r\n      {\r\n        headers: {\r\n          Authorization: \"Bearer \" + token,\r\n        },\r\n      }\r\n    );\r\n  } catch (err) {\r\n    console.error(\"err reacting on comments\");\r\n  }\r\n};\r\n\r\nconst RepliesList = (props) => {\r\n  const [pageNo, setPageNo] = useState(0);\r\n  const [loading, setLoading] = useState(true);\r\n  const dispatch = useDispatch();\r\n  const [hasMore, setHasMore] = useState(true);\r\n  const comment = useSelector((state) => state.detailedPost.comments[props.index]);\r\n  const loggedUser = useSelector((state) => state.user.userObj);\r\n\r\n  useEffect(() => {\r\n    if (props.token) {\r\n      fetchReplies(getRepliesURL, props.commentID, props.token, pageNo, dispatch, props.index, setLoading, setHasMore);\r\n    }\r\n  }, [pageNo]);\r\n\r\n  if (loading) {\r\n    return (\r\n      <div className={classes.loader}>\r\n        <GuardSpinner color={\"#2ba272\"} loading={loading} />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  // if (comment.replies.length < 1) {\r\n  //   return <div>no replies</div>;\r\n  // }\r\n\r\n  const nextFunction = () => {\r\n    setPageNo((p) => p + 1);\r\n  };\r\n\r\n  let listOfReplies;\r\n  if (comment.replies) {\r\n    listOfReplies = [...comment.replies];\r\n  }\r\n  console.log(\"ok the comment from reply list\", comment);\r\n\r\n  return (\r\n    <div className={classes.replyList}>\r\n      <div id=\"listOfReplies\" className={classes.repliesScroll}>\r\n        <InfiniteScroll\r\n          scrollableTarget=\"listOfReplies\"\r\n          dataLength={listOfReplies.length}\r\n          next={nextFunction}\r\n          hasMore={hasMore}\r\n        >\r\n          {listOfReplies.length > 0 ? (\r\n            listOfReplies.map((e, i) => {\r\n              return (\r\n                <Comment\r\n                  usedAs=\"reply\"\r\n                  loggedUser={loggedUser}\r\n                  token={props.token}\r\n                  index={i}\r\n                  reply={e}\r\n                  key={e._id}\r\n                  commentID={props.commentID}\r\n                  postID={props.postID}\r\n                  reactReply={reactReply}\r\n                  commentIndex={props.index}\r\n                />\r\n              );\r\n            })\r\n          ) : (\r\n            <div className={classes.noReply}>\r\n              <p>No replies</p>\r\n            </div>\r\n          )}\r\n\r\n          {!hasMore && listOfReplies.length > 0 ? (\r\n            <div className={`${classes.loader} ${classes.end}`}>{!loading ? <p>END</p> : \"\"}</div>\r\n          ) : (\r\n            \"\"\r\n          )}\r\n        </InfiniteScroll>\r\n      </div>\r\n\r\n      {!loading ? (\r\n        <AddComment\r\n          index={props.index}\r\n          usedAs=\"addReply\"\r\n          token={props.token}\r\n          commentID={comment._id}\r\n          loggedUser={loggedUser}\r\n          postID={props.postID}\r\n        />\r\n      ) : (\r\n        \"\"\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RepliesList;\r\n","D:\\front-end\\src\\pages\\Chat\\SidebarChat.js",[],"D:\\front-end\\src\\pages\\Chat\\Chats.js",[],"D:\\front-end\\src\\pages\\Chat\\ChatBox.js",["529"],"import React from \"react\";\r\nimport \"./ChatBox.css\";\r\n// import Chat_input from \"./Chat_input\";\r\nimport Message from \"./Message\";\r\nimport { UploadIcon } from \"@heroicons/react/solid\";\r\nimport Message_sender from \"./Message_sender\";\r\n\r\nfunction ChatBox() {\r\n  return (\r\n    <div className=\"Chatbox\">\r\n      <div className=\"chat__header\">\r\n        <img\r\n          //   src=\"https://lh3.googleusercontent.com/9WkSu8CP7gZjaEmUy8cpaKG3mK6ScHeEDvQf8driDoRxuxy4GPAs_W_Dn_DQascQSGDkdUL4cjmsnRrL6xN-NDp-s_RNwN5pxiCo\"\r\n          src=\"https://th.bing.com/th/id/OIP.iv2-uXBj25t8Stl9c0kCiQHaHa?pid=ImgDet&rs=1\"\r\n          alt=\"\"\r\n          className=\"profile__image\"\r\n        />\r\n        <h4>\r\n          <span className=\"chat__name\">Henry Ford</span>\r\n        </h4>\r\n        {/* <strong>Details</strong> */}\r\n      </div>\r\n\r\n      {/* chat messagea  */}\r\n\r\n      <div className=\"chat__messages\">\r\n        {/* <FlipMove>\r\n          {messages.map(({ id, data }) => (\r\n            <Message key={id} contents={data} />\r\n          ))}\r\n        </FlipMove> */}\r\n        <Message />\r\n        {/* <Message /> */}\r\n        <Message_sender />\r\n        {/* <Message />\r\n        <Message /> */}\r\n      </div>\r\n      {/* <Chat_input /> */}\r\n      <div className=\"chat__input\">\r\n        <form>\r\n          <input\r\n            // value={input}\r\n            // onChange={(e) => setInput(e.target.value)}\r\n            placeholder=\"Type in your message\"\r\n            type=\"text\"\r\n          >\r\n            {/* <UploadIcon /> */}\r\n          </input>\r\n          <button\r\n          //   onClick={sendMessage}\r\n          >\r\n            Send Messages\r\n          </button>\r\n        </form>\r\n        <div className=\"chatbox__icons\">\r\n          <UploadIcon className=\"icons\" />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatBox;\r\n","D:\\front-end\\src\\pages\\Chat\\Message.js",[],"D:\\front-end\\src\\pages\\Chat\\Message_sender.js",[],"D:\\front-end\\src\\pages\\Chat\\Chat_input.js",[],"D:\\front-end\\src\\pages\\Chat\\SidebarRight.js",[],{"ruleId":"530","replacedBy":"531"},{"ruleId":"532","replacedBy":"533"},{"ruleId":"534","severity":1,"message":"535","line":13,"column":8,"nodeType":"536","messageId":"537","endLine":13,"endColumn":15},{"ruleId":"534","severity":1,"message":"538","line":23,"column":8,"nodeType":"536","messageId":"537","endLine":23,"endColumn":14},{"ruleId":"534","severity":1,"message":"539","line":58,"column":9,"nodeType":"536","messageId":"537","endLine":58,"endColumn":16},{"ruleId":"534","severity":1,"message":"540","line":6,"column":10,"nodeType":"536","messageId":"537","endLine":6,"endColumn":24},{"ruleId":"534","severity":1,"message":"541","line":39,"column":10,"nodeType":"536","messageId":"537","endLine":39,"endColumn":13},{"ruleId":"534","severity":1,"message":"542","line":39,"column":15,"nodeType":"536","messageId":"537","endLine":39,"endColumn":21},{"ruleId":"543","severity":1,"message":"544","line":57,"column":6,"nodeType":"545","endLine":57,"endColumn":19,"suggestions":"546"},{"ruleId":"534","severity":1,"message":"547","line":59,"column":9,"nodeType":"536","messageId":"537","endLine":59,"endColumn":15},{"ruleId":"534","severity":1,"message":"548","line":85,"column":13,"nodeType":"536","messageId":"537","endLine":85,"endColumn":17},{"ruleId":"534","severity":1,"message":"549","line":5,"column":10,"nodeType":"536","messageId":"537","endLine":5,"endColumn":16},{"ruleId":"550","severity":1,"message":"551","line":43,"column":38,"nodeType":"552","messageId":"553","endLine":43,"endColumn":40},{"ruleId":"550","severity":1,"message":"551","line":74,"column":38,"nodeType":"552","messageId":"553","endLine":74,"endColumn":40},{"ruleId":"550","severity":1,"message":"551","line":97,"column":36,"nodeType":"552","messageId":"553","endLine":97,"endColumn":38},{"ruleId":"550","severity":1,"message":"551","line":114,"column":36,"nodeType":"552","messageId":"553","endLine":114,"endColumn":38},{"ruleId":"534","severity":1,"message":"554","line":2,"column":10,"nodeType":"536","messageId":"537","endLine":2,"endColumn":13},{"ruleId":"550","severity":1,"message":"551","line":43,"column":38,"nodeType":"552","messageId":"553","endLine":43,"endColumn":40},{"ruleId":"550","severity":1,"message":"551","line":74,"column":38,"nodeType":"552","messageId":"553","endLine":74,"endColumn":40},{"ruleId":"550","severity":1,"message":"551","line":97,"column":36,"nodeType":"552","messageId":"553","endLine":97,"endColumn":38},{"ruleId":"550","severity":1,"message":"551","line":114,"column":36,"nodeType":"552","messageId":"553","endLine":114,"endColumn":38},{"ruleId":"534","severity":1,"message":"555","line":7,"column":23,"nodeType":"536","messageId":"537","endLine":7,"endColumn":34},{"ruleId":"534","severity":1,"message":"556","line":1,"column":8,"nodeType":"536","messageId":"537","endLine":1,"endColumn":12},{"ruleId":"534","severity":1,"message":"557","line":2,"column":8,"nodeType":"536","messageId":"537","endLine":2,"endColumn":15},{"ruleId":"534","severity":1,"message":"558","line":4,"column":10,"nodeType":"536","messageId":"537","endLine":4,"endColumn":18},{"ruleId":"534","severity":1,"message":"559","line":10,"column":8,"nodeType":"536","messageId":"537","endLine":10,"endColumn":16},{"ruleId":"534","severity":1,"message":"560","line":11,"column":10,"nodeType":"536","messageId":"537","endLine":11,"endColumn":16},{"ruleId":"534","severity":1,"message":"561","line":11,"column":18,"nodeType":"536","messageId":"537","endLine":11,"endColumn":23},{"ruleId":"534","severity":1,"message":"557","line":8,"column":8,"nodeType":"536","messageId":"537","endLine":8,"endColumn":15},{"ruleId":"534","severity":1,"message":"562","line":18,"column":10,"nodeType":"536","messageId":"537","endLine":18,"endColumn":17},{"ruleId":"534","severity":1,"message":"563","line":1,"column":8,"nodeType":"536","messageId":"537","endLine":1,"endColumn":13},{"ruleId":"534","severity":1,"message":"564","line":2,"column":10,"nodeType":"536","messageId":"537","endLine":2,"endColumn":21},{"ruleId":"550","severity":1,"message":"565","line":35,"column":13,"nodeType":"552","messageId":"553","endLine":35,"endColumn":15},{"ruleId":"534","severity":1,"message":"566","line":141,"column":13,"nodeType":"536","messageId":"537","endLine":141,"endColumn":16},{"ruleId":"567","severity":1,"message":"568","line":221,"column":33,"nodeType":"569","messageId":"570","endLine":221,"endColumn":35},{"ruleId":"534","severity":1,"message":"571","line":20,"column":10,"nodeType":"536","messageId":"537","endLine":20,"endColumn":18},{"ruleId":"534","severity":1,"message":"572","line":20,"column":20,"nodeType":"536","messageId":"537","endLine":20,"endColumn":31},{"ruleId":"534","severity":1,"message":"573","line":1,"column":8,"nodeType":"536","messageId":"537","endLine":1,"endColumn":18},{"ruleId":"534","severity":1,"message":"574","line":4,"column":8,"nodeType":"536","messageId":"537","endLine":4,"endColumn":11},{"ruleId":"534","severity":1,"message":"575","line":5,"column":17,"nodeType":"536","messageId":"537","endLine":5,"endColumn":27},{"ruleId":"534","severity":1,"message":"576","line":5,"column":29,"nodeType":"536","messageId":"537","endLine":5,"endColumn":33},{"ruleId":"534","severity":1,"message":"577","line":5,"column":35,"nodeType":"536","messageId":"537","endLine":5,"endColumn":44},{"ruleId":"534","severity":1,"message":"578","line":6,"column":8,"nodeType":"536","messageId":"537","endLine":6,"endColumn":15},{"ruleId":"534","severity":1,"message":"579","line":22,"column":9,"nodeType":"536","messageId":"537","endLine":22,"endColumn":23},{"ruleId":"534","severity":1,"message":"580","line":41,"column":9,"nodeType":"536","messageId":"537","endLine":41,"endColumn":26},{"ruleId":"534","severity":1,"message":"575","line":5,"column":17,"nodeType":"536","messageId":"537","endLine":5,"endColumn":27},{"ruleId":"534","severity":1,"message":"576","line":5,"column":29,"nodeType":"536","messageId":"537","endLine":5,"endColumn":33},{"ruleId":"534","severity":1,"message":"581","line":16,"column":8,"nodeType":"536","messageId":"537","endLine":16,"endColumn":17},{"ruleId":"534","severity":1,"message":"582","line":17,"column":8,"nodeType":"536","messageId":"537","endLine":17,"endColumn":16},{"ruleId":"534","severity":1,"message":"583","line":19,"column":8,"nodeType":"536","messageId":"537","endLine":19,"endColumn":18},{"ruleId":"534","severity":1,"message":"584","line":93,"column":10,"nodeType":"536","messageId":"537","endLine":93,"endColumn":16},{"ruleId":"543","severity":1,"message":"585","line":101,"column":3,"nodeType":"536","endLine":101,"endColumn":12,"suggestions":"586"},{"ruleId":"543","severity":1,"message":"587","line":123,"column":6,"nodeType":"545","endLine":123,"endColumn":25,"suggestions":"588"},{"ruleId":"534","severity":1,"message":"589","line":1,"column":8,"nodeType":"536","messageId":"537","endLine":1,"endColumn":14},{"ruleId":"534","severity":1,"message":"549","line":2,"column":20,"nodeType":"536","messageId":"537","endLine":2,"endColumn":26},{"ruleId":"534","severity":1,"message":"575","line":4,"column":17,"nodeType":"536","messageId":"537","endLine":4,"endColumn":27},{"ruleId":"534","severity":1,"message":"576","line":4,"column":29,"nodeType":"536","messageId":"537","endLine":4,"endColumn":33},{"ruleId":"534","severity":1,"message":"577","line":4,"column":35,"nodeType":"536","messageId":"537","endLine":4,"endColumn":44},{"ruleId":"534","severity":1,"message":"576","line":5,"column":19,"nodeType":"536","messageId":"537","endLine":5,"endColumn":23},{"ruleId":"590","severity":1,"message":"591","line":101,"column":11,"nodeType":"592","endLine":101,"endColumn":58},{"ruleId":"590","severity":1,"message":"591","line":106,"column":11,"nodeType":"592","endLine":106,"endColumn":58},{"ruleId":"534","severity":1,"message":"593","line":2,"column":10,"nodeType":"536","messageId":"537","endLine":2,"endColumn":21},{"ruleId":"534","severity":1,"message":"594","line":2,"column":10,"nodeType":"536","messageId":"537","endLine":2,"endColumn":21},{"ruleId":"534","severity":1,"message":"595","line":2,"column":10,"nodeType":"536","messageId":"537","endLine":2,"endColumn":21},{"ruleId":"534","severity":1,"message":"596","line":8,"column":10,"nodeType":"536","messageId":"537","endLine":8,"endColumn":22},{"ruleId":"550","severity":1,"message":"551","line":29,"column":53,"nodeType":"552","messageId":"553","endLine":29,"endColumn":55},{"ruleId":"550","severity":1,"message":"551","line":31,"column":60,"nodeType":"552","messageId":"553","endLine":31,"endColumn":62},{"ruleId":"534","severity":1,"message":"562","line":61,"column":10,"nodeType":"536","messageId":"537","endLine":61,"endColumn":17},{"ruleId":"543","severity":1,"message":"597","line":72,"column":6,"nodeType":"545","endLine":72,"endColumn":19,"suggestions":"598"},{"ruleId":"534","severity":1,"message":"599","line":75,"column":9,"nodeType":"536","messageId":"537","endLine":75,"endColumn":15},{"ruleId":"534","severity":1,"message":"547","line":77,"column":9,"nodeType":"536","messageId":"537","endLine":77,"endColumn":15},{"ruleId":"534","severity":1,"message":"600","line":114,"column":9,"nodeType":"536","messageId":"537","endLine":114,"endColumn":26},{"ruleId":"534","severity":1,"message":"601","line":4,"column":8,"nodeType":"536","messageId":"537","endLine":4,"endColumn":16},{"ruleId":"534","severity":1,"message":"602","line":7,"column":10,"nodeType":"536","messageId":"537","endLine":7,"endColumn":21},{"ruleId":"534","severity":1,"message":"560","line":7,"column":42,"nodeType":"536","messageId":"537","endLine":7,"endColumn":48},{"ruleId":"534","severity":1,"message":"576","line":7,"column":50,"nodeType":"536","messageId":"537","endLine":7,"endColumn":54},{"ruleId":"534","severity":1,"message":"577","line":7,"column":56,"nodeType":"536","messageId":"537","endLine":7,"endColumn":65},{"ruleId":"550","severity":1,"message":"551","line":32,"column":61,"nodeType":"552","messageId":"553","endLine":32,"endColumn":63},{"ruleId":"550","severity":1,"message":"551","line":34,"column":68,"nodeType":"552","messageId":"553","endLine":34,"endColumn":70},{"ruleId":"567","severity":1,"message":"603","line":72,"column":31,"nodeType":"569","messageId":"570","endLine":72,"endColumn":33},{"ruleId":"543","severity":1,"message":"604","line":114,"column":6,"nodeType":"545","endLine":114,"endColumn":27,"suggestions":"605"},{"ruleId":"543","severity":1,"message":"606","line":78,"column":6,"nodeType":"545","endLine":78,"endColumn":25,"suggestions":"607"},{"ruleId":"534","severity":1,"message":"601","line":3,"column":8,"nodeType":"536","messageId":"537","endLine":3,"endColumn":16},{"ruleId":"534","severity":1,"message":"593","line":6,"column":10,"nodeType":"536","messageId":"537","endLine":6,"endColumn":21},{"ruleId":"534","severity":1,"message":"539","line":13,"column":9,"nodeType":"536","messageId":"537","endLine":13,"endColumn":16},{"ruleId":"534","severity":1,"message":"608","line":6,"column":10,"nodeType":"536","messageId":"537","endLine":6,"endColumn":15},{"ruleId":"534","severity":1,"message":"609","line":6,"column":17,"nodeType":"536","messageId":"537","endLine":6,"endColumn":25},{"ruleId":"534","severity":1,"message":"610","line":7,"column":8,"nodeType":"536","messageId":"537","endLine":7,"endColumn":16},{"ruleId":"534","severity":1,"message":"611","line":6,"column":8,"nodeType":"536","messageId":"537","endLine":6,"endColumn":23},{"ruleId":"534","severity":1,"message":"612","line":7,"column":8,"nodeType":"536","messageId":"537","endLine":7,"endColumn":21},{"ruleId":"543","severity":1,"message":"613","line":17,"column":6,"nodeType":"545","endLine":17,"endColumn":15,"suggestions":"614"},{"ruleId":"543","severity":1,"message":"615","line":44,"column":6,"nodeType":"545","endLine":44,"endColumn":8,"suggestions":"616"},{"ruleId":"534","severity":1,"message":"617","line":15,"column":10,"nodeType":"536","messageId":"537","endLine":15,"endColumn":24},{"ruleId":"534","severity":1,"message":"618","line":21,"column":10,"nodeType":"536","messageId":"537","endLine":21,"endColumn":18},{"ruleId":"534","severity":1,"message":"539","line":32,"column":9,"nodeType":"536","messageId":"537","endLine":32,"endColumn":16},{"ruleId":"534","severity":1,"message":"561","line":3,"column":10,"nodeType":"536","messageId":"537","endLine":3,"endColumn":15},{"ruleId":"534","severity":1,"message":"576","line":3,"column":29,"nodeType":"536","messageId":"537","endLine":3,"endColumn":33},{"ruleId":"534","severity":1,"message":"539","line":70,"column":9,"nodeType":"536","messageId":"537","endLine":70,"endColumn":16},{"ruleId":"550","severity":1,"message":"565","line":94,"column":31,"nodeType":"552","messageId":"553","endLine":94,"endColumn":33},{"ruleId":"543","severity":1,"message":"619","line":97,"column":6,"nodeType":"545","endLine":97,"endColumn":19,"suggestions":"620"},{"ruleId":"534","severity":1,"message":"621","line":119,"column":5,"nodeType":"536","messageId":"537","endLine":119,"endColumn":10},{"ruleId":"534","severity":1,"message":"621","line":158,"column":5,"nodeType":"536","messageId":"537","endLine":158,"endColumn":10},{"ruleId":"534","severity":1,"message":"622","line":4,"column":20,"nodeType":"536","messageId":"537","endLine":4,"endColumn":29},{"ruleId":"534","severity":1,"message":"623","line":10,"column":8,"nodeType":"536","messageId":"537","endLine":10,"endColumn":14},{"ruleId":"534","severity":1,"message":"624","line":22,"column":3,"nodeType":"536","messageId":"537","endLine":22,"endColumn":17},{"ruleId":"534","severity":1,"message":"593","line":29,"column":10,"nodeType":"536","messageId":"537","endLine":29,"endColumn":21},{"ruleId":"534","severity":1,"message":"540","line":30,"column":10,"nodeType":"536","messageId":"537","endLine":30,"endColumn":24},{"ruleId":"534","severity":1,"message":"625","line":34,"column":8,"nodeType":"536","messageId":"537","endLine":34,"endColumn":9},{"ruleId":"534","severity":1,"message":"626","line":35,"column":8,"nodeType":"536","messageId":"537","endLine":35,"endColumn":17},{"ruleId":"534","severity":1,"message":"627","line":38,"column":5,"nodeType":"536","messageId":"537","endLine":38,"endColumn":7},{"ruleId":"534","severity":1,"message":"628","line":40,"column":10,"nodeType":"536","messageId":"537","endLine":40,"endColumn":22},{"ruleId":"534","severity":1,"message":"629","line":56,"column":16,"nodeType":"536","messageId":"537","endLine":56,"endColumn":30},{"ruleId":"534","severity":1,"message":"630","line":94,"column":10,"nodeType":"536","messageId":"537","endLine":94,"endColumn":14},{"ruleId":"534","severity":1,"message":"631","line":183,"column":5,"nodeType":"536","messageId":"537","endLine":183,"endColumn":12},{"ruleId":"534","severity":1,"message":"632","line":330,"column":11,"nodeType":"536","messageId":"537","endLine":330,"endColumn":29},{"ruleId":"534","severity":1,"message":"633","line":488,"column":15,"nodeType":"536","messageId":"537","endLine":488,"endColumn":19},{"ruleId":"567","severity":1,"message":"634","line":646,"column":17,"nodeType":"635","messageId":"636","endLine":646,"endColumn":24},{"ruleId":"534","severity":1,"message":"637","line":4,"column":8,"nodeType":"536","messageId":"537","endLine":4,"endColumn":17},{"ruleId":"534","severity":1,"message":"596","line":6,"column":10,"nodeType":"536","messageId":"537","endLine":6,"endColumn":22},{"ruleId":"550","severity":1,"message":"551","line":49,"column":53,"nodeType":"552","messageId":"553","endLine":49,"endColumn":55},{"ruleId":"550","severity":1,"message":"551","line":51,"column":60,"nodeType":"552","messageId":"553","endLine":51,"endColumn":62},{"ruleId":"534","severity":1,"message":"562","line":83,"column":10,"nodeType":"536","messageId":"537","endLine":83,"endColumn":17},{"ruleId":"543","severity":1,"message":"638","line":112,"column":6,"nodeType":"545","endLine":112,"endColumn":25,"suggestions":"639"},{"ruleId":"534","severity":1,"message":"640","line":1,"column":7,"nodeType":"536","messageId":"537","endLine":1,"endColumn":17},{"ruleId":"534","severity":1,"message":"602","line":1,"column":10,"nodeType":"536","messageId":"537","endLine":1,"endColumn":21},{"ruleId":"534","severity":1,"message":"577","line":1,"column":35,"nodeType":"536","messageId":"537","endLine":1,"endColumn":44},{"ruleId":"534","severity":1,"message":"641","line":10,"column":8,"nodeType":"536","messageId":"537","endLine":10,"endColumn":19},{"ruleId":"534","severity":1,"message":"642","line":36,"column":19,"nodeType":"536","messageId":"537","endLine":36,"endColumn":29},{"ruleId":"543","severity":1,"message":"643","line":41,"column":6,"nodeType":"545","endLine":41,"endColumn":32,"suggestions":"644"},{"ruleId":"550","severity":1,"message":"551","line":10,"column":22,"nodeType":"552","messageId":"553","endLine":10,"endColumn":24},{"ruleId":"534","severity":1,"message":"561","line":3,"column":10,"nodeType":"536","messageId":"537","endLine":3,"endColumn":15},{"ruleId":"534","severity":1,"message":"576","line":3,"column":29,"nodeType":"536","messageId":"537","endLine":3,"endColumn":33},{"ruleId":"534","severity":1,"message":"577","line":3,"column":35,"nodeType":"536","messageId":"537","endLine":3,"endColumn":44},{"ruleId":"534","severity":1,"message":"645","line":27,"column":8,"nodeType":"536","messageId":"537","endLine":27,"endColumn":12},{"ruleId":"534","severity":1,"message":"593","line":30,"column":10,"nodeType":"536","messageId":"537","endLine":30,"endColumn":21},{"ruleId":"534","severity":1,"message":"646","line":32,"column":10,"nodeType":"536","messageId":"537","endLine":32,"endColumn":29},{"ruleId":"550","severity":1,"message":"551","line":49,"column":40,"nodeType":"552","messageId":"553","endLine":49,"endColumn":42},{"ruleId":"534","severity":1,"message":"647","line":129,"column":9,"nodeType":"536","messageId":"537","endLine":129,"endColumn":18},{"ruleId":"543","severity":1,"message":"648","line":156,"column":6,"nodeType":"545","endLine":156,"endColumn":25,"suggestions":"649"},{"ruleId":"543","severity":1,"message":"648","line":162,"column":6,"nodeType":"545","endLine":162,"endColumn":27,"suggestions":"650"},{"ruleId":"543","severity":1,"message":"651","line":177,"column":6,"nodeType":"545","endLine":177,"endColumn":33,"suggestions":"652"},{"ruleId":"543","severity":1,"message":"653","line":181,"column":3,"nodeType":"536","endLine":181,"endColumn":12,"suggestions":"654"},{"ruleId":"543","severity":1,"message":"655","line":195,"column":6,"nodeType":"545","endLine":195,"endColumn":21,"suggestions":"656"},{"ruleId":"543","severity":1,"message":"657","line":203,"column":6,"nodeType":"545","endLine":203,"endColumn":21,"suggestions":"658"},{"ruleId":"534","severity":1,"message":"659","line":7,"column":8,"nodeType":"536","messageId":"537","endLine":7,"endColumn":22},{"ruleId":"534","severity":1,"message":"561","line":9,"column":10,"nodeType":"536","messageId":"537","endLine":9,"endColumn":15},{"ruleId":"534","severity":1,"message":"560","line":9,"column":17,"nodeType":"536","messageId":"537","endLine":9,"endColumn":23},{"ruleId":"534","severity":1,"message":"576","line":9,"column":37,"nodeType":"536","messageId":"537","endLine":9,"endColumn":41},{"ruleId":"534","severity":1,"message":"540","line":13,"column":10,"nodeType":"536","messageId":"537","endLine":13,"endColumn":24},{"ruleId":"543","severity":1,"message":"660","line":116,"column":6,"nodeType":"545","endLine":116,"endColumn":35,"suggestions":"661"},{"ruleId":"534","severity":1,"message":"662","line":32,"column":11,"nodeType":"536","messageId":"537","endLine":32,"endColumn":17},{"ruleId":"543","severity":1,"message":"663","line":63,"column":6,"nodeType":"545","endLine":63,"endColumn":19,"suggestions":"664"},{"ruleId":"534","severity":1,"message":"593","line":14,"column":10,"nodeType":"536","messageId":"537","endLine":14,"endColumn":21},{"ruleId":"543","severity":1,"message":"665","line":117,"column":6,"nodeType":"545","endLine":117,"endColumn":25,"suggestions":"666"},{"ruleId":"550","severity":1,"message":"551","line":214,"column":37,"nodeType":"552","messageId":"553","endLine":214,"endColumn":39},{"ruleId":"534","severity":1,"message":"667","line":8,"column":9,"nodeType":"536","messageId":"537","endLine":8,"endColumn":18},{"ruleId":"534","severity":1,"message":"668","line":6,"column":27,"nodeType":"536","messageId":"537","endLine":6,"endColumn":45},{"ruleId":"550","severity":1,"message":"551","line":33,"column":61,"nodeType":"552","messageId":"553","endLine":33,"endColumn":63},{"ruleId":"550","severity":1,"message":"551","line":35,"column":68,"nodeType":"552","messageId":"553","endLine":35,"endColumn":70},{"ruleId":"543","severity":1,"message":"669","line":93,"column":6,"nodeType":"545","endLine":93,"endColumn":28,"suggestions":"670"},{"ruleId":"534","severity":1,"message":"671","line":60,"column":20,"nodeType":"536","messageId":"537","endLine":60,"endColumn":31},{"ruleId":"543","severity":1,"message":"672","line":84,"column":6,"nodeType":"545","endLine":84,"endColumn":8,"suggestions":"673"},{"ruleId":"534","severity":1,"message":"558","line":3,"column":29,"nodeType":"536","messageId":"537","endLine":3,"endColumn":37},{"ruleId":"550","severity":1,"message":"551","line":12,"column":22,"nodeType":"552","messageId":"553","endLine":12,"endColumn":24},{"ruleId":"674","severity":1,"message":"675","line":61,"column":3,"nodeType":"635","messageId":"676","endLine":66,"endColumn":6},{"ruleId":"550","severity":1,"message":"551","line":32,"column":59,"nodeType":"552","messageId":"553","endLine":32,"endColumn":61},{"ruleId":"550","severity":1,"message":"551","line":34,"column":66,"nodeType":"552","messageId":"553","endLine":34,"endColumn":68},{"ruleId":"543","severity":1,"message":"677","line":87,"column":6,"nodeType":"545","endLine":87,"endColumn":14,"suggestions":"678"},{"ruleId":"679","severity":1,"message":"680","line":34,"column":9,"nodeType":"592","messageId":"681","endLine":34,"endColumn":27},"no-native-reassign",["682"],"no-negated-in-lhs",["683"],"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'NavBar' is defined but never used.","'history' is assigned a value but never used.","'ToastContainer' is defined but never used.","'err' is assigned a value but never used.","'setErr' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'code', 'history', and 'state'. Either include them or remove the dependency array.","ArrayExpression",["684"],"'update' is assigned a value but never used.","'body' is assigned a value but never used.","'useRef' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'act' is defined but never used.","'useDispatch' is defined but never used.","'Card' is defined but never used.","'Loading' is defined but never used.","'useState' is defined but never used.","'UserName' is defined but never used.","'Switch' is defined but never used.","'Route' is defined but never used.","'loading' is assigned a value but never used.","'axios' is defined but never used.","'useCallback' is defined but never used.","Expected '!==' and instead saw '!='.","'res' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a value to be returned at the end of arrow function.","ArrowFunctionExpression","expectedAtEnd","'userName' is assigned a value but never used.","'setUserName' is assigned a value but never used.","'LinkButton' is defined but never used.","'Hls' is defined but never used.","'useHistory' is defined but never used.","'Link' is defined but never used.","'useParams' is defined but never used.","'VideoJS' is defined but never used.","'videoJsOptions' is assigned a value but never used.","'handlePlayerReady' is assigned a value but never used.","'closeIcon' is defined but never used.","'chatIcon' is defined but never used.","'personIcon' is defined but never used.","'follow' is assigned a value but never used.","React Hook useEffect contains a call to 'setLoading'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [user] as a second argument to the useEffect Hook.",["685"],"React Hook useEffect has a missing dependency: 'loggedUser._id'. Either include it or remove the dependency array.",["686"],"'Navbar' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'useSelector' is defined but never used.","'PushSpinner' is defined but never used.","'postActions' is defined but never used.","'GuardSpinner' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'page', 'pageSaved', and 'posts.length'. Either include them or remove the dependency array.",["687"],"'notify' is assigned a value but never used.","'hideCollabHandler' is assigned a value but never used.","'editIcon' is defined but never used.","'useLocation' is defined but never used.","Array.prototype.filter() expects a value to be returned at the end of arrow function.","React Hook useEffect has a missing dependency: 'props.token'. Either include it or remove the dependency array.",["688"],"React Hook useEffect has missing dependencies: 'dispatch', 'profileList.length', 'props._id', 'props.followersCnt', 'props.followingCnt', and 'props.usedAs'. Either include them or remove the dependency array.",["689"],"'click' is assigned a value but never used.","'setClick' is assigned a value but never used.","'codeIcon' is defined but never used.","'qualitySelector' is defined but never used.","'qualityLevels' is defined but never used.","React Hook useEffect has a missing dependency: 'player'. Either include it or remove the dependency array.",["690"],"React Hook useEffect has missing dependencies: 'player' and 'source'. Either include them or remove the dependency array.",["691"],"'loadingActions' is defined but never used.","'Fragment' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'postID'. Either include them or remove the dependency array.",["692"],"'count' is assigned a value but never used.","'useEffect' is defined but never used.","'CropIt' is defined but never used.","'startUploadURL' is defined but never used.","'P' is defined but never used.","'arrowIcon' is defined but never used.","'fs' is assigned a value but never used.","'blobToBase64' is defined but never used.","'getFileFromUrl' is defined but never used.","'data' is assigned a value but never used.","'profile' is assigned a value but never used.","'completeUploadResp' is assigned a value but never used.","'sent' is assigned a value but never used.","Array.prototype.map() expects a return value from arrow function.","ReturnStatement","expectedReturnValue","'postSlice' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'loggedUser', 'pageSaved', 'posts.length', and 'token'. Either include them or remove the dependency array.",["693"],"'production' is assigned a value but never used.","'AddProjects' is defined but never used.","'setHasMore' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'props.github_username'. Either include it or remove the dependency array.",["694"],"'test' is defined but never used.","'detailedPostActions' is defined but never used.","'playerRef' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'post'. Either include it or remove the dependency array.",["695"],["696"],"React Hook useEffect has missing dependencies: 'following', 'post.u_id._id', and 'props.loggedUser._id'. Either include them or remove the dependency array.",["697"],"React Hook useEffect contains a call to 'setUpvoteSrc'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [location.pathname, post.haveIUpvoted, post.haveIDownvoted] as a second argument to the useEffect Hook.",["698"],"React Hook useEffect has missing dependencies: 'location.pathname' and 'post.created_at'. Either include them or remove the dependency array.",["699"],"React Hook useEffect has missing dependencies: 'post.haveIDownvoted' and 'post.haveIUpvoted'. Either include them or remove the dependency array.",["700"],"'ProjectsGitHub' is defined but never used.","React Hook useEffect has missing dependencies: 'history' and 'props.userID'. Either include them or remove the dependency array.",["701"],"'result' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'props.myProfile', 'props.usedAs', and 'user._id'. Either include them or remove the dependency array.",["702"],"React Hook useEffect has a missing dependency: 'props.userID'. Either include it or remove the dependency array.",["703"],"'inputFile' is assigned a value but never used.","'commentReactionURL' is defined but never used.","React Hook useEffect has missing dependencies: 'dispatch' and 'props.token'. Either include them or remove the dependency array.",["704"],"'setPostDate' is assigned a value but never used.","React Hook useEffect has a missing dependency: 'comment.gif'. Either include it or remove the dependency array.",["705"],"no-unreachable","Unreachable code.","unreachableCode","React Hook useEffect has missing dependencies: 'dispatch', 'props.commentID', 'props.index', and 'props.token'. Either include them or remove the dependency array.",["706"],"react/jsx-pascal-case","Imported JSX component Message_sender must be in PascalCase or SCREAMING_SNAKE_CASE","usePascalOrSnakeCase","no-global-assign","no-unsafe-negation",{"desc":"707","fix":"708"},{"desc":"709","fix":"710"},{"desc":"711","fix":"712"},{"desc":"713","fix":"714"},{"desc":"715","fix":"716"},{"desc":"717","fix":"718"},{"desc":"719","fix":"720"},{"desc":"721","fix":"722"},{"desc":"723","fix":"724"},{"desc":"725","fix":"726"},{"desc":"727","fix":"728"},{"desc":"729","fix":"730"},{"desc":"731","fix":"732"},{"desc":"733","fix":"734"},{"desc":"735","fix":"736"},{"desc":"737","fix":"738"},{"desc":"739","fix":"740"},{"desc":"741","fix":"742"},{"desc":"743","fix":"744"},{"desc":"745","fix":"746"},{"desc":"747","fix":"748"},{"desc":"749","fix":"750"},{"desc":"751","fix":"752"},"Update the dependencies array to be: [code, history, props.token, state]",{"range":"753","text":"754"},"Add dependencies array: [user]",{"range":"755","text":"756"},"Update the dependencies array to be: [loggedUser._id, props.token, user]",{"range":"757","text":"758"},"Update the dependencies array to be: [dispatch, page, pageSaved, posts.length, props.token]",{"range":"759","text":"760"},"Update the dependencies array to be: [props.user_id, page, props.token]",{"range":"761","text":"762"},"Update the dependencies array to be: [props.token, page, props.usedAs, props.followingCnt, props.followersCnt, props._id, profileList.length, dispatch]",{"range":"763","text":"764"},"Update the dependencies array to be: [liveURL, player]",{"range":"765","text":"766"},"Update the dependencies array to be: [player, source]",{"range":"767","text":"768"},"Update the dependencies array to be: [dispatch, postID, props.token]",{"range":"769","text":"770"},"Update the dependencies array to be: [dispatch, loggedUser, page, pageSaved, posts.length, props.token, token]",{"range":"771","text":"772"},"Update the dependencies array to be: [props.userID, page, sort, props.github_username]",{"range":"773","text":"774"},"Update the dependencies array to be: [post, post.haveIUpvoted]",{"range":"775","text":"776"},"Update the dependencies array to be: [post, post.haveIDownvoted]",{"range":"777","text":"778"},"Update the dependencies array to be: [following, post.u_id._id, props.loggedUser._id, props.token, showMoreMenu]",{"range":"779","text":"780"},"Add dependencies array: [location.pathname, post.haveIUpvoted, post.haveIDownvoted]",{"range":"781","text":"782"},"Update the dependencies array to be: [location.pathname, post.created_at, props.loading]",{"range":"783","text":"784"},"Update the dependencies array to be: [post.haveIDownvoted, post.haveIUpvoted, props.loading]",{"range":"785","text":"786"},"Update the dependencies array to be: [history, props.github_username, props.userID, repo]",{"range":"787","text":"788"},"Update the dependencies array to be: [props.myProfile, props.token, props.usedAs, user._id]",{"range":"789","text":"790"},"Update the dependencies array to be: [props.token, page, props.userID]",{"range":"791","text":"792"},"Update the dependencies array to be: [props.postID, pageNo, props.token, dispatch]",{"range":"793","text":"794"},"Update the dependencies array to be: [comment.gif]",{"range":"795","text":"796"},"Update the dependencies array to be: [dispatch, pageNo, props.commentID, props.index, props.token]",{"range":"797","text":"798"},[1895,1908],"[code, history, props.token, state]",[3441,3441],", [user]",[3893,3912],"[loggedUser._id, props.token, user]",[2422,2435],"[dispatch, page, pageSaved, posts.length, props.token]",[3686,3707],"[props.user_id, page, props.token]",[2324,2343],"[props.token, page, props.usedAs, props.followingCnt, props.followersCnt, props._id, profileList.length, dispatch]",[532,541],"[liveURL, player]",[1077,1079],"[player, source]",[3231,3244],"[dispatch, postID, props.token]",[3652,3671],"[dispatch, loggedUser, page, pageSaved, posts.length, props.token, token]",[1401,1427],"[props.userID, page, sort, props.github_username]",[5229,5248],"[post, post.haveIUpvoted]",[5383,5404],"[post, post.haveIDownvoted]",[5915,5942],"[following, post.u_id._id, props.loggedUser._id, props.token, showMoreMenu]",[6294,6294],", [location.pathname, post.haveIUpvoted, post.haveIDownvoted]",[6535,6550],"[location.pathname, post.created_at, props.loading]",[6846,6861],"[post.haveIDownvoted, post.haveIUpvoted, props.loading]",[3292,3321],"[history, props.github_username, props.userID, repo]",[1552,1565],"[props.myProfile, props.token, props.usedAs, user._id]",[3546,3565],"[props.token, page, props.userID]",[3095,3117],"[props.postID, pageNo, props.token, dispatch]",[2934,2936],"[comment.gif]",[2881,2889],"[dispatch, pageNo, props.commentID, props.index, props.token]"]